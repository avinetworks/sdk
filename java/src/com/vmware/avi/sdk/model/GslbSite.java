/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.GslbGeoLocation;
import com.vmware.avi.sdk.model.GslbHealthMonitorProxy;
import com.vmware.avi.sdk.model.GslbSiteDnsVs;
import com.vmware.avi.sdk.model.IpAddr;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * GslbSite
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class GslbSite {
  @JsonProperty("address")
  private String address = null;

  @JsonProperty("cluster_uuid")
  private String clusterUuid = null;

  @JsonProperty("dns_vs_uuids")
  private List<String> dnsVsUuids = null;

  @JsonProperty("dns_vses")
  private List<GslbSiteDnsVs> dnsVses = null;

  @JsonProperty("enabled")
  private Boolean enabled = true;

  @JsonProperty("hm_proxies")
  private List<GslbHealthMonitorProxy> hmProxies = null;

  @JsonProperty("hm_shard_enabled")
  private Boolean hmShardEnabled = null;

  @JsonProperty("ip_addresses")
  private List<IpAddr> ipAddresses = null;

  @JsonProperty("location")
  private GslbGeoLocation location = null;

  @JsonProperty("member_type")
  private String memberType = "GSLB_PASSIVE_MEMBER";

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("port")
  private Integer port = 443;

  @JsonProperty("ratio")
  private Integer ratio = null;

  @JsonProperty("username")
  private String username = null;

  @JsonProperty("uuid")
  private String uuid = null;

  public GslbSite address(String address) {
    this.address = address;
    return this;
  }

   /**
   * IP Address or a DNS resolvable, fully qualified domain name of the Site Controller Cluster.
   * @return address
  **/
  @Schema(description = "IP Address or a DNS resolvable, fully qualified domain name of the Site Controller Cluster.")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public GslbSite clusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

   /**
   * UUID of the &#x27;Cluster&#x27; object of the Controller Cluster in this site.
   * @return clusterUuid
  **/
  @Schema(required = true, description = "UUID of the 'Cluster' object of the Controller Cluster in this site.")
  public String getClusterUuid() {
    return clusterUuid;
  }

  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }

  public GslbSite dnsVsUuids(List<String> dnsVsUuids) {
    this.dnsVsUuids = dnsVsUuids;
    return this;
  }

  public GslbSite addDnsVsUuidsItem(String dnsVsUuidsItem) {
    if (this.dnsVsUuids == null) {
      this.dnsVsUuids = new ArrayList<String>();
    }
    this.dnsVsUuids.add(dnsVsUuidsItem);
    return this;
  }

   /**
   * The DNS VSes on which the GslbServices shall be placed. The site has to be an ACTIVE member.  This field is deprecated in 17.2.3 and replaced by &#x27;dns_vses&#x27; field. . Field deprecated in 17.2.3.
   * @return dnsVsUuids
  **/
  @Schema(description = "The DNS VSes on which the GslbServices shall be placed. The site has to be an ACTIVE member.  This field is deprecated in 17.2.3 and replaced by 'dns_vses' field. . Field deprecated in 17.2.3.")
  public List<String> getDnsVsUuids() {
    return dnsVsUuids;
  }

  public void setDnsVsUuids(List<String> dnsVsUuids) {
    this.dnsVsUuids = dnsVsUuids;
  }

  public GslbSite dnsVses(List<GslbSiteDnsVs> dnsVses) {
    this.dnsVses = dnsVses;
    return this;
  }

  public GslbSite addDnsVsesItem(GslbSiteDnsVs dnsVsesItem) {
    if (this.dnsVses == null) {
      this.dnsVses = new ArrayList<GslbSiteDnsVs>();
    }
    this.dnsVses.add(dnsVsesItem);
    return this;
  }

   /**
   * This field identifies the DNS VS and the subdomains it hosts for Gslb services. . Field introduced in 17.2.3.
   * @return dnsVses
  **/
  @Schema(description = "This field identifies the DNS VS and the subdomains it hosts for Gslb services. . Field introduced in 17.2.3.")
  public List<GslbSiteDnsVs> getDnsVses() {
    return dnsVses;
  }

  public void setDnsVses(List<GslbSiteDnsVs> dnsVses) {
    this.dnsVses = dnsVses;
  }

  public GslbSite enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable or disable the Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance.  A disabled site&#x27;s configuration shall be retained but it will not get any new configuration updates.  It shall not participate in Health-Status monitoring.  VIPs of the Virtual Services on the disabled site shall not be sent in DNS response.  When a site transitions from disabled to enabled, it is treated similar to the addition of a new site.
   * @return enabled
  **/
  @Schema(description = "Enable or disable the Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance.  A disabled site's configuration shall be retained but it will not get any new configuration updates.  It shall not participate in Health-Status monitoring.  VIPs of the Virtual Services on the disabled site shall not be sent in DNS response.  When a site transitions from disabled to enabled, it is treated similar to the addition of a new site.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public GslbSite hmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
    return this;
  }

  public GslbSite addHmProxiesItem(GslbHealthMonitorProxy hmProxiesItem) {
    if (this.hmProxies == null) {
      this.hmProxies = new ArrayList<GslbHealthMonitorProxy>();
    }
    this.hmProxies.add(hmProxiesItem);
    return this;
  }

   /**
   * User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.
   * @return hmProxies
  **/
  @Schema(description = "User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.")
  public List<GslbHealthMonitorProxy> getHmProxies() {
    return hmProxies;
  }

  public void setHmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
  }

  public GslbSite hmShardEnabled(Boolean hmShardEnabled) {
    this.hmShardEnabled = hmShardEnabled;
    return this;
  }

   /**
   * This field enables the health monitor shard functionality on a site-basis. Field introduced in 18.2.2.
   * @return hmShardEnabled
  **/
  @Schema(description = "This field enables the health monitor shard functionality on a site-basis. Field introduced in 18.2.2.")
  public Boolean isHmShardEnabled() {
    return hmShardEnabled;
  }

  public void setHmShardEnabled(Boolean hmShardEnabled) {
    this.hmShardEnabled = hmShardEnabled;
  }

  public GslbSite ipAddresses(List<IpAddr> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public GslbSite addIpAddressesItem(IpAddr ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<IpAddr>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * IP Address(es) of the Site&#x27;s Cluster. For a 3-node cluster, either the cluster vIP is provided, or the list of controller IPs in the cluster are provided.
   * @return ipAddresses
  **/
  @Schema(description = "IP Address(es) of the Site's Cluster. For a 3-node cluster, either the cluster vIP is provided, or the list of controller IPs in the cluster are provided.")
  public List<IpAddr> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<IpAddr> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }

  public GslbSite location(GslbGeoLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public GslbGeoLocation getLocation() {
    return location;
  }

  public void setLocation(GslbGeoLocation location) {
    this.location = location;
  }

  public GslbSite memberType(String memberType) {
    this.memberType = memberType;
    return this;
  }

   /**
   * The site&#x27;s member type  A leader is set to ACTIVE while allmembers are set to passive. . Enum options - GSLB_ACTIVE_MEMBER, GSLB_PASSIVE_MEMBER.
   * @return memberType
  **/
  @Schema(description = "The site's member type  A leader is set to ACTIVE while allmembers are set to passive. . Enum options - GSLB_ACTIVE_MEMBER, GSLB_PASSIVE_MEMBER.")
  public String getMemberType() {
    return memberType;
  }

  public void setMemberType(String memberType) {
    this.memberType = memberType;
  }

  public GslbSite name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name for the Site Controller Cluster.
   * @return name
  **/
  @Schema(required = true, description = "Name for the Site Controller Cluster.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GslbSite password(String password) {
    this.password = password;
    return this;
  }

   /**
   * The password used when authenticating with the Site.
   * @return password
  **/
  @Schema(required = true, description = "The password used when authenticating with the Site.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public GslbSite port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * The Site Controller Cluster&#x27;s REST API port number. Allowed values are 1-65535.
   * @return port
  **/
  @Schema(description = "The Site Controller Cluster's REST API port number. Allowed values are 1-65535.")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public GslbSite ratio(Integer ratio) {
    this.ratio = ratio;
    return this;
  }

   /**
   * User can overide the individual GslbPoolMember ratio for all the VIPs/VS(es) of this site. If this field is not  configured then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.
   * @return ratio
  **/
  @Schema(description = "User can overide the individual GslbPoolMember ratio for all the VIPs/VS(es) of this site. If this field is not  configured then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.")
  public Integer getRatio() {
    return ratio;
  }

  public void setRatio(Integer ratio) {
    this.ratio = ratio;
  }

  public GslbSite username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The username used when authenticating with the Site. .
   * @return username
  **/
  @Schema(required = true, description = "The username used when authenticating with the Site. .")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public GslbSite uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * This field is used as a key in the datastore for the GslbSite table to encapsulate site-related info. . Field introduced in 17.2.5.
   * @return uuid
  **/
  @Schema(description = "This field is used as a key in the datastore for the GslbSite table to encapsulate site-related info. . Field introduced in 17.2.5.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GslbSite gslbSite = (GslbSite) o;
    return Objects.equals(this.address, gslbSite.address) &&
        Objects.equals(this.clusterUuid, gslbSite.clusterUuid) &&
        Objects.equals(this.dnsVsUuids, gslbSite.dnsVsUuids) &&
        Objects.equals(this.dnsVses, gslbSite.dnsVses) &&
        Objects.equals(this.enabled, gslbSite.enabled) &&
        Objects.equals(this.hmProxies, gslbSite.hmProxies) &&
        Objects.equals(this.hmShardEnabled, gslbSite.hmShardEnabled) &&
        Objects.equals(this.ipAddresses, gslbSite.ipAddresses) &&
        Objects.equals(this.location, gslbSite.location) &&
        Objects.equals(this.memberType, gslbSite.memberType) &&
        Objects.equals(this.name, gslbSite.name) &&
        Objects.equals(this.password, gslbSite.password) &&
        Objects.equals(this.port, gslbSite.port) &&
        Objects.equals(this.ratio, gslbSite.ratio) &&
        Objects.equals(this.username, gslbSite.username) &&
        Objects.equals(this.uuid, gslbSite.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, clusterUuid, dnsVsUuids, dnsVses, enabled, hmProxies, hmShardEnabled, ipAddresses, location, memberType, name, password, port, ratio, username, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GslbSite {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    dnsVsUuids: ").append(toIndentedString(dnsVsUuids)).append("\n");
    sb.append("    dnsVses: ").append(toIndentedString(dnsVses)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hmProxies: ").append(toIndentedString(hmProxies)).append("\n");
    sb.append("    hmShardEnabled: ").append(toIndentedString(hmShardEnabled)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    memberType: ").append(toIndentedString(memberType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
