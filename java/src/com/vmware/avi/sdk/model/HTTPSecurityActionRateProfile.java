/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.RateLimiter;
import com.vmware.avi.sdk.model.RateLimiterAction;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * HTTPSecurityActionRateProfile
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class HTTPSecurityActionRateProfile {
  @JsonProperty("action")
  private RateLimiterAction action = null;

  @JsonProperty("per_client_ip")
  private Boolean perClientIp = null;

  @JsonProperty("per_uri_path")
  private Boolean perUriPath = null;

  @JsonProperty("rate_limiter")
  private RateLimiter rateLimiter = null;

  public HTTPSecurityActionRateProfile action(RateLimiterAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(required = true, description = "")
  public RateLimiterAction getAction() {
    return action;
  }

  public void setAction(RateLimiterAction action) {
    this.action = action;
  }

  public HTTPSecurityActionRateProfile perClientIp(Boolean perClientIp) {
    this.perClientIp = perClientIp;
    return this;
  }

   /**
   * Rate limiting should be done on a per client ip basis. Field introduced in 20.1.1.
   * @return perClientIp
  **/
  @Schema(description = "Rate limiting should be done on a per client ip basis. Field introduced in 20.1.1.")
  public Boolean isPerClientIp() {
    return perClientIp;
  }

  public void setPerClientIp(Boolean perClientIp) {
    this.perClientIp = perClientIp;
  }

  public HTTPSecurityActionRateProfile perUriPath(Boolean perUriPath) {
    this.perUriPath = perUriPath;
    return this;
  }

   /**
   * Rate limiting should be done on a per request uri path basis. Field introduced in 20.1.1.
   * @return perUriPath
  **/
  @Schema(description = "Rate limiting should be done on a per request uri path basis. Field introduced in 20.1.1.")
  public Boolean isPerUriPath() {
    return perUriPath;
  }

  public void setPerUriPath(Boolean perUriPath) {
    this.perUriPath = perUriPath;
  }

  public HTTPSecurityActionRateProfile rateLimiter(RateLimiter rateLimiter) {
    this.rateLimiter = rateLimiter;
    return this;
  }

   /**
   * Get rateLimiter
   * @return rateLimiter
  **/
  @Schema(required = true, description = "")
  public RateLimiter getRateLimiter() {
    return rateLimiter;
  }

  public void setRateLimiter(RateLimiter rateLimiter) {
    this.rateLimiter = rateLimiter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPSecurityActionRateProfile htTPSecurityActionRateProfile = (HTTPSecurityActionRateProfile) o;
    return Objects.equals(this.action, htTPSecurityActionRateProfile.action) &&
        Objects.equals(this.perClientIp, htTPSecurityActionRateProfile.perClientIp) &&
        Objects.equals(this.perUriPath, htTPSecurityActionRateProfile.perUriPath) &&
        Objects.equals(this.rateLimiter, htTPSecurityActionRateProfile.rateLimiter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, perClientIp, perUriPath, rateLimiter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPSecurityActionRateProfile {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    perClientIp: ").append(toIndentedString(perClientIp)).append("\n");
    sb.append("    perUriPath: ").append(toIndentedString(perUriPath)).append("\n");
    sb.append("    rateLimiter: ").append(toIndentedString(rateLimiter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
