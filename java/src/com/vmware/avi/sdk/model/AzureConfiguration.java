/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.AzureNetworkInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * AzureConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class AzureConfiguration {
  @JsonProperty("availability_zones")
  private List<String> availabilityZones = null;

  @JsonProperty("cloud_credentials_ref")
  private String cloudCredentialsRef = null;

  @JsonProperty("des_id")
  private String desId = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("network_info")
  private List<AzureNetworkInfo> networkInfo = null;

  @JsonProperty("resource_group")
  private String resourceGroup = null;

  @JsonProperty("subscription_id")
  private String subscriptionId = null;

  @JsonProperty("use_azure_dns")
  private Boolean useAzureDns = null;

  @JsonProperty("use_enhanced_ha")
  private Boolean useEnhancedHa = null;

  @JsonProperty("use_managed_disks")
  private Boolean useManagedDisks = true;

  @JsonProperty("use_standard_alb")
  private Boolean useStandardAlb = null;

  public AzureConfiguration availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public AzureConfiguration addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<String>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

   /**
   * Availability zones to be used in Azure. Field introduced in 17.2.5.
   * @return availabilityZones
  **/
  @Schema(description = "Availability zones to be used in Azure. Field introduced in 17.2.5.")
  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }

  public AzureConfiguration cloudCredentialsRef(String cloudCredentialsRef) {
    this.cloudCredentialsRef = cloudCredentialsRef;
    return this;
  }

   /**
   * Credentials to access azure cloud. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.2.1.
   * @return cloudCredentialsRef
  **/
  @Schema(description = "Credentials to access azure cloud. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.2.1.")
  public String getCloudCredentialsRef() {
    return cloudCredentialsRef;
  }

  public void setCloudCredentialsRef(String cloudCredentialsRef) {
    this.cloudCredentialsRef = cloudCredentialsRef;
  }

  public AzureConfiguration desId(String desId) {
    this.desId = desId;
    return this;
  }

   /**
   * Disks Encryption Set resource-id (des_id) to encrypt se image and managed disk using customer-managed-keys. Field introduced in 20.1.1.
   * @return desId
  **/
  @Schema(description = "Disks Encryption Set resource-id (des_id) to encrypt se image and managed disk using customer-managed-keys. Field introduced in 20.1.1.")
  public String getDesId() {
    return desId;
  }

  public void setDesId(String desId) {
    this.desId = desId;
  }

  public AzureConfiguration location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Azure location where this cloud will be located. Field introduced in 17.2.1.
   * @return location
  **/
  @Schema(description = "Azure location where this cloud will be located. Field introduced in 17.2.1.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public AzureConfiguration networkInfo(List<AzureNetworkInfo> networkInfo) {
    this.networkInfo = networkInfo;
    return this;
  }

  public AzureConfiguration addNetworkInfoItem(AzureNetworkInfo networkInfoItem) {
    if (this.networkInfo == null) {
      this.networkInfo = new ArrayList<AzureNetworkInfo>();
    }
    this.networkInfo.add(networkInfoItem);
    return this;
  }

   /**
   * Azure virtual network and subnet information. Field introduced in 17.2.1.
   * @return networkInfo
  **/
  @Schema(description = "Azure virtual network and subnet information. Field introduced in 17.2.1.")
  public List<AzureNetworkInfo> getNetworkInfo() {
    return networkInfo;
  }

  public void setNetworkInfo(List<AzureNetworkInfo> networkInfo) {
    this.networkInfo = networkInfo;
  }

  public AzureConfiguration resourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
    return this;
  }

   /**
   * Azure resource group dedicated for Avi Controller. Avi Controller will create all its resources in this resource group. Field introduced in 17.2.1.
   * @return resourceGroup
  **/
  @Schema(description = "Azure resource group dedicated for Avi Controller. Avi Controller will create all its resources in this resource group. Field introduced in 17.2.1.")
  public String getResourceGroup() {
    return resourceGroup;
  }

  public void setResourceGroup(String resourceGroup) {
    this.resourceGroup = resourceGroup;
  }

  public AzureConfiguration subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Subscription Id for the Azure subscription. Field introduced in 17.2.1.
   * @return subscriptionId
  **/
  @Schema(description = "Subscription Id for the Azure subscription. Field introduced in 17.2.1.")
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public AzureConfiguration useAzureDns(Boolean useAzureDns) {
    this.useAzureDns = useAzureDns;
    return this;
  }

   /**
   * Azure is the DNS provider. Field introduced in 17.2.1.
   * @return useAzureDns
  **/
  @Schema(description = "Azure is the DNS provider. Field introduced in 17.2.1.")
  public Boolean isUseAzureDns() {
    return useAzureDns;
  }

  public void setUseAzureDns(Boolean useAzureDns) {
    this.useAzureDns = useAzureDns;
  }

  public AzureConfiguration useEnhancedHa(Boolean useEnhancedHa) {
    this.useEnhancedHa = useEnhancedHa;
    return this;
  }

   /**
   * Use Azure&#x27;s enhanced HA features. This needs a public IP to be associated with the VIP. . Field introduced in 17.2.1.
   * @return useEnhancedHa
  **/
  @Schema(description = "Use Azure's enhanced HA features. This needs a public IP to be associated with the VIP. . Field introduced in 17.2.1.")
  public Boolean isUseEnhancedHa() {
    return useEnhancedHa;
  }

  public void setUseEnhancedHa(Boolean useEnhancedHa) {
    this.useEnhancedHa = useEnhancedHa;
  }

  public AzureConfiguration useManagedDisks(Boolean useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
    return this;
  }

   /**
   * Use Azure managed disks for SE storage. Field introduced in 17.2.2.
   * @return useManagedDisks
  **/
  @Schema(description = "Use Azure managed disks for SE storage. Field introduced in 17.2.2.")
  public Boolean isUseManagedDisks() {
    return useManagedDisks;
  }

  public void setUseManagedDisks(Boolean useManagedDisks) {
    this.useManagedDisks = useManagedDisks;
  }

  public AzureConfiguration useStandardAlb(Boolean useStandardAlb) {
    this.useStandardAlb = useStandardAlb;
    return this;
  }

   /**
   * Use Standard SKU Azure Load Balancer. By default Basic SKU Load Balancer is used. Field introduced in 17.2.7.
   * @return useStandardAlb
  **/
  @Schema(description = "Use Standard SKU Azure Load Balancer. By default Basic SKU Load Balancer is used. Field introduced in 17.2.7.")
  public Boolean isUseStandardAlb() {
    return useStandardAlb;
  }

  public void setUseStandardAlb(Boolean useStandardAlb) {
    this.useStandardAlb = useStandardAlb;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureConfiguration azureConfiguration = (AzureConfiguration) o;
    return Objects.equals(this.availabilityZones, azureConfiguration.availabilityZones) &&
        Objects.equals(this.cloudCredentialsRef, azureConfiguration.cloudCredentialsRef) &&
        Objects.equals(this.desId, azureConfiguration.desId) &&
        Objects.equals(this.location, azureConfiguration.location) &&
        Objects.equals(this.networkInfo, azureConfiguration.networkInfo) &&
        Objects.equals(this.resourceGroup, azureConfiguration.resourceGroup) &&
        Objects.equals(this.subscriptionId, azureConfiguration.subscriptionId) &&
        Objects.equals(this.useAzureDns, azureConfiguration.useAzureDns) &&
        Objects.equals(this.useEnhancedHa, azureConfiguration.useEnhancedHa) &&
        Objects.equals(this.useManagedDisks, azureConfiguration.useManagedDisks) &&
        Objects.equals(this.useStandardAlb, azureConfiguration.useStandardAlb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZones, cloudCredentialsRef, desId, location, networkInfo, resourceGroup, subscriptionId, useAzureDns, useEnhancedHa, useManagedDisks, useStandardAlb);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureConfiguration {\n");
    
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    cloudCredentialsRef: ").append(toIndentedString(cloudCredentialsRef)).append("\n");
    sb.append("    desId: ").append(toIndentedString(desId)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    networkInfo: ").append(toIndentedString(networkInfo)).append("\n");
    sb.append("    resourceGroup: ").append(toIndentedString(resourceGroup)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    useAzureDns: ").append(toIndentedString(useAzureDns)).append("\n");
    sb.append("    useEnhancedHa: ").append(toIndentedString(useEnhancedHa)).append("\n");
    sb.append("    useManagedDisks: ").append(toIndentedString(useManagedDisks)).append("\n");
    sb.append("    useStandardAlb: ").append(toIndentedString(useStandardAlb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
