/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.AuthAttributeMatch;
import com.vmware.avi.sdk.model.HostHdrMatch;
import com.vmware.avi.sdk.model.MethodMatch;
import com.vmware.avi.sdk.model.PathMatch;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * AuthorizationMatch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class AuthorizationMatch {
  @JsonProperty("attr_matches")
  private List<AuthAttributeMatch> attrMatches = null;

  @JsonProperty("host_hdr")
  private HostHdrMatch hostHdr = null;

  @JsonProperty("method")
  private MethodMatch method = null;

  @JsonProperty("path")
  private PathMatch path = null;

  public AuthorizationMatch attrMatches(List<AuthAttributeMatch> attrMatches) {
    this.attrMatches = attrMatches;
    return this;
  }

  public AuthorizationMatch addAttrMatchesItem(AuthAttributeMatch attrMatchesItem) {
    if (this.attrMatches == null) {
      this.attrMatches = new ArrayList<AuthAttributeMatch>();
    }
    this.attrMatches.add(attrMatchesItem);
    return this;
  }

   /**
   * Attributes whose values need to be matched . Field introduced in 18.2.5.
   * @return attrMatches
  **/
  @Schema(description = "Attributes whose values need to be matched . Field introduced in 18.2.5.")
  public List<AuthAttributeMatch> getAttrMatches() {
    return attrMatches;
  }

  public void setAttrMatches(List<AuthAttributeMatch> attrMatches) {
    this.attrMatches = attrMatches;
  }

  public AuthorizationMatch hostHdr(HostHdrMatch hostHdr) {
    this.hostHdr = hostHdr;
    return this;
  }

   /**
   * Get hostHdr
   * @return hostHdr
  **/
  @Schema(description = "")
  public HostHdrMatch getHostHdr() {
    return hostHdr;
  }

  public void setHostHdr(HostHdrMatch hostHdr) {
    this.hostHdr = hostHdr;
  }

  public AuthorizationMatch method(MethodMatch method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @Schema(description = "")
  public MethodMatch getMethod() {
    return method;
  }

  public void setMethod(MethodMatch method) {
    this.method = method;
  }

  public AuthorizationMatch path(PathMatch path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public PathMatch getPath() {
    return path;
  }

  public void setPath(PathMatch path) {
    this.path = path;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationMatch authorizationMatch = (AuthorizationMatch) o;
    return Objects.equals(this.attrMatches, authorizationMatch.attrMatches) &&
        Objects.equals(this.hostHdr, authorizationMatch.hostHdr) &&
        Objects.equals(this.method, authorizationMatch.method) &&
        Objects.equals(this.path, authorizationMatch.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attrMatches, hostHdr, method, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationMatch {\n");
    
    sb.append("    attrMatches: ").append(toIndentedString(attrMatches)).append("\n");
    sb.append("    hostHdr: ").append(toIndentedString(hostHdr)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
