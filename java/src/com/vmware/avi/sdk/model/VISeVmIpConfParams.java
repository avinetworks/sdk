/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * VISeVmIpConfParams
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class VISeVmIpConfParams {
  @JsonProperty("default_gw")
  private String defaultGw = null;

  @JsonProperty("mgmt_ip_addr")
  private String mgmtIpAddr = null;

  @JsonProperty("mgmt_ip_type")
  private String mgmtIpType = null;

  @JsonProperty("mgmt_net_mask")
  private String mgmtNetMask = null;

  public VISeVmIpConfParams defaultGw(String defaultGw) {
    this.defaultGw = defaultGw;
    return this;
  }

   /**
   * default_gw of VISeVmIpConfParams.
   * @return defaultGw
  **/
  @Schema(description = "default_gw of VISeVmIpConfParams.")
  public String getDefaultGw() {
    return defaultGw;
  }

  public void setDefaultGw(String defaultGw) {
    this.defaultGw = defaultGw;
  }

  public VISeVmIpConfParams mgmtIpAddr(String mgmtIpAddr) {
    this.mgmtIpAddr = mgmtIpAddr;
    return this;
  }

   /**
   * mgmt_ip_addr of VISeVmIpConfParams.
   * @return mgmtIpAddr
  **/
  @Schema(description = "mgmt_ip_addr of VISeVmIpConfParams.")
  public String getMgmtIpAddr() {
    return mgmtIpAddr;
  }

  public void setMgmtIpAddr(String mgmtIpAddr) {
    this.mgmtIpAddr = mgmtIpAddr;
  }

  public VISeVmIpConfParams mgmtIpType(String mgmtIpType) {
    this.mgmtIpType = mgmtIpType;
    return this;
  }

   /**
   *  Enum options - VNIC_IP_TYPE_DHCP, VNIC_IP_TYPE_STATIC.
   * @return mgmtIpType
  **/
  @Schema(required = true, description = " Enum options - VNIC_IP_TYPE_DHCP, VNIC_IP_TYPE_STATIC.")
  public String getMgmtIpType() {
    return mgmtIpType;
  }

  public void setMgmtIpType(String mgmtIpType) {
    this.mgmtIpType = mgmtIpType;
  }

  public VISeVmIpConfParams mgmtNetMask(String mgmtNetMask) {
    this.mgmtNetMask = mgmtNetMask;
    return this;
  }

   /**
   * mgmt_net_mask of VISeVmIpConfParams.
   * @return mgmtNetMask
  **/
  @Schema(description = "mgmt_net_mask of VISeVmIpConfParams.")
  public String getMgmtNetMask() {
    return mgmtNetMask;
  }

  public void setMgmtNetMask(String mgmtNetMask) {
    this.mgmtNetMask = mgmtNetMask;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VISeVmIpConfParams viSeVmIpConfParams = (VISeVmIpConfParams) o;
    return Objects.equals(this.defaultGw, viSeVmIpConfParams.defaultGw) &&
        Objects.equals(this.mgmtIpAddr, viSeVmIpConfParams.mgmtIpAddr) &&
        Objects.equals(this.mgmtIpType, viSeVmIpConfParams.mgmtIpType) &&
        Objects.equals(this.mgmtNetMask, viSeVmIpConfParams.mgmtNetMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultGw, mgmtIpAddr, mgmtIpType, mgmtNetMask);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VISeVmIpConfParams {\n");
    
    sb.append("    defaultGw: ").append(toIndentedString(defaultGw)).append("\n");
    sb.append("    mgmtIpAddr: ").append(toIndentedString(mgmtIpAddr)).append("\n");
    sb.append("    mgmtIpType: ").append(toIndentedString(mgmtIpType)).append("\n");
    sb.append("    mgmtNetMask: ").append(toIndentedString(mgmtNetMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
