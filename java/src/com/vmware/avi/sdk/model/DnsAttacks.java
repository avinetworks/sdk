/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.DnsAttack;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * DnsAttacks
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class DnsAttacks {
  @JsonProperty("attacks")
  private List<DnsAttack> attacks = null;

  @JsonProperty("oper_mode")
  private String operMode = null;

  public DnsAttacks attacks(List<DnsAttack> attacks) {
    this.attacks = attacks;
    return this;
  }

  public DnsAttacks addAttacksItem(DnsAttack attacksItem) {
    if (this.attacks == null) {
      this.attacks = new ArrayList<DnsAttack>();
    }
    this.attacks.add(attacksItem);
    return this;
  }

   /**
   * Mode of dealing with the attacks - perform detection only, or detect and mitigate the attacks. Field introduced in 18.2.1.
   * @return attacks
  **/
  @Schema(description = "Mode of dealing with the attacks - perform detection only, or detect and mitigate the attacks. Field introduced in 18.2.1.")
  public List<DnsAttack> getAttacks() {
    return attacks;
  }

  public void setAttacks(List<DnsAttack> attacks) {
    this.attacks = attacks;
  }

  public DnsAttacks operMode(String operMode) {
    this.operMode = operMode;
    return this;
  }

   /**
   * Mode of dealing with the attacks - perform detection only, or detect and mitigate the attacks. Enum options - DETECTION, MITIGATION. Field introduced in 18.2.1.
   * @return operMode
  **/
  @Schema(description = "Mode of dealing with the attacks - perform detection only, or detect and mitigate the attacks. Enum options - DETECTION, MITIGATION. Field introduced in 18.2.1.")
  public String getOperMode() {
    return operMode;
  }

  public void setOperMode(String operMode) {
    this.operMode = operMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DnsAttacks dnsAttacks = (DnsAttacks) o;
    return Objects.equals(this.attacks, dnsAttacks.attacks) &&
        Objects.equals(this.operMode, dnsAttacks.operMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attacks, operMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DnsAttacks {\n");
    
    sb.append("    attacks: ").append(toIndentedString(attacks)).append("\n");
    sb.append("    operMode: ").append(toIndentedString(operMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
