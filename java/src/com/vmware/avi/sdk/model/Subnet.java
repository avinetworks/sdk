/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.IpAddr;
import com.vmware.avi.sdk.model.IpAddrPrefix;
import com.vmware.avi.sdk.model.IpAddrRange;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Subnet
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class Subnet {
  @JsonProperty("prefix")
  private IpAddrPrefix prefix = null;

  @JsonProperty("static_ips")
  private List<IpAddr> staticIps = null;

  @JsonProperty("static_ranges")
  private List<IpAddrRange> staticRanges = null;

  public Subnet prefix(IpAddrPrefix prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @Schema(required = true, description = "")
  public IpAddrPrefix getPrefix() {
    return prefix;
  }

  public void setPrefix(IpAddrPrefix prefix) {
    this.prefix = prefix;
  }

  public Subnet staticIps(List<IpAddr> staticIps) {
    this.staticIps = staticIps;
    return this;
  }

  public Subnet addStaticIpsItem(IpAddr staticIpsItem) {
    if (this.staticIps == null) {
      this.staticIps = new ArrayList<IpAddr>();
    }
    this.staticIps.add(staticIpsItem);
    return this;
  }

   /**
   * Specify a pool of IP addresses for use in Service Engines.
   * @return staticIps
  **/
  @Schema(description = "Specify a pool of IP addresses for use in Service Engines.")
  public List<IpAddr> getStaticIps() {
    return staticIps;
  }

  public void setStaticIps(List<IpAddr> staticIps) {
    this.staticIps = staticIps;
  }

  public Subnet staticRanges(List<IpAddrRange> staticRanges) {
    this.staticRanges = staticRanges;
    return this;
  }

  public Subnet addStaticRangesItem(IpAddrRange staticRangesItem) {
    if (this.staticRanges == null) {
      this.staticRanges = new ArrayList<IpAddrRange>();
    }
    this.staticRanges.add(staticRangesItem);
    return this;
  }

   /**
   * Placeholder for description of property static_ranges of obj type Subnet field type str  type object
   * @return staticRanges
  **/
  @Schema(description = "Placeholder for description of property static_ranges of obj type Subnet field type str  type object")
  public List<IpAddrRange> getStaticRanges() {
    return staticRanges;
  }

  public void setStaticRanges(List<IpAddrRange> staticRanges) {
    this.staticRanges = staticRanges;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subnet subnet = (Subnet) o;
    return Objects.equals(this.prefix, subnet.prefix) &&
        Objects.equals(this.staticIps, subnet.staticIps) &&
        Objects.equals(this.staticRanges, subnet.staticRanges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefix, staticIps, staticRanges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subnet {\n");
    
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    staticIps: ").append(toIndentedString(staticIps)).append("\n");
    sb.append("    staticRanges: ").append(toIndentedString(staticRanges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
