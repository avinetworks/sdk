/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * LdapUserBindSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class LdapUserBindSettings {
  @JsonProperty("dn_template")
  private String dnTemplate = null;

  @JsonProperty("token")
  private String token = "<user>";

  @JsonProperty("user_attributes")
  private List<String> userAttributes = null;

  @JsonProperty("user_id_attribute")
  private String userIdAttribute = null;

  public LdapUserBindSettings dnTemplate(String dnTemplate) {
    this.dnTemplate = dnTemplate;
    return this;
  }

   /**
   * LDAP user DN pattern is used to bind LDAP user after replacing the user token with real username.
   * @return dnTemplate
  **/
  @Schema(description = "LDAP user DN pattern is used to bind LDAP user after replacing the user token with real username.")
  public String getDnTemplate() {
    return dnTemplate;
  }

  public void setDnTemplate(String dnTemplate) {
    this.dnTemplate = dnTemplate;
  }

  public LdapUserBindSettings token(String token) {
    this.token = token;
    return this;
  }

   /**
   * LDAP token is replaced with real user name in the user DN pattern.
   * @return token
  **/
  @Schema(description = "LDAP token is replaced with real user name in the user DN pattern.")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public LdapUserBindSettings userAttributes(List<String> userAttributes) {
    this.userAttributes = userAttributes;
    return this;
  }

  public LdapUserBindSettings addUserAttributesItem(String userAttributesItem) {
    if (this.userAttributes == null) {
      this.userAttributes = new ArrayList<String>();
    }
    this.userAttributes.add(userAttributesItem);
    return this;
  }

   /**
   * LDAP user attributes to fetch on a successful user bind.
   * @return userAttributes
  **/
  @Schema(description = "LDAP user attributes to fetch on a successful user bind.")
  public List<String> getUserAttributes() {
    return userAttributes;
  }

  public void setUserAttributes(List<String> userAttributes) {
    this.userAttributes = userAttributes;
  }

  public LdapUserBindSettings userIdAttribute(String userIdAttribute) {
    this.userIdAttribute = userIdAttribute;
    return this;
  }

   /**
   * LDAP user id attribute is the login attribute that uniquely identifies a single user record.
   * @return userIdAttribute
  **/
  @Schema(description = "LDAP user id attribute is the login attribute that uniquely identifies a single user record.")
  public String getUserIdAttribute() {
    return userIdAttribute;
  }

  public void setUserIdAttribute(String userIdAttribute) {
    this.userIdAttribute = userIdAttribute;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LdapUserBindSettings ldapUserBindSettings = (LdapUserBindSettings) o;
    return Objects.equals(this.dnTemplate, ldapUserBindSettings.dnTemplate) &&
        Objects.equals(this.token, ldapUserBindSettings.token) &&
        Objects.equals(this.userAttributes, ldapUserBindSettings.userAttributes) &&
        Objects.equals(this.userIdAttribute, ldapUserBindSettings.userIdAttribute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dnTemplate, token, userAttributes, userIdAttribute);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LdapUserBindSettings {\n");
    
    sb.append("    dnTemplate: ").append(toIndentedString(dnTemplate)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userAttributes: ").append(toIndentedString(userAttributes)).append("\n");
    sb.append("    userIdAttribute: ").append(toIndentedString(userIdAttribute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
