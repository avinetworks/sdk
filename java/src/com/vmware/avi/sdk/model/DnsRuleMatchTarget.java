/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.DnsClientIpMatch;
import com.vmware.avi.sdk.model.DnsGeoLocationMatch;
import com.vmware.avi.sdk.model.DnsQueryNameMatch;
import com.vmware.avi.sdk.model.DnsQueryTypeMatch;
import com.vmware.avi.sdk.model.DnsTransportProtocolMatch;
import com.vmware.avi.sdk.model.IpAddrMatch;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * DnsRuleMatchTarget
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class DnsRuleMatchTarget {
  @JsonProperty("client_ip")
  private IpAddrMatch clientIp = null;

  @JsonProperty("client_ip_address")
  private DnsClientIpMatch clientIpAddress = null;

  @JsonProperty("geo_location")
  private DnsGeoLocationMatch geoLocation = null;

  @JsonProperty("protocol")
  private DnsTransportProtocolMatch protocol = null;

  @JsonProperty("query_name")
  private DnsQueryNameMatch queryName = null;

  @JsonProperty("query_type")
  private DnsQueryTypeMatch queryType = null;

  public DnsRuleMatchTarget clientIp(IpAddrMatch clientIp) {
    this.clientIp = clientIp;
    return this;
  }

   /**
   * Get clientIp
   * @return clientIp
  **/
  @Schema(description = "")
  public IpAddrMatch getClientIp() {
    return clientIp;
  }

  public void setClientIp(IpAddrMatch clientIp) {
    this.clientIp = clientIp;
  }

  public DnsRuleMatchTarget clientIpAddress(DnsClientIpMatch clientIpAddress) {
    this.clientIpAddress = clientIpAddress;
    return this;
  }

   /**
   * Get clientIpAddress
   * @return clientIpAddress
  **/
  @Schema(description = "")
  public DnsClientIpMatch getClientIpAddress() {
    return clientIpAddress;
  }

  public void setClientIpAddress(DnsClientIpMatch clientIpAddress) {
    this.clientIpAddress = clientIpAddress;
  }

  public DnsRuleMatchTarget geoLocation(DnsGeoLocationMatch geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

   /**
   * Get geoLocation
   * @return geoLocation
  **/
  @Schema(description = "")
  public DnsGeoLocationMatch getGeoLocation() {
    return geoLocation;
  }

  public void setGeoLocation(DnsGeoLocationMatch geoLocation) {
    this.geoLocation = geoLocation;
  }

  public DnsRuleMatchTarget protocol(DnsTransportProtocolMatch protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(description = "")
  public DnsTransportProtocolMatch getProtocol() {
    return protocol;
  }

  public void setProtocol(DnsTransportProtocolMatch protocol) {
    this.protocol = protocol;
  }

  public DnsRuleMatchTarget queryName(DnsQueryNameMatch queryName) {
    this.queryName = queryName;
    return this;
  }

   /**
   * Get queryName
   * @return queryName
  **/
  @Schema(description = "")
  public DnsQueryNameMatch getQueryName() {
    return queryName;
  }

  public void setQueryName(DnsQueryNameMatch queryName) {
    this.queryName = queryName;
  }

  public DnsRuleMatchTarget queryType(DnsQueryTypeMatch queryType) {
    this.queryType = queryType;
    return this;
  }

   /**
   * Get queryType
   * @return queryType
  **/
  @Schema(description = "")
  public DnsQueryTypeMatch getQueryType() {
    return queryType;
  }

  public void setQueryType(DnsQueryTypeMatch queryType) {
    this.queryType = queryType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DnsRuleMatchTarget dnsRuleMatchTarget = (DnsRuleMatchTarget) o;
    return Objects.equals(this.clientIp, dnsRuleMatchTarget.clientIp) &&
        Objects.equals(this.clientIpAddress, dnsRuleMatchTarget.clientIpAddress) &&
        Objects.equals(this.geoLocation, dnsRuleMatchTarget.geoLocation) &&
        Objects.equals(this.protocol, dnsRuleMatchTarget.protocol) &&
        Objects.equals(this.queryName, dnsRuleMatchTarget.queryName) &&
        Objects.equals(this.queryType, dnsRuleMatchTarget.queryType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientIp, clientIpAddress, geoLocation, protocol, queryName, queryType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DnsRuleMatchTarget {\n");
    
    sb.append("    clientIp: ").append(toIndentedString(clientIp)).append("\n");
    sb.append("    clientIpAddress: ").append(toIndentedString(clientIpAddress)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    queryName: ").append(toIndentedString(queryName)).append("\n");
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
