/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.RebootData;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * PatchInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class PatchInfo {
  @JsonProperty("patch_type")
  private String patchType = null;

  @JsonProperty("reboot")
  private Boolean reboot = null;

  @JsonProperty("reboot_list")
  private List<RebootData> rebootList = null;

  public PatchInfo patchType(String patchType) {
    this.patchType = patchType;
    return this;
  }

   /**
   * Patch type describes the controller or se patch type. Field introduced in 18.2.6.
   * @return patchType
  **/
  @Schema(description = "Patch type describes the controller or se patch type. Field introduced in 18.2.6.")
  public String getPatchType() {
    return patchType;
  }

  public void setPatchType(String patchType) {
    this.patchType = patchType;
  }

  public PatchInfo reboot(Boolean reboot) {
    this.reboot = reboot;
    return this;
  }

   /**
   * This variable tells whether reboot has to be performed. Field introduced in 18.2.6.
   * @return reboot
  **/
  @Schema(description = "This variable tells whether reboot has to be performed. Field introduced in 18.2.6.")
  public Boolean isReboot() {
    return reboot;
  }

  public void setReboot(Boolean reboot) {
    this.reboot = reboot;
  }

  public PatchInfo rebootList(List<RebootData> rebootList) {
    this.rebootList = rebootList;
    return this;
  }

  public PatchInfo addRebootListItem(RebootData rebootListItem) {
    if (this.rebootList == null) {
      this.rebootList = new ArrayList<RebootData>();
    }
    this.rebootList.add(rebootListItem);
    return this;
  }

   /**
   * This variable is for full list of patch reboot details. Field introduced in 18.2.8, 20.1.1.
   * @return rebootList
  **/
  @Schema(description = "This variable is for full list of patch reboot details. Field introduced in 18.2.8, 20.1.1.")
  public List<RebootData> getRebootList() {
    return rebootList;
  }

  public void setRebootList(List<RebootData> rebootList) {
    this.rebootList = rebootList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchInfo patchInfo = (PatchInfo) o;
    return Objects.equals(this.patchType, patchInfo.patchType) &&
        Objects.equals(this.reboot, patchInfo.reboot) &&
        Objects.equals(this.rebootList, patchInfo.rebootList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(patchType, reboot, rebootList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchInfo {\n");
    
    sb.append("    patchType: ").append(toIndentedString(patchType)).append("\n");
    sb.append("    reboot: ").append(toIndentedString(reboot)).append("\n");
    sb.append("    rebootList: ").append(toIndentedString(rebootList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
