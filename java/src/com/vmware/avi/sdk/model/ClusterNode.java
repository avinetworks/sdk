/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.IpAddr;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ClusterNode
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class ClusterNode {
  @JsonProperty("categories")
  private List<String> categories = null;

  @JsonProperty("ip")
  private IpAddr ip = null;

  @JsonProperty("name")
  private String name = "node";

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("public_ip_or_name")
  private IpAddr publicIpOrName = null;

  @JsonProperty("vm_hostname")
  private String vmHostname = null;

  @JsonProperty("vm_mor")
  private String vmMor = null;

  @JsonProperty("vm_name")
  private String vmName = null;

  @JsonProperty("vm_uuid")
  private String vmUuid = null;

  public ClusterNode categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public ClusterNode addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<String>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Optional service categories that a node can be assigned (e.g. SYSTEM, INFRASTRUCTURE or ANALYTICS). Field introduced in 18.1.1.
   * @return categories
  **/
  @Schema(description = "Optional service categories that a node can be assigned (e.g. SYSTEM, INFRASTRUCTURE or ANALYTICS). Field introduced in 18.1.1.")
  public List<String> getCategories() {
    return categories;
  }

  public void setCategories(List<String> categories) {
    this.categories = categories;
  }

  public ClusterNode ip(IpAddr ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(required = true, description = "")
  public IpAddr getIp() {
    return ip;
  }

  public void setIp(IpAddr ip) {
    this.ip = ip;
  }

  public ClusterNode name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object.
   * @return name
  **/
  @Schema(description = "Name of the object.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ClusterNode password(String password) {
    this.password = password;
    return this;
  }

   /**
   * The password we will use when authenticating with this node (Not persisted). Field introduced in 18.2.3.
   * @return password
  **/
  @Schema(description = "The password we will use when authenticating with this node (Not persisted). Field introduced in 18.2.3.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public ClusterNode publicIpOrName(IpAddr publicIpOrName) {
    this.publicIpOrName = publicIpOrName;
    return this;
  }

   /**
   * Get publicIpOrName
   * @return publicIpOrName
  **/
  @Schema(description = "")
  public IpAddr getPublicIpOrName() {
    return publicIpOrName;
  }

  public void setPublicIpOrName(IpAddr publicIpOrName) {
    this.publicIpOrName = publicIpOrName;
  }

  public ClusterNode vmHostname(String vmHostname) {
    this.vmHostname = vmHostname;
    return this;
  }

   /**
   * Hostname assigned to this controller VM.
   * @return vmHostname
  **/
  @Schema(description = "Hostname assigned to this controller VM.")
  public String getVmHostname() {
    return vmHostname;
  }

  public void setVmHostname(String vmHostname) {
    this.vmHostname = vmHostname;
  }

  public ClusterNode vmMor(String vmMor) {
    this.vmMor = vmMor;
    return this;
  }

   /**
   * Managed object reference of this controller VM.
   * @return vmMor
  **/
  @Schema(description = "Managed object reference of this controller VM.")
  public String getVmMor() {
    return vmMor;
  }

  public void setVmMor(String vmMor) {
    this.vmMor = vmMor;
  }

  public ClusterNode vmName(String vmName) {
    this.vmName = vmName;
    return this;
  }

   /**
   * Name of the controller VM.
   * @return vmName
  **/
  @Schema(description = "Name of the controller VM.")
  public String getVmName() {
    return vmName;
  }

  public void setVmName(String vmName) {
    this.vmName = vmName;
  }

  public ClusterNode vmUuid(String vmUuid) {
    this.vmUuid = vmUuid;
    return this;
  }

   /**
   * UUID on the controller VM.
   * @return vmUuid
  **/
  @Schema(description = "UUID on the controller VM.")
  public String getVmUuid() {
    return vmUuid;
  }

  public void setVmUuid(String vmUuid) {
    this.vmUuid = vmUuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterNode clusterNode = (ClusterNode) o;
    return Objects.equals(this.categories, clusterNode.categories) &&
        Objects.equals(this.ip, clusterNode.ip) &&
        Objects.equals(this.name, clusterNode.name) &&
        Objects.equals(this.password, clusterNode.password) &&
        Objects.equals(this.publicIpOrName, clusterNode.publicIpOrName) &&
        Objects.equals(this.vmHostname, clusterNode.vmHostname) &&
        Objects.equals(this.vmMor, clusterNode.vmMor) &&
        Objects.equals(this.vmName, clusterNode.vmName) &&
        Objects.equals(this.vmUuid, clusterNode.vmUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, ip, name, password, publicIpOrName, vmHostname, vmMor, vmName, vmUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterNode {\n");
    
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    publicIpOrName: ").append(toIndentedString(publicIpOrName)).append("\n");
    sb.append("    vmHostname: ").append(toIndentedString(vmHostname)).append("\n");
    sb.append("    vmMor: ").append(toIndentedString(vmMor)).append("\n");
    sb.append("    vmName: ").append(toIndentedString(vmName)).append("\n");
    sb.append("    vmUuid: ").append(toIndentedString(vmUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
