/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * NsxConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class NsxConfiguration {
  @JsonProperty("avi_nsx_prefix")
  private String aviNsxPrefix = null;

  @JsonProperty("nsx_manager_name")
  private String nsxManagerName = null;

  @JsonProperty("nsx_manager_password")
  private String nsxManagerPassword = null;

  @JsonProperty("nsx_manager_username")
  private String nsxManagerUsername = null;

  @JsonProperty("nsx_poll_time")
  private Integer nsxPollTime = 300;

  public NsxConfiguration aviNsxPrefix(String aviNsxPrefix) {
    this.aviNsxPrefix = aviNsxPrefix;
    return this;
  }

   /**
   * This prefix will be added to the names of all NSX objects created by Avi Controller. It should be unique across all the Avi Controller clusters. Field introduced in 17.1.1.
   * @return aviNsxPrefix
  **/
  @Schema(required = true, description = "This prefix will be added to the names of all NSX objects created by Avi Controller. It should be unique across all the Avi Controller clusters. Field introduced in 17.1.1.")
  public String getAviNsxPrefix() {
    return aviNsxPrefix;
  }

  public void setAviNsxPrefix(String aviNsxPrefix) {
    this.aviNsxPrefix = aviNsxPrefix;
  }

  public NsxConfiguration nsxManagerName(String nsxManagerName) {
    this.nsxManagerName = nsxManagerName;
    return this;
  }

   /**
   * The hostname or IP address of the NSX MGr. Field introduced in 17.1.1.
   * @return nsxManagerName
  **/
  @Schema(required = true, description = "The hostname or IP address of the NSX MGr. Field introduced in 17.1.1.")
  public String getNsxManagerName() {
    return nsxManagerName;
  }

  public void setNsxManagerName(String nsxManagerName) {
    this.nsxManagerName = nsxManagerName;
  }

  public NsxConfiguration nsxManagerPassword(String nsxManagerPassword) {
    this.nsxManagerPassword = nsxManagerPassword;
    return this;
  }

   /**
   * The password Avi Vantage will use when authenticating with NSX Mgr. Field introduced in 17.1.1.
   * @return nsxManagerPassword
  **/
  @Schema(required = true, description = "The password Avi Vantage will use when authenticating with NSX Mgr. Field introduced in 17.1.1.")
  public String getNsxManagerPassword() {
    return nsxManagerPassword;
  }

  public void setNsxManagerPassword(String nsxManagerPassword) {
    this.nsxManagerPassword = nsxManagerPassword;
  }

  public NsxConfiguration nsxManagerUsername(String nsxManagerUsername) {
    this.nsxManagerUsername = nsxManagerUsername;
    return this;
  }

   /**
   * The username Avi Vantage will use when authenticating with NSX Mgr. Field introduced in 17.1.1.
   * @return nsxManagerUsername
  **/
  @Schema(required = true, description = "The username Avi Vantage will use when authenticating with NSX Mgr. Field introduced in 17.1.1.")
  public String getNsxManagerUsername() {
    return nsxManagerUsername;
  }

  public void setNsxManagerUsername(String nsxManagerUsername) {
    this.nsxManagerUsername = nsxManagerUsername;
  }

  public NsxConfiguration nsxPollTime(Integer nsxPollTime) {
    this.nsxPollTime = nsxPollTime;
    return this;
  }

   /**
   * The interval (in secs) with which Avi Controller polls the NSX Manager for updates. Field introduced in 17.1.1.
   * @return nsxPollTime
  **/
  @Schema(required = true, description = "The interval (in secs) with which Avi Controller polls the NSX Manager for updates. Field introduced in 17.1.1.")
  public Integer getNsxPollTime() {
    return nsxPollTime;
  }

  public void setNsxPollTime(Integer nsxPollTime) {
    this.nsxPollTime = nsxPollTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsxConfiguration nsxConfiguration = (NsxConfiguration) o;
    return Objects.equals(this.aviNsxPrefix, nsxConfiguration.aviNsxPrefix) &&
        Objects.equals(this.nsxManagerName, nsxConfiguration.nsxManagerName) &&
        Objects.equals(this.nsxManagerPassword, nsxConfiguration.nsxManagerPassword) &&
        Objects.equals(this.nsxManagerUsername, nsxConfiguration.nsxManagerUsername) &&
        Objects.equals(this.nsxPollTime, nsxConfiguration.nsxPollTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aviNsxPrefix, nsxManagerName, nsxManagerPassword, nsxManagerUsername, nsxPollTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsxConfiguration {\n");
    
    sb.append("    aviNsxPrefix: ").append(toIndentedString(aviNsxPrefix)).append("\n");
    sb.append("    nsxManagerName: ").append(toIndentedString(nsxManagerName)).append("\n");
    sb.append("    nsxManagerPassword: ").append(toIndentedString(nsxManagerPassword)).append("\n");
    sb.append("    nsxManagerUsername: ").append(toIndentedString(nsxManagerUsername)).append("\n");
    sb.append("    nsxPollTime: ").append(toIndentedString(nsxPollTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
