/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * LogControllerMapping
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class LogControllerMapping {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("controller_ip")
  private String controllerIp = null;

  @JsonProperty("metrics_mgr_port")
  private String metricsMgrPort = "METRICS_MGR_PORT_0";

  @JsonProperty("node_uuid")
  private String nodeUuid = null;

  @JsonProperty("prev_controller_ip")
  private String prevControllerIp = null;

  @JsonProperty("prev_metrics_mgr_port")
  private String prevMetricsMgrPort = "METRICS_MGR_PORT_0";

  @JsonProperty("static_mapping")
  private Boolean staticMapping = null;

  @JsonProperty("tenant_ref")
  private String tenantRef = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("vs_uuid")
  private String vsUuid = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public LogControllerMapping controllerIp(String controllerIp) {
    this.controllerIp = controllerIp;
    return this;
  }

   /**
   * controller_ip of LogControllerMapping.
   * @return controllerIp
  **/
  @Schema(description = "controller_ip of LogControllerMapping.")
  public String getControllerIp() {
    return controllerIp;
  }

  public void setControllerIp(String controllerIp) {
    this.controllerIp = controllerIp;
  }

  public LogControllerMapping metricsMgrPort(String metricsMgrPort) {
    this.metricsMgrPort = metricsMgrPort;
    return this;
  }

   /**
   *  Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3.
   * @return metricsMgrPort
  **/
  @Schema(description = " Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3.")
  public String getMetricsMgrPort() {
    return metricsMgrPort;
  }

  public void setMetricsMgrPort(String metricsMgrPort) {
    this.metricsMgrPort = metricsMgrPort;
  }

  public LogControllerMapping nodeUuid(String nodeUuid) {
    this.nodeUuid = nodeUuid;
    return this;
  }

   /**
   * Unique object identifier of node.
   * @return nodeUuid
  **/
  @Schema(description = "Unique object identifier of node.")
  public String getNodeUuid() {
    return nodeUuid;
  }

  public void setNodeUuid(String nodeUuid) {
    this.nodeUuid = nodeUuid;
  }

  public LogControllerMapping prevControllerIp(String prevControllerIp) {
    this.prevControllerIp = prevControllerIp;
    return this;
  }

   /**
   * prev_controller_ip of LogControllerMapping.
   * @return prevControllerIp
  **/
  @Schema(description = "prev_controller_ip of LogControllerMapping.")
  public String getPrevControllerIp() {
    return prevControllerIp;
  }

  public void setPrevControllerIp(String prevControllerIp) {
    this.prevControllerIp = prevControllerIp;
  }

  public LogControllerMapping prevMetricsMgrPort(String prevMetricsMgrPort) {
    this.prevMetricsMgrPort = prevMetricsMgrPort;
    return this;
  }

   /**
   *  Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3.
   * @return prevMetricsMgrPort
  **/
  @Schema(description = " Enum options - METRICS_MGR_PORT_0, METRICS_MGR_PORT_1, METRICS_MGR_PORT_2, METRICS_MGR_PORT_3.")
  public String getPrevMetricsMgrPort() {
    return prevMetricsMgrPort;
  }

  public void setPrevMetricsMgrPort(String prevMetricsMgrPort) {
    this.prevMetricsMgrPort = prevMetricsMgrPort;
  }

  public LogControllerMapping staticMapping(Boolean staticMapping) {
    this.staticMapping = staticMapping;
    return this;
  }

   /**
   * Placeholder for description of property static_mapping of obj type LogControllerMapping field type str  type boolean
   * @return staticMapping
  **/
  @Schema(description = "Placeholder for description of property static_mapping of obj type LogControllerMapping field type str  type boolean")
  public Boolean isStaticMapping() {
    return staticMapping;
  }

  public void setStaticMapping(Boolean staticMapping) {
    this.staticMapping = staticMapping;
  }

  public LogControllerMapping tenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Tenant.
   * @return tenantRef
  **/
  @Schema(description = " It is a reference to an object of type Tenant.")
  public String getTenantRef() {
    return tenantRef;
  }

  public void setTenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public LogControllerMapping uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public LogControllerMapping vsUuid(String vsUuid) {
    this.vsUuid = vsUuid;
    return this;
  }

   /**
   * Unique object identifier of vs.
   * @return vsUuid
  **/
  @Schema(required = true, description = "Unique object identifier of vs.")
  public String getVsUuid() {
    return vsUuid;
  }

  public void setVsUuid(String vsUuid) {
    this.vsUuid = vsUuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogControllerMapping logControllerMapping = (LogControllerMapping) o;
    return Objects.equals(this._lastModified, logControllerMapping._lastModified) &&
        Objects.equals(this.controllerIp, logControllerMapping.controllerIp) &&
        Objects.equals(this.metricsMgrPort, logControllerMapping.metricsMgrPort) &&
        Objects.equals(this.nodeUuid, logControllerMapping.nodeUuid) &&
        Objects.equals(this.prevControllerIp, logControllerMapping.prevControllerIp) &&
        Objects.equals(this.prevMetricsMgrPort, logControllerMapping.prevMetricsMgrPort) &&
        Objects.equals(this.staticMapping, logControllerMapping.staticMapping) &&
        Objects.equals(this.tenantRef, logControllerMapping.tenantRef) &&
        Objects.equals(this.url, logControllerMapping.url) &&
        Objects.equals(this.uuid, logControllerMapping.uuid) &&
        Objects.equals(this.vsUuid, logControllerMapping.vsUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, controllerIp, metricsMgrPort, nodeUuid, prevControllerIp, prevMetricsMgrPort, staticMapping, tenantRef, url, uuid, vsUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogControllerMapping {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    controllerIp: ").append(toIndentedString(controllerIp)).append("\n");
    sb.append("    metricsMgrPort: ").append(toIndentedString(metricsMgrPort)).append("\n");
    sb.append("    nodeUuid: ").append(toIndentedString(nodeUuid)).append("\n");
    sb.append("    prevControllerIp: ").append(toIndentedString(prevControllerIp)).append("\n");
    sb.append("    prevMetricsMgrPort: ").append(toIndentedString(prevMetricsMgrPort)).append("\n");
    sb.append("    staticMapping: ").append(toIndentedString(staticMapping)).append("\n");
    sb.append("    tenantRef: ").append(toIndentedString(tenantRef)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vsUuid: ").append(toIndentedString(vsUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
