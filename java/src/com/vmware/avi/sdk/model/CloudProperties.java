/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.CCProperties;
import com.vmware.avi.sdk.model.CloudInfo;
import com.vmware.avi.sdk.model.HypervisorProperties;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * CloudProperties
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class CloudProperties {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("cc_props")
  private CCProperties ccProps = null;

  @JsonProperty("cc_vtypes")
  private List<String> ccVtypes = null;

  @JsonProperty("hyp_props")
  private List<HypervisorProperties> hypProps = null;

  @JsonProperty("info")
  private List<CloudInfo> info = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public CloudProperties ccProps(CCProperties ccProps) {
    this.ccProps = ccProps;
    return this;
  }

   /**
   * Get ccProps
   * @return ccProps
  **/
  @Schema(description = "")
  public CCProperties getCcProps() {
    return ccProps;
  }

  public void setCcProps(CCProperties ccProps) {
    this.ccProps = ccProps;
  }

  public CloudProperties ccVtypes(List<String> ccVtypes) {
    this.ccVtypes = ccVtypes;
    return this;
  }

  public CloudProperties addCcVtypesItem(String ccVtypesItem) {
    if (this.ccVtypes == null) {
      this.ccVtypes = new ArrayList<String>();
    }
    this.ccVtypes.add(ccVtypesItem);
    return this;
  }

   /**
   * Cloud types supported by CloudConnector. Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP.
   * @return ccVtypes
  **/
  @Schema(description = "Cloud types supported by CloudConnector. Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP.")
  public List<String> getCcVtypes() {
    return ccVtypes;
  }

  public void setCcVtypes(List<String> ccVtypes) {
    this.ccVtypes = ccVtypes;
  }

  public CloudProperties hypProps(List<HypervisorProperties> hypProps) {
    this.hypProps = hypProps;
    return this;
  }

  public CloudProperties addHypPropsItem(HypervisorProperties hypPropsItem) {
    if (this.hypProps == null) {
      this.hypProps = new ArrayList<HypervisorProperties>();
    }
    this.hypProps.add(hypPropsItem);
    return this;
  }

   /**
   * Hypervisor properties.
   * @return hypProps
  **/
  @Schema(description = "Hypervisor properties.")
  public List<HypervisorProperties> getHypProps() {
    return hypProps;
  }

  public void setHypProps(List<HypervisorProperties> hypProps) {
    this.hypProps = hypProps;
  }

  public CloudProperties info(List<CloudInfo> info) {
    this.info = info;
    return this;
  }

  public CloudProperties addInfoItem(CloudInfo infoItem) {
    if (this.info == null) {
      this.info = new ArrayList<CloudInfo>();
    }
    this.info.add(infoItem);
    return this;
  }

   /**
   * Properties specific to a cloud type.
   * @return info
  **/
  @Schema(description = "Properties specific to a cloud type.")
  public List<CloudInfo> getInfo() {
    return info;
  }

  public void setInfo(List<CloudInfo> info) {
    this.info = info;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public CloudProperties uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudProperties cloudProperties = (CloudProperties) o;
    return Objects.equals(this._lastModified, cloudProperties._lastModified) &&
        Objects.equals(this.ccProps, cloudProperties.ccProps) &&
        Objects.equals(this.ccVtypes, cloudProperties.ccVtypes) &&
        Objects.equals(this.hypProps, cloudProperties.hypProps) &&
        Objects.equals(this.info, cloudProperties.info) &&
        Objects.equals(this.url, cloudProperties.url) &&
        Objects.equals(this.uuid, cloudProperties.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, ccProps, ccVtypes, hypProps, info, url, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudProperties {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    ccProps: ").append(toIndentedString(ccProps)).append("\n");
    sb.append("    ccVtypes: ").append(toIndentedString(ccVtypes)).append("\n");
    sb.append("    hypProps: ").append(toIndentedString(hypProps)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
