/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.IpAddrMatch;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * DnsClientIpMatch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class DnsClientIpMatch {
  @JsonProperty("client_ip")
  private IpAddrMatch clientIp = null;

  @JsonProperty("use_edns_client_subnet_ip")
  private Boolean useEdnsClientSubnetIp = true;

  public DnsClientIpMatch clientIp(IpAddrMatch clientIp) {
    this.clientIp = clientIp;
    return this;
  }

   /**
   * Get clientIp
   * @return clientIp
  **/
  @Schema(required = true, description = "")
  public IpAddrMatch getClientIp() {
    return clientIp;
  }

  public void setClientIp(IpAddrMatch clientIp) {
    this.clientIp = clientIp;
  }

  public DnsClientIpMatch useEdnsClientSubnetIp(Boolean useEdnsClientSubnetIp) {
    this.useEdnsClientSubnetIp = useEdnsClientSubnetIp;
    return this;
  }

   /**
   * Use the IP address from the EDNS client subnet option, if available, as the source IP address of the client. It should be noted that the edns subnet IP may not be a /32 IP address. Field introduced in 17.1.6,17.2.2.
   * @return useEdnsClientSubnetIp
  **/
  @Schema(description = "Use the IP address from the EDNS client subnet option, if available, as the source IP address of the client. It should be noted that the edns subnet IP may not be a /32 IP address. Field introduced in 17.1.6,17.2.2.")
  public Boolean isUseEdnsClientSubnetIp() {
    return useEdnsClientSubnetIp;
  }

  public void setUseEdnsClientSubnetIp(Boolean useEdnsClientSubnetIp) {
    this.useEdnsClientSubnetIp = useEdnsClientSubnetIp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DnsClientIpMatch dnsClientIpMatch = (DnsClientIpMatch) o;
    return Objects.equals(this.clientIp, dnsClientIpMatch.clientIp) &&
        Objects.equals(this.useEdnsClientSubnetIp, dnsClientIpMatch.useEdnsClientSubnetIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientIp, useEdnsClientSubnetIp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DnsClientIpMatch {\n");
    
    sb.append("    clientIp: ").append(toIndentedString(clientIp)).append("\n");
    sb.append("    useEdnsClientSubnetIp: ").append(toIndentedString(useEdnsClientSubnetIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
