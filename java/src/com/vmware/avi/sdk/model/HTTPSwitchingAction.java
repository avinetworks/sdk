/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.HTTPLocalFile;
import com.vmware.avi.sdk.model.PoolServer;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * HTTPSwitchingAction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class HTTPSwitchingAction {
  @JsonProperty("action")
  private String action = null;

  @JsonProperty("file")
  private HTTPLocalFile file = null;

  @JsonProperty("pool_group_ref")
  private String poolGroupRef = null;

  @JsonProperty("pool_ref")
  private String poolRef = null;

  @JsonProperty("server")
  private PoolServer server = null;

  @JsonProperty("status_code")
  private String statusCode = null;

  public HTTPSwitchingAction action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Content switching action type. Enum options - HTTP_SWITCHING_SELECT_POOL, HTTP_SWITCHING_SELECT_LOCAL, HTTP_SWITCHING_SELECT_POOLGROUP.
   * @return action
  **/
  @Schema(required = true, description = "Content switching action type. Enum options - HTTP_SWITCHING_SELECT_POOL, HTTP_SWITCHING_SELECT_LOCAL, HTTP_SWITCHING_SELECT_POOLGROUP.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public HTTPSwitchingAction file(HTTPLocalFile file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @Schema(description = "")
  public HTTPLocalFile getFile() {
    return file;
  }

  public void setFile(HTTPLocalFile file) {
    this.file = file;
  }

  public HTTPSwitchingAction poolGroupRef(String poolGroupRef) {
    this.poolGroupRef = poolGroupRef;
    return this;
  }

   /**
   * UUID of the pool group to serve the request. It is a reference to an object of type PoolGroup.
   * @return poolGroupRef
  **/
  @Schema(description = "UUID of the pool group to serve the request. It is a reference to an object of type PoolGroup.")
  public String getPoolGroupRef() {
    return poolGroupRef;
  }

  public void setPoolGroupRef(String poolGroupRef) {
    this.poolGroupRef = poolGroupRef;
  }

  public HTTPSwitchingAction poolRef(String poolRef) {
    this.poolRef = poolRef;
    return this;
  }

   /**
   * UUID of the pool of servers to serve the request. It is a reference to an object of type Pool.
   * @return poolRef
  **/
  @Schema(description = "UUID of the pool of servers to serve the request. It is a reference to an object of type Pool.")
  public String getPoolRef() {
    return poolRef;
  }

  public void setPoolRef(String poolRef) {
    this.poolRef = poolRef;
  }

  public HTTPSwitchingAction server(PoolServer server) {
    this.server = server;
    return this;
  }

   /**
   * Get server
   * @return server
  **/
  @Schema(description = "")
  public PoolServer getServer() {
    return server;
  }

  public void setServer(PoolServer server) {
    this.server = server;
  }

  public HTTPSwitchingAction statusCode(String statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * HTTP status code to use when serving local response. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_204, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429, HTTP_LOCAL_RESPONSE_STATUS_CODE_501.
   * @return statusCode
  **/
  @Schema(description = "HTTP status code to use when serving local response. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_204, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429, HTTP_LOCAL_RESPONSE_STATUS_CODE_501.")
  public String getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(String statusCode) {
    this.statusCode = statusCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPSwitchingAction htTPSwitchingAction = (HTTPSwitchingAction) o;
    return Objects.equals(this.action, htTPSwitchingAction.action) &&
        Objects.equals(this.file, htTPSwitchingAction.file) &&
        Objects.equals(this.poolGroupRef, htTPSwitchingAction.poolGroupRef) &&
        Objects.equals(this.poolRef, htTPSwitchingAction.poolRef) &&
        Objects.equals(this.server, htTPSwitchingAction.server) &&
        Objects.equals(this.statusCode, htTPSwitchingAction.statusCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, file, poolGroupRef, poolRef, server, statusCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPSwitchingAction {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    poolGroupRef: ").append(toIndentedString(poolGroupRef)).append("\n");
    sb.append("    poolRef: ").append(toIndentedString(poolRef)).append("\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
