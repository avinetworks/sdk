/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.CaptureFileSize;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * DebugVirtualServiceCapture
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class DebugVirtualServiceCapture {
  @JsonProperty("capture_file_size")
  private CaptureFileSize captureFileSize = null;

  @JsonProperty("duration")
  private Integer duration = null;

  @JsonProperty("enable_ssl_session_key_capture")
  private Boolean enableSslSessionKeyCapture = null;

  @JsonProperty("num_pkts")
  private Integer numPkts = null;

  @JsonProperty("pcap_ng")
  private Boolean pcapNg = true;

  @JsonProperty("pkt_size")
  private Integer pktSize = 128;

  public DebugVirtualServiceCapture captureFileSize(CaptureFileSize captureFileSize) {
    this.captureFileSize = captureFileSize;
    return this;
  }

   /**
   * Get captureFileSize
   * @return captureFileSize
  **/
  @Schema(description = "")
  public CaptureFileSize getCaptureFileSize() {
    return captureFileSize;
  }

  public void setCaptureFileSize(CaptureFileSize captureFileSize) {
    this.captureFileSize = captureFileSize;
  }

  public DebugVirtualServiceCapture duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Number of minutes to capture packets. Use 0 to capture until manually stopped. Special values are 0 - &#x27;infinite&#x27;.
   * @return duration
  **/
  @Schema(description = "Number of minutes to capture packets. Use 0 to capture until manually stopped. Special values are 0 - 'infinite'.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public DebugVirtualServiceCapture enableSslSessionKeyCapture(Boolean enableSslSessionKeyCapture) {
    this.enableSslSessionKeyCapture = enableSslSessionKeyCapture;
    return this;
  }

   /**
   * Enable SSL session key capture. Field introduced in 18.2.3.
   * @return enableSslSessionKeyCapture
  **/
  @Schema(description = "Enable SSL session key capture. Field introduced in 18.2.3.")
  public Boolean isEnableSslSessionKeyCapture() {
    return enableSslSessionKeyCapture;
  }

  public void setEnableSslSessionKeyCapture(Boolean enableSslSessionKeyCapture) {
    this.enableSslSessionKeyCapture = enableSslSessionKeyCapture;
  }

  public DebugVirtualServiceCapture numPkts(Integer numPkts) {
    this.numPkts = numPkts;
    return this;
  }

   /**
   * Total number of packets to capture.
   * @return numPkts
  **/
  @Schema(description = "Total number of packets to capture.")
  public Integer getNumPkts() {
    return numPkts;
  }

  public void setNumPkts(Integer numPkts) {
    this.numPkts = numPkts;
  }

  public DebugVirtualServiceCapture pcapNg(Boolean pcapNg) {
    this.pcapNg = pcapNg;
    return this;
  }

   /**
   * Enable PcapNg for packet capture. Field introduced in 18.2.5.
   * @return pcapNg
  **/
  @Schema(description = "Enable PcapNg for packet capture. Field introduced in 18.2.5.")
  public Boolean isPcapNg() {
    return pcapNg;
  }

  public void setPcapNg(Boolean pcapNg) {
    this.pcapNg = pcapNg;
  }

  public DebugVirtualServiceCapture pktSize(Integer pktSize) {
    this.pktSize = pktSize;
    return this;
  }

   /**
   * Number of bytes of each packet to capture. Use 0 to capture the entire packet. Allowed values are 64-1514. Special values are 0 - &#x27;full capture&#x27;.
   * @return pktSize
  **/
  @Schema(description = "Number of bytes of each packet to capture. Use 0 to capture the entire packet. Allowed values are 64-1514. Special values are 0 - 'full capture'.")
  public Integer getPktSize() {
    return pktSize;
  }

  public void setPktSize(Integer pktSize) {
    this.pktSize = pktSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebugVirtualServiceCapture debugVirtualServiceCapture = (DebugVirtualServiceCapture) o;
    return Objects.equals(this.captureFileSize, debugVirtualServiceCapture.captureFileSize) &&
        Objects.equals(this.duration, debugVirtualServiceCapture.duration) &&
        Objects.equals(this.enableSslSessionKeyCapture, debugVirtualServiceCapture.enableSslSessionKeyCapture) &&
        Objects.equals(this.numPkts, debugVirtualServiceCapture.numPkts) &&
        Objects.equals(this.pcapNg, debugVirtualServiceCapture.pcapNg) &&
        Objects.equals(this.pktSize, debugVirtualServiceCapture.pktSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(captureFileSize, duration, enableSslSessionKeyCapture, numPkts, pcapNg, pktSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebugVirtualServiceCapture {\n");
    
    sb.append("    captureFileSize: ").append(toIndentedString(captureFileSize)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    enableSslSessionKeyCapture: ").append(toIndentedString(enableSslSessionKeyCapture)).append("\n");
    sb.append("    numPkts: ").append(toIndentedString(numPkts)).append("\n");
    sb.append("    pcapNg: ").append(toIndentedString(pcapNg)).append("\n");
    sb.append("    pktSize: ").append(toIndentedString(pktSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
