/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PGDeploymentRule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class PGDeploymentRule {
  @JsonProperty("metric_id")
  private String metricId = "health.health_score_value";

  @JsonProperty("operator")
  private String operator = "CO_GE";

  @JsonProperty("threshold")
  private Double threshold = null;

  public PGDeploymentRule metricId(String metricId) {
    this.metricId = metricId;
    return this;
  }

   /**
   * metric_id of PGDeploymentRule.
   * @return metricId
  **/
  @Schema(description = "metric_id of PGDeploymentRule.")
  public String getMetricId() {
    return metricId;
  }

  public void setMetricId(String metricId) {
    this.metricId = metricId;
  }

  public PGDeploymentRule operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   *  Enum options - CO_EQ, CO_GT, CO_GE, CO_LT, CO_LE, CO_NE.
   * @return operator
  **/
  @Schema(description = " Enum options - CO_EQ, CO_GT, CO_GE, CO_LT, CO_LE, CO_NE.")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public PGDeploymentRule threshold(Double threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * metric threshold that is used as the pass fail. If it is not provided then it will simply compare it with current pool vs new pool.
   * @return threshold
  **/
  @Schema(description = "metric threshold that is used as the pass fail. If it is not provided then it will simply compare it with current pool vs new pool.")
  public Double getThreshold() {
    return threshold;
  }

  public void setThreshold(Double threshold) {
    this.threshold = threshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PGDeploymentRule pgDeploymentRule = (PGDeploymentRule) o;
    return Objects.equals(this.metricId, pgDeploymentRule.metricId) &&
        Objects.equals(this.operator, pgDeploymentRule.operator) &&
        Objects.equals(this.threshold, pgDeploymentRule.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricId, operator, threshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PGDeploymentRule {\n");
    
    sb.append("    metricId: ").append(toIndentedString(metricId)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
