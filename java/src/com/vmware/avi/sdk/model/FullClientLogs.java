/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * FullClientLogs
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class FullClientLogs {
  @JsonProperty("all_headers")
  private Boolean allHeaders = null;

  @JsonProperty("duration")
  private Integer duration = 30;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("throttle")
  private Integer throttle = 10;

  public FullClientLogs allHeaders(Boolean allHeaders) {
    this.allHeaders = allHeaders;
    return this;
  }

   /**
   * [DEPRECATED] Log all headers. Please use the all_headers flag in AnalyticsPolicy. Field deprecated in 18.1.4, 18.2.1.
   * @return allHeaders
  **/
  @Schema(description = "[DEPRECATED] Log all headers. Please use the all_headers flag in AnalyticsPolicy. Field deprecated in 18.1.4, 18.2.1.")
  public Boolean isAllHeaders() {
    return allHeaders;
  }

  public void setAllHeaders(Boolean allHeaders) {
    this.allHeaders = allHeaders;
  }

  public FullClientLogs duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * How long should the system capture all logs, measured in minutes. Set to 0 for infinite. Special values are 0 - &#x27;infinite&#x27;.
   * @return duration
  **/
  @Schema(description = "How long should the system capture all logs, measured in minutes. Set to 0 for infinite. Special values are 0 - 'infinite'.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public FullClientLogs enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Capture all client logs including connections and requests.  When disabled, only errors will be logged.
   * @return enabled
  **/
  @Schema(required = true, description = "Capture all client logs including connections and requests.  When disabled, only errors will be logged.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public FullClientLogs throttle(Integer throttle) {
    this.throttle = throttle;
    return this;
  }

   /**
   * This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3.
   * @return throttle
  **/
  @Schema(description = "This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3.")
  public Integer getThrottle() {
    return throttle;
  }

  public void setThrottle(Integer throttle) {
    this.throttle = throttle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullClientLogs fullClientLogs = (FullClientLogs) o;
    return Objects.equals(this.allHeaders, fullClientLogs.allHeaders) &&
        Objects.equals(this.duration, fullClientLogs.duration) &&
        Objects.equals(this.enabled, fullClientLogs.enabled) &&
        Objects.equals(this.throttle, fullClientLogs.throttle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allHeaders, duration, enabled, throttle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullClientLogs {\n");
    
    sb.append("    allHeaders: ").append(toIndentedString(allHeaders)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    throttle: ").append(toIndentedString(throttle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
