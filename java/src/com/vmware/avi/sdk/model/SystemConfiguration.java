/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.AdminAuthConfiguration;
import com.vmware.avi.sdk.model.DNSConfiguration;
import com.vmware.avi.sdk.model.EmailConfiguration;
import com.vmware.avi.sdk.model.LinuxConfiguration;
import com.vmware.avi.sdk.model.MgmtIpAccessControl;
import com.vmware.avi.sdk.model.NTPConfiguration;
import com.vmware.avi.sdk.model.PortalConfiguration;
import com.vmware.avi.sdk.model.ProxyConfiguration;
import com.vmware.avi.sdk.model.SecureChannelConfiguration;
import com.vmware.avi.sdk.model.SnmpConfiguration;
import com.vmware.avi.sdk.model.TenantConfiguration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * SystemConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class SystemConfiguration {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("admin_auth_configuration")
  private AdminAuthConfiguration adminAuthConfiguration = null;

  @JsonProperty("default_license_tier")
  private String defaultLicenseTier = "ENTERPRISE_18";

  @JsonProperty("dns_configuration")
  private DNSConfiguration dnsConfiguration = null;

  @JsonProperty("dns_virtualservice_refs")
  private List<String> dnsVirtualserviceRefs = null;

  @JsonProperty("docker_mode")
  private Boolean dockerMode = null;

  @JsonProperty("email_configuration")
  private EmailConfiguration emailConfiguration = null;

  @JsonProperty("global_tenant_config")
  private TenantConfiguration globalTenantConfig = null;

  @JsonProperty("linux_configuration")
  private LinuxConfiguration linuxConfiguration = null;

  @JsonProperty("mgmt_ip_access_control")
  private MgmtIpAccessControl mgmtIpAccessControl = null;

  @JsonProperty("ntp_configuration")
  private NTPConfiguration ntpConfiguration = null;

  @JsonProperty("portal_configuration")
  private PortalConfiguration portalConfiguration = null;

  @JsonProperty("proxy_configuration")
  private ProxyConfiguration proxyConfiguration = null;

  @JsonProperty("secure_channel_configuration")
  private SecureChannelConfiguration secureChannelConfiguration = null;

  @JsonProperty("snmp_configuration")
  private SnmpConfiguration snmpConfiguration = null;

  @JsonProperty("ssh_ciphers")
  private List<String> sshCiphers = null;

  @JsonProperty("ssh_hmacs")
  private List<String> sshHmacs = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("welcome_workflow_complete")
  private Boolean welcomeWorkflowComplete = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public SystemConfiguration adminAuthConfiguration(AdminAuthConfiguration adminAuthConfiguration) {
    this.adminAuthConfiguration = adminAuthConfiguration;
    return this;
  }

   /**
   * Get adminAuthConfiguration
   * @return adminAuthConfiguration
  **/
  @Schema(description = "")
  public AdminAuthConfiguration getAdminAuthConfiguration() {
    return adminAuthConfiguration;
  }

  public void setAdminAuthConfiguration(AdminAuthConfiguration adminAuthConfiguration) {
    this.adminAuthConfiguration = adminAuthConfiguration;
  }

  public SystemConfiguration defaultLicenseTier(String defaultLicenseTier) {
    this.defaultLicenseTier = defaultLicenseTier;
    return this;
  }

   /**
   * Specifies the default license tier which would be used by new Clouds. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5.
   * @return defaultLicenseTier
  **/
  @Schema(description = "Specifies the default license tier which would be used by new Clouds. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5.")
  public String getDefaultLicenseTier() {
    return defaultLicenseTier;
  }

  public void setDefaultLicenseTier(String defaultLicenseTier) {
    this.defaultLicenseTier = defaultLicenseTier;
  }

  public SystemConfiguration dnsConfiguration(DNSConfiguration dnsConfiguration) {
    this.dnsConfiguration = dnsConfiguration;
    return this;
  }

   /**
   * Get dnsConfiguration
   * @return dnsConfiguration
  **/
  @Schema(description = "")
  public DNSConfiguration getDnsConfiguration() {
    return dnsConfiguration;
  }

  public void setDnsConfiguration(DNSConfiguration dnsConfiguration) {
    this.dnsConfiguration = dnsConfiguration;
  }

  public SystemConfiguration dnsVirtualserviceRefs(List<String> dnsVirtualserviceRefs) {
    this.dnsVirtualserviceRefs = dnsVirtualserviceRefs;
    return this;
  }

  public SystemConfiguration addDnsVirtualserviceRefsItem(String dnsVirtualserviceRefsItem) {
    if (this.dnsVirtualserviceRefs == null) {
      this.dnsVirtualserviceRefs = new ArrayList<String>();
    }
    this.dnsVirtualserviceRefs.add(dnsVirtualserviceRefsItem);
    return this;
  }

   /**
   * DNS virtualservices hosting FQDN records for applications across Avi Vantage. If no virtualservices are provided, Avi Vantage will provide DNS services for configured applications. Switching back to Avi Vantage from DNS virtualservices is not allowed. It is a reference to an object of type VirtualService.
   * @return dnsVirtualserviceRefs
  **/
  @Schema(description = "DNS virtualservices hosting FQDN records for applications across Avi Vantage. If no virtualservices are provided, Avi Vantage will provide DNS services for configured applications. Switching back to Avi Vantage from DNS virtualservices is not allowed. It is a reference to an object of type VirtualService.")
  public List<String> getDnsVirtualserviceRefs() {
    return dnsVirtualserviceRefs;
  }

  public void setDnsVirtualserviceRefs(List<String> dnsVirtualserviceRefs) {
    this.dnsVirtualserviceRefs = dnsVirtualserviceRefs;
  }

  public SystemConfiguration dockerMode(Boolean dockerMode) {
    this.dockerMode = dockerMode;
    return this;
  }

   /**
   * Placeholder for description of property docker_mode of obj type SystemConfiguration field type str  type boolean
   * @return dockerMode
  **/
  @Schema(description = "Placeholder for description of property docker_mode of obj type SystemConfiguration field type str  type boolean")
  public Boolean isDockerMode() {
    return dockerMode;
  }

  public void setDockerMode(Boolean dockerMode) {
    this.dockerMode = dockerMode;
  }

  public SystemConfiguration emailConfiguration(EmailConfiguration emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
    return this;
  }

   /**
   * Get emailConfiguration
   * @return emailConfiguration
  **/
  @Schema(description = "")
  public EmailConfiguration getEmailConfiguration() {
    return emailConfiguration;
  }

  public void setEmailConfiguration(EmailConfiguration emailConfiguration) {
    this.emailConfiguration = emailConfiguration;
  }

  public SystemConfiguration globalTenantConfig(TenantConfiguration globalTenantConfig) {
    this.globalTenantConfig = globalTenantConfig;
    return this;
  }

   /**
   * Get globalTenantConfig
   * @return globalTenantConfig
  **/
  @Schema(description = "")
  public TenantConfiguration getGlobalTenantConfig() {
    return globalTenantConfig;
  }

  public void setGlobalTenantConfig(TenantConfiguration globalTenantConfig) {
    this.globalTenantConfig = globalTenantConfig;
  }

  public SystemConfiguration linuxConfiguration(LinuxConfiguration linuxConfiguration) {
    this.linuxConfiguration = linuxConfiguration;
    return this;
  }

   /**
   * Get linuxConfiguration
   * @return linuxConfiguration
  **/
  @Schema(description = "")
  public LinuxConfiguration getLinuxConfiguration() {
    return linuxConfiguration;
  }

  public void setLinuxConfiguration(LinuxConfiguration linuxConfiguration) {
    this.linuxConfiguration = linuxConfiguration;
  }

  public SystemConfiguration mgmtIpAccessControl(MgmtIpAccessControl mgmtIpAccessControl) {
    this.mgmtIpAccessControl = mgmtIpAccessControl;
    return this;
  }

   /**
   * Get mgmtIpAccessControl
   * @return mgmtIpAccessControl
  **/
  @Schema(description = "")
  public MgmtIpAccessControl getMgmtIpAccessControl() {
    return mgmtIpAccessControl;
  }

  public void setMgmtIpAccessControl(MgmtIpAccessControl mgmtIpAccessControl) {
    this.mgmtIpAccessControl = mgmtIpAccessControl;
  }

  public SystemConfiguration ntpConfiguration(NTPConfiguration ntpConfiguration) {
    this.ntpConfiguration = ntpConfiguration;
    return this;
  }

   /**
   * Get ntpConfiguration
   * @return ntpConfiguration
  **/
  @Schema(description = "")
  public NTPConfiguration getNtpConfiguration() {
    return ntpConfiguration;
  }

  public void setNtpConfiguration(NTPConfiguration ntpConfiguration) {
    this.ntpConfiguration = ntpConfiguration;
  }

  public SystemConfiguration portalConfiguration(PortalConfiguration portalConfiguration) {
    this.portalConfiguration = portalConfiguration;
    return this;
  }

   /**
   * Get portalConfiguration
   * @return portalConfiguration
  **/
  @Schema(description = "")
  public PortalConfiguration getPortalConfiguration() {
    return portalConfiguration;
  }

  public void setPortalConfiguration(PortalConfiguration portalConfiguration) {
    this.portalConfiguration = portalConfiguration;
  }

  public SystemConfiguration proxyConfiguration(ProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
    return this;
  }

   /**
   * Get proxyConfiguration
   * @return proxyConfiguration
  **/
  @Schema(description = "")
  public ProxyConfiguration getProxyConfiguration() {
    return proxyConfiguration;
  }

  public void setProxyConfiguration(ProxyConfiguration proxyConfiguration) {
    this.proxyConfiguration = proxyConfiguration;
  }

  public SystemConfiguration secureChannelConfiguration(SecureChannelConfiguration secureChannelConfiguration) {
    this.secureChannelConfiguration = secureChannelConfiguration;
    return this;
  }

   /**
   * Get secureChannelConfiguration
   * @return secureChannelConfiguration
  **/
  @Schema(description = "")
  public SecureChannelConfiguration getSecureChannelConfiguration() {
    return secureChannelConfiguration;
  }

  public void setSecureChannelConfiguration(SecureChannelConfiguration secureChannelConfiguration) {
    this.secureChannelConfiguration = secureChannelConfiguration;
  }

  public SystemConfiguration snmpConfiguration(SnmpConfiguration snmpConfiguration) {
    this.snmpConfiguration = snmpConfiguration;
    return this;
  }

   /**
   * Get snmpConfiguration
   * @return snmpConfiguration
  **/
  @Schema(description = "")
  public SnmpConfiguration getSnmpConfiguration() {
    return snmpConfiguration;
  }

  public void setSnmpConfiguration(SnmpConfiguration snmpConfiguration) {
    this.snmpConfiguration = snmpConfiguration;
  }

  public SystemConfiguration sshCiphers(List<String> sshCiphers) {
    this.sshCiphers = sshCiphers;
    return this;
  }

  public SystemConfiguration addSshCiphersItem(String sshCiphersItem) {
    if (this.sshCiphers == null) {
      this.sshCiphers = new ArrayList<String>();
    }
    this.sshCiphers.add(sshCiphersItem);
    return this;
  }

   /**
   * Allowed Ciphers list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default ciphers are allowed.
   * @return sshCiphers
  **/
  @Schema(description = "Allowed Ciphers list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default ciphers are allowed.")
  public List<String> getSshCiphers() {
    return sshCiphers;
  }

  public void setSshCiphers(List<String> sshCiphers) {
    this.sshCiphers = sshCiphers;
  }

  public SystemConfiguration sshHmacs(List<String> sshHmacs) {
    this.sshHmacs = sshHmacs;
    return this;
  }

  public SystemConfiguration addSshHmacsItem(String sshHmacsItem) {
    if (this.sshHmacs == null) {
      this.sshHmacs = new ArrayList<String>();
    }
    this.sshHmacs.add(sshHmacsItem);
    return this;
  }

   /**
   * Allowed HMAC list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default HMACs are allowed.
   * @return sshHmacs
  **/
  @Schema(description = "Allowed HMAC list for SSH to the management interface on the Controller and Service Engines. If this is not specified, all the default HMACs are allowed.")
  public List<String> getSshHmacs() {
    return sshHmacs;
  }

  public void setSshHmacs(List<String> sshHmacs) {
    this.sshHmacs = sshHmacs;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public SystemConfiguration uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public SystemConfiguration welcomeWorkflowComplete(Boolean welcomeWorkflowComplete) {
    this.welcomeWorkflowComplete = welcomeWorkflowComplete;
    return this;
  }

   /**
   * This flag is set once the Initial Controller Setup workflow is complete. Field introduced in 18.2.3.
   * @return welcomeWorkflowComplete
  **/
  @Schema(description = "This flag is set once the Initial Controller Setup workflow is complete. Field introduced in 18.2.3.")
  public Boolean isWelcomeWorkflowComplete() {
    return welcomeWorkflowComplete;
  }

  public void setWelcomeWorkflowComplete(Boolean welcomeWorkflowComplete) {
    this.welcomeWorkflowComplete = welcomeWorkflowComplete;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemConfiguration systemConfiguration = (SystemConfiguration) o;
    return Objects.equals(this._lastModified, systemConfiguration._lastModified) &&
        Objects.equals(this.adminAuthConfiguration, systemConfiguration.adminAuthConfiguration) &&
        Objects.equals(this.defaultLicenseTier, systemConfiguration.defaultLicenseTier) &&
        Objects.equals(this.dnsConfiguration, systemConfiguration.dnsConfiguration) &&
        Objects.equals(this.dnsVirtualserviceRefs, systemConfiguration.dnsVirtualserviceRefs) &&
        Objects.equals(this.dockerMode, systemConfiguration.dockerMode) &&
        Objects.equals(this.emailConfiguration, systemConfiguration.emailConfiguration) &&
        Objects.equals(this.globalTenantConfig, systemConfiguration.globalTenantConfig) &&
        Objects.equals(this.linuxConfiguration, systemConfiguration.linuxConfiguration) &&
        Objects.equals(this.mgmtIpAccessControl, systemConfiguration.mgmtIpAccessControl) &&
        Objects.equals(this.ntpConfiguration, systemConfiguration.ntpConfiguration) &&
        Objects.equals(this.portalConfiguration, systemConfiguration.portalConfiguration) &&
        Objects.equals(this.proxyConfiguration, systemConfiguration.proxyConfiguration) &&
        Objects.equals(this.secureChannelConfiguration, systemConfiguration.secureChannelConfiguration) &&
        Objects.equals(this.snmpConfiguration, systemConfiguration.snmpConfiguration) &&
        Objects.equals(this.sshCiphers, systemConfiguration.sshCiphers) &&
        Objects.equals(this.sshHmacs, systemConfiguration.sshHmacs) &&
        Objects.equals(this.url, systemConfiguration.url) &&
        Objects.equals(this.uuid, systemConfiguration.uuid) &&
        Objects.equals(this.welcomeWorkflowComplete, systemConfiguration.welcomeWorkflowComplete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, adminAuthConfiguration, defaultLicenseTier, dnsConfiguration, dnsVirtualserviceRefs, dockerMode, emailConfiguration, globalTenantConfig, linuxConfiguration, mgmtIpAccessControl, ntpConfiguration, portalConfiguration, proxyConfiguration, secureChannelConfiguration, snmpConfiguration, sshCiphers, sshHmacs, url, uuid, welcomeWorkflowComplete);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemConfiguration {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    adminAuthConfiguration: ").append(toIndentedString(adminAuthConfiguration)).append("\n");
    sb.append("    defaultLicenseTier: ").append(toIndentedString(defaultLicenseTier)).append("\n");
    sb.append("    dnsConfiguration: ").append(toIndentedString(dnsConfiguration)).append("\n");
    sb.append("    dnsVirtualserviceRefs: ").append(toIndentedString(dnsVirtualserviceRefs)).append("\n");
    sb.append("    dockerMode: ").append(toIndentedString(dockerMode)).append("\n");
    sb.append("    emailConfiguration: ").append(toIndentedString(emailConfiguration)).append("\n");
    sb.append("    globalTenantConfig: ").append(toIndentedString(globalTenantConfig)).append("\n");
    sb.append("    linuxConfiguration: ").append(toIndentedString(linuxConfiguration)).append("\n");
    sb.append("    mgmtIpAccessControl: ").append(toIndentedString(mgmtIpAccessControl)).append("\n");
    sb.append("    ntpConfiguration: ").append(toIndentedString(ntpConfiguration)).append("\n");
    sb.append("    portalConfiguration: ").append(toIndentedString(portalConfiguration)).append("\n");
    sb.append("    proxyConfiguration: ").append(toIndentedString(proxyConfiguration)).append("\n");
    sb.append("    secureChannelConfiguration: ").append(toIndentedString(secureChannelConfiguration)).append("\n");
    sb.append("    snmpConfiguration: ").append(toIndentedString(snmpConfiguration)).append("\n");
    sb.append("    sshCiphers: ").append(toIndentedString(sshCiphers)).append("\n");
    sb.append("    sshHmacs: ").append(toIndentedString(sshHmacs)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    welcomeWorkflowComplete: ").append(toIndentedString(welcomeWorkflowComplete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
