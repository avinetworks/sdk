/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.CRL;
import com.vmware.avi.sdk.model.SSLCertificate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * PKIProfile
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class PKIProfile {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("ca_certs")
  private List<SSLCertificate> caCerts = null;

  @JsonProperty("created_by")
  private String createdBy = null;

  @JsonProperty("crl_check")
  private Boolean crlCheck = true;

  @JsonProperty("crls")
  private List<CRL> crls = null;

  @JsonProperty("ignore_peer_chain")
  private Boolean ignorePeerChain = null;

  @JsonProperty("is_federated")
  private Boolean isFederated = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("tenant_ref")
  private String tenantRef = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("validate_only_leaf_crl")
  private Boolean validateOnlyLeafCrl = true;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public PKIProfile caCerts(List<SSLCertificate> caCerts) {
    this.caCerts = caCerts;
    return this;
  }

  public PKIProfile addCaCertsItem(SSLCertificate caCertsItem) {
    if (this.caCerts == null) {
      this.caCerts = new ArrayList<SSLCertificate>();
    }
    this.caCerts.add(caCertsItem);
    return this;
  }

   /**
   * List of Certificate Authorities (Root and Intermediate) trusted that is used for certificate validation.
   * @return caCerts
  **/
  @Schema(description = "List of Certificate Authorities (Root and Intermediate) trusted that is used for certificate validation.")
  public List<SSLCertificate> getCaCerts() {
    return caCerts;
  }

  public void setCaCerts(List<SSLCertificate> caCerts) {
    this.caCerts = caCerts;
  }

  public PKIProfile createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Creator name.
   * @return createdBy
  **/
  @Schema(description = "Creator name.")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public PKIProfile crlCheck(Boolean crlCheck) {
    this.crlCheck = crlCheck;
    return this;
  }

   /**
   * When enabled, Avi will verify via CRL checks that certificates in the trust chain have not been revoked.
   * @return crlCheck
  **/
  @Schema(description = "When enabled, Avi will verify via CRL checks that certificates in the trust chain have not been revoked.")
  public Boolean isCrlCheck() {
    return crlCheck;
  }

  public void setCrlCheck(Boolean crlCheck) {
    this.crlCheck = crlCheck;
  }

  public PKIProfile crls(List<CRL> crls) {
    this.crls = crls;
    return this;
  }

  public PKIProfile addCrlsItem(CRL crlsItem) {
    if (this.crls == null) {
      this.crls = new ArrayList<CRL>();
    }
    this.crls.add(crlsItem);
    return this;
  }

   /**
   * Certificate Revocation Lists.
   * @return crls
  **/
  @Schema(description = "Certificate Revocation Lists.")
  public List<CRL> getCrls() {
    return crls;
  }

  public void setCrls(List<CRL> crls) {
    this.crls = crls;
  }

  public PKIProfile ignorePeerChain(Boolean ignorePeerChain) {
    this.ignorePeerChain = ignorePeerChain;
    return this;
  }

   /**
   * When enabled, Avi will not trust Intermediate and Root certs presented by a client.  Instead, only the chain certs configured in the Certificate Authority section will be used to verify trust of the client&#x27;s cert.
   * @return ignorePeerChain
  **/
  @Schema(description = "When enabled, Avi will not trust Intermediate and Root certs presented by a client.  Instead, only the chain certs configured in the Certificate Authority section will be used to verify trust of the client's cert.")
  public Boolean isIgnorePeerChain() {
    return ignorePeerChain;
  }

  public void setIgnorePeerChain(Boolean ignorePeerChain) {
    this.ignorePeerChain = ignorePeerChain;
  }

  public PKIProfile isFederated(Boolean isFederated) {
    this.isFederated = isFederated;
    return this;
  }

   /**
   * This field describes the object&#x27;s replication scope. If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.  If the field is set to true, then the object is replicated across the federation.  . Field introduced in 17.1.3.
   * @return isFederated
  **/
  @Schema(description = "This field describes the object's replication scope. If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.  If the field is set to true, then the object is replicated across the federation.  . Field introduced in 17.1.3.")
  public Boolean isIsFederated() {
    return isFederated;
  }

  public void setIsFederated(Boolean isFederated) {
    this.isFederated = isFederated;
  }

  public PKIProfile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the PKI Profile.
   * @return name
  **/
  @Schema(required = true, description = "Name of the PKI Profile.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PKIProfile tenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Tenant.
   * @return tenantRef
  **/
  @Schema(description = " It is a reference to an object of type Tenant.")
  public String getTenantRef() {
    return tenantRef;
  }

  public void setTenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public PKIProfile uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public PKIProfile validateOnlyLeafCrl(Boolean validateOnlyLeafCrl) {
    this.validateOnlyLeafCrl = validateOnlyLeafCrl;
    return this;
  }

   /**
   * When enabled, Avi will only validate the revocation status of the leaf certificate using CRL. To enable validation for the entire chain, disable this option and provide all the relevant CRLs.
   * @return validateOnlyLeafCrl
  **/
  @Schema(description = "When enabled, Avi will only validate the revocation status of the leaf certificate using CRL. To enable validation for the entire chain, disable this option and provide all the relevant CRLs.")
  public Boolean isValidateOnlyLeafCrl() {
    return validateOnlyLeafCrl;
  }

  public void setValidateOnlyLeafCrl(Boolean validateOnlyLeafCrl) {
    this.validateOnlyLeafCrl = validateOnlyLeafCrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PKIProfile pkIProfile = (PKIProfile) o;
    return Objects.equals(this._lastModified, pkIProfile._lastModified) &&
        Objects.equals(this.caCerts, pkIProfile.caCerts) &&
        Objects.equals(this.createdBy, pkIProfile.createdBy) &&
        Objects.equals(this.crlCheck, pkIProfile.crlCheck) &&
        Objects.equals(this.crls, pkIProfile.crls) &&
        Objects.equals(this.ignorePeerChain, pkIProfile.ignorePeerChain) &&
        Objects.equals(this.isFederated, pkIProfile.isFederated) &&
        Objects.equals(this.name, pkIProfile.name) &&
        Objects.equals(this.tenantRef, pkIProfile.tenantRef) &&
        Objects.equals(this.url, pkIProfile.url) &&
        Objects.equals(this.uuid, pkIProfile.uuid) &&
        Objects.equals(this.validateOnlyLeafCrl, pkIProfile.validateOnlyLeafCrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, caCerts, createdBy, crlCheck, crls, ignorePeerChain, isFederated, name, tenantRef, url, uuid, validateOnlyLeafCrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PKIProfile {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    caCerts: ").append(toIndentedString(caCerts)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    crlCheck: ").append(toIndentedString(crlCheck)).append("\n");
    sb.append("    crls: ").append(toIndentedString(crls)).append("\n");
    sb.append("    ignorePeerChain: ").append(toIndentedString(ignorePeerChain)).append("\n");
    sb.append("    isFederated: ").append(toIndentedString(isFederated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tenantRef: ").append(toIndentedString(tenantRef)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    validateOnlyLeafCrl: ").append(toIndentedString(validateOnlyLeafCrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
