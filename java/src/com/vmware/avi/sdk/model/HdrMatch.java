/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * HdrMatch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class HdrMatch {
  @JsonProperty("hdr")
  private String hdr = null;

  @JsonProperty("match_case")
  private String matchCase = "INSENSITIVE";

  @JsonProperty("match_criteria")
  private String matchCriteria = null;

  @JsonProperty("value")
  private List<String> value = null;

  public HdrMatch hdr(String hdr) {
    this.hdr = hdr;
    return this;
  }

   /**
   * Name of the HTTP header whose value is to be matched.
   * @return hdr
  **/
  @Schema(required = true, description = "Name of the HTTP header whose value is to be matched.")
  public String getHdr() {
    return hdr;
  }

  public void setHdr(String hdr) {
    this.hdr = hdr;
  }

  public HdrMatch matchCase(String matchCase) {
    this.matchCase = matchCase;
    return this;
  }

   /**
   * Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.
   * @return matchCase
  **/
  @Schema(description = "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.")
  public String getMatchCase() {
    return matchCase;
  }

  public void setMatchCase(String matchCase) {
    this.matchCase = matchCase;
  }

  public HdrMatch matchCriteria(String matchCriteria) {
    this.matchCriteria = matchCriteria;
    return this;
  }

   /**
   * Criterion to use for matching headers in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.
   * @return matchCriteria
  **/
  @Schema(required = true, description = "Criterion to use for matching headers in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.")
  public String getMatchCriteria() {
    return matchCriteria;
  }

  public void setMatchCriteria(String matchCriteria) {
    this.matchCriteria = matchCriteria;
  }

  public HdrMatch value(List<String> value) {
    this.value = value;
    return this;
  }

  public HdrMatch addValueItem(String valueItem) {
    if (this.value == null) {
      this.value = new ArrayList<String>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * String values to match in the HTTP header.
   * @return value
  **/
  @Schema(description = "String values to match in the HTTP header.")
  public List<String> getValue() {
    return value;
  }

  public void setValue(List<String> value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HdrMatch hdrMatch = (HdrMatch) o;
    return Objects.equals(this.hdr, hdrMatch.hdr) &&
        Objects.equals(this.matchCase, hdrMatch.matchCase) &&
        Objects.equals(this.matchCriteria, hdrMatch.matchCriteria) &&
        Objects.equals(this.value, hdrMatch.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hdr, matchCase, matchCriteria, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HdrMatch {\n");
    
    sb.append("    hdr: ").append(toIndentedString(hdr)).append("\n");
    sb.append("    matchCase: ").append(toIndentedString(matchCase)).append("\n");
    sb.append("    matchCriteria: ").append(toIndentedString(matchCriteria)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
