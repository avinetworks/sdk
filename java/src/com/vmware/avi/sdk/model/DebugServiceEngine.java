/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.CaptureFilters;
import com.vmware.avi.sdk.model.DebugIpAddr;
import com.vmware.avi.sdk.model.DebugSeAgent;
import com.vmware.avi.sdk.model.DebugSeCpuShares;
import com.vmware.avi.sdk.model.DebugSeDataplane;
import com.vmware.avi.sdk.model.DebugSeFault;
import com.vmware.avi.sdk.model.DebugVirtualServiceCapture;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * DebugServiceEngine
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class DebugServiceEngine {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("capture")
  private Boolean capture = null;

  @JsonProperty("capture_filters")
  private CaptureFilters captureFilters = null;

  @JsonProperty("capture_params")
  private DebugVirtualServiceCapture captureParams = null;

  @JsonProperty("cpu_shares")
  private List<DebugSeCpuShares> cpuShares = null;

  @JsonProperty("debug_ip")
  private DebugIpAddr debugIp = null;

  @JsonProperty("fault")
  private DebugSeFault fault = null;

  @JsonProperty("flags")
  private List<DebugSeDataplane> flags = null;

  @JsonProperty("name")
  private String name = "VM name unknown";

  @JsonProperty("seagent_debug")
  private List<DebugSeAgent> seagentDebug = null;

  @JsonProperty("selogagent_debug")
  private DebugSeAgent selogagentDebug = null;

  @JsonProperty("tenant_ref")
  private String tenantRef = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public DebugServiceEngine capture(Boolean capture) {
    this.capture = capture;
    return this;
  }

   /**
   * Enable/disable packet capture. Field introduced in 18.2.2.
   * @return capture
  **/
  @Schema(description = "Enable/disable packet capture. Field introduced in 18.2.2.")
  public Boolean isCapture() {
    return capture;
  }

  public void setCapture(Boolean capture) {
    this.capture = capture;
  }

  public DebugServiceEngine captureFilters(CaptureFilters captureFilters) {
    this.captureFilters = captureFilters;
    return this;
  }

   /**
   * Get captureFilters
   * @return captureFilters
  **/
  @Schema(description = "")
  public CaptureFilters getCaptureFilters() {
    return captureFilters;
  }

  public void setCaptureFilters(CaptureFilters captureFilters) {
    this.captureFilters = captureFilters;
  }

  public DebugServiceEngine captureParams(DebugVirtualServiceCapture captureParams) {
    this.captureParams = captureParams;
    return this;
  }

   /**
   * Get captureParams
   * @return captureParams
  **/
  @Schema(description = "")
  public DebugVirtualServiceCapture getCaptureParams() {
    return captureParams;
  }

  public void setCaptureParams(DebugVirtualServiceCapture captureParams) {
    this.captureParams = captureParams;
  }

  public DebugServiceEngine cpuShares(List<DebugSeCpuShares> cpuShares) {
    this.cpuShares = cpuShares;
    return this;
  }

  public DebugServiceEngine addCpuSharesItem(DebugSeCpuShares cpuSharesItem) {
    if (this.cpuShares == null) {
      this.cpuShares = new ArrayList<DebugSeCpuShares>();
    }
    this.cpuShares.add(cpuSharesItem);
    return this;
  }

   /**
   * Placeholder for description of property cpu_shares of obj type DebugServiceEngine field type str  type object
   * @return cpuShares
  **/
  @Schema(description = "Placeholder for description of property cpu_shares of obj type DebugServiceEngine field type str  type object")
  public List<DebugSeCpuShares> getCpuShares() {
    return cpuShares;
  }

  public void setCpuShares(List<DebugSeCpuShares> cpuShares) {
    this.cpuShares = cpuShares;
  }

  public DebugServiceEngine debugIp(DebugIpAddr debugIp) {
    this.debugIp = debugIp;
    return this;
  }

   /**
   * Get debugIp
   * @return debugIp
  **/
  @Schema(description = "")
  public DebugIpAddr getDebugIp() {
    return debugIp;
  }

  public void setDebugIp(DebugIpAddr debugIp) {
    this.debugIp = debugIp;
  }

  public DebugServiceEngine fault(DebugSeFault fault) {
    this.fault = fault;
    return this;
  }

   /**
   * Get fault
   * @return fault
  **/
  @Schema(description = "")
  public DebugSeFault getFault() {
    return fault;
  }

  public void setFault(DebugSeFault fault) {
    this.fault = fault;
  }

  public DebugServiceEngine flags(List<DebugSeDataplane> flags) {
    this.flags = flags;
    return this;
  }

  public DebugServiceEngine addFlagsItem(DebugSeDataplane flagsItem) {
    if (this.flags == null) {
      this.flags = new ArrayList<DebugSeDataplane>();
    }
    this.flags.add(flagsItem);
    return this;
  }

   /**
   * Placeholder for description of property flags of obj type DebugServiceEngine field type str  type object
   * @return flags
  **/
  @Schema(description = "Placeholder for description of property flags of obj type DebugServiceEngine field type str  type object")
  public List<DebugSeDataplane> getFlags() {
    return flags;
  }

  public void setFlags(List<DebugSeDataplane> flags) {
    this.flags = flags;
  }

  public DebugServiceEngine name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object.
   * @return name
  **/
  @Schema(description = "Name of the object.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DebugServiceEngine seagentDebug(List<DebugSeAgent> seagentDebug) {
    this.seagentDebug = seagentDebug;
    return this;
  }

  public DebugServiceEngine addSeagentDebugItem(DebugSeAgent seagentDebugItem) {
    if (this.seagentDebug == null) {
      this.seagentDebug = new ArrayList<DebugSeAgent>();
    }
    this.seagentDebug.add(seagentDebugItem);
    return this;
  }

   /**
   * Placeholder for description of property seagent_debug of obj type DebugServiceEngine field type str  type object
   * @return seagentDebug
  **/
  @Schema(description = "Placeholder for description of property seagent_debug of obj type DebugServiceEngine field type str  type object")
  public List<DebugSeAgent> getSeagentDebug() {
    return seagentDebug;
  }

  public void setSeagentDebug(List<DebugSeAgent> seagentDebug) {
    this.seagentDebug = seagentDebug;
  }

  public DebugServiceEngine selogagentDebug(DebugSeAgent selogagentDebug) {
    this.selogagentDebug = selogagentDebug;
    return this;
  }

   /**
   * Get selogagentDebug
   * @return selogagentDebug
  **/
  @Schema(description = "")
  public DebugSeAgent getSelogagentDebug() {
    return selogagentDebug;
  }

  public void setSelogagentDebug(DebugSeAgent selogagentDebug) {
    this.selogagentDebug = selogagentDebug;
  }

  public DebugServiceEngine tenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Tenant.
   * @return tenantRef
  **/
  @Schema(description = " It is a reference to an object of type Tenant.")
  public String getTenantRef() {
    return tenantRef;
  }

  public void setTenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public DebugServiceEngine uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebugServiceEngine debugServiceEngine = (DebugServiceEngine) o;
    return Objects.equals(this._lastModified, debugServiceEngine._lastModified) &&
        Objects.equals(this.capture, debugServiceEngine.capture) &&
        Objects.equals(this.captureFilters, debugServiceEngine.captureFilters) &&
        Objects.equals(this.captureParams, debugServiceEngine.captureParams) &&
        Objects.equals(this.cpuShares, debugServiceEngine.cpuShares) &&
        Objects.equals(this.debugIp, debugServiceEngine.debugIp) &&
        Objects.equals(this.fault, debugServiceEngine.fault) &&
        Objects.equals(this.flags, debugServiceEngine.flags) &&
        Objects.equals(this.name, debugServiceEngine.name) &&
        Objects.equals(this.seagentDebug, debugServiceEngine.seagentDebug) &&
        Objects.equals(this.selogagentDebug, debugServiceEngine.selogagentDebug) &&
        Objects.equals(this.tenantRef, debugServiceEngine.tenantRef) &&
        Objects.equals(this.url, debugServiceEngine.url) &&
        Objects.equals(this.uuid, debugServiceEngine.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, capture, captureFilters, captureParams, cpuShares, debugIp, fault, flags, name, seagentDebug, selogagentDebug, tenantRef, url, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebugServiceEngine {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    capture: ").append(toIndentedString(capture)).append("\n");
    sb.append("    captureFilters: ").append(toIndentedString(captureFilters)).append("\n");
    sb.append("    captureParams: ").append(toIndentedString(captureParams)).append("\n");
    sb.append("    cpuShares: ").append(toIndentedString(cpuShares)).append("\n");
    sb.append("    debugIp: ").append(toIndentedString(debugIp)).append("\n");
    sb.append("    fault: ").append(toIndentedString(fault)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    seagentDebug: ").append(toIndentedString(seagentDebug)).append("\n");
    sb.append("    selogagentDebug: ").append(toIndentedString(selogagentDebug)).append("\n");
    sb.append("    tenantRef: ").append(toIndentedString(tenantRef)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
