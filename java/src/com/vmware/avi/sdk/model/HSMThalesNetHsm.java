/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.IpAddr;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * HSMThalesNetHsm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class HSMThalesNetHsm {
  @JsonProperty("esn")
  private String esn = null;

  @JsonProperty("keyhash")
  private String keyhash = null;

  @JsonProperty("module_id")
  private Integer moduleId = null;

  @JsonProperty("priority")
  private Integer priority = 100;

  @JsonProperty("remote_ip")
  private IpAddr remoteIp = null;

  @JsonProperty("remote_port")
  private Integer remotePort = 9004;

  public HSMThalesNetHsm esn(String esn) {
    this.esn = esn;
    return this;
  }

   /**
   * Electronic serial number of the netHSM device. Use Thales anonkneti utility to find the netHSM ESN.
   * @return esn
  **/
  @Schema(required = true, description = "Electronic serial number of the netHSM device. Use Thales anonkneti utility to find the netHSM ESN.")
  public String getEsn() {
    return esn;
  }

  public void setEsn(String esn) {
    this.esn = esn;
  }

  public HSMThalesNetHsm keyhash(String keyhash) {
    this.keyhash = keyhash;
    return this;
  }

   /**
   * Hash of the key that netHSM device uses to authenticate itself. Use Thales anonkneti utility to find the netHSM keyhash.
   * @return keyhash
  **/
  @Schema(required = true, description = "Hash of the key that netHSM device uses to authenticate itself. Use Thales anonkneti utility to find the netHSM keyhash.")
  public String getKeyhash() {
    return keyhash;
  }

  public void setKeyhash(String keyhash) {
    this.keyhash = keyhash;
  }

  public HSMThalesNetHsm moduleId(Integer moduleId) {
    this.moduleId = moduleId;
    return this;
  }

   /**
   * Local module id of the netHSM device.
   * @return moduleId
  **/
  @Schema(description = "Local module id of the netHSM device.")
  public Integer getModuleId() {
    return moduleId;
  }

  public void setModuleId(Integer moduleId) {
    this.moduleId = moduleId;
  }

  public HSMThalesNetHsm priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority class of the nethsm in an high availability setup. 1 is the highest priority and 100 is the lowest priority. Allowed values are 1-100.
   * @return priority
  **/
  @Schema(required = true, description = "Priority class of the nethsm in an high availability setup. 1 is the highest priority and 100 is the lowest priority. Allowed values are 1-100.")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public HSMThalesNetHsm remoteIp(IpAddr remoteIp) {
    this.remoteIp = remoteIp;
    return this;
  }

   /**
   * Get remoteIp
   * @return remoteIp
  **/
  @Schema(required = true, description = "")
  public IpAddr getRemoteIp() {
    return remoteIp;
  }

  public void setRemoteIp(IpAddr remoteIp) {
    this.remoteIp = remoteIp;
  }

  public HSMThalesNetHsm remotePort(Integer remotePort) {
    this.remotePort = remotePort;
    return this;
  }

   /**
   * Port at which the netHSM device accepts the connection. Allowed values are 1-65535.
   * @return remotePort
  **/
  @Schema(description = "Port at which the netHSM device accepts the connection. Allowed values are 1-65535.")
  public Integer getRemotePort() {
    return remotePort;
  }

  public void setRemotePort(Integer remotePort) {
    this.remotePort = remotePort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HSMThalesNetHsm hsMThalesNetHsm = (HSMThalesNetHsm) o;
    return Objects.equals(this.esn, hsMThalesNetHsm.esn) &&
        Objects.equals(this.keyhash, hsMThalesNetHsm.keyhash) &&
        Objects.equals(this.moduleId, hsMThalesNetHsm.moduleId) &&
        Objects.equals(this.priority, hsMThalesNetHsm.priority) &&
        Objects.equals(this.remoteIp, hsMThalesNetHsm.remoteIp) &&
        Objects.equals(this.remotePort, hsMThalesNetHsm.remotePort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(esn, keyhash, moduleId, priority, remoteIp, remotePort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HSMThalesNetHsm {\n");
    
    sb.append("    esn: ").append(toIndentedString(esn)).append("\n");
    sb.append("    keyhash: ").append(toIndentedString(keyhash)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    remoteIp: ").append(toIndentedString(remoteIp)).append("\n");
    sb.append("    remotePort: ").append(toIndentedString(remotePort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
