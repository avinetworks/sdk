/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.GCPInBandManagement;
import com.vmware.avi.sdk.model.GCPOneArmMode;
import com.vmware.avi.sdk.model.GCPTwoArmMode;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * GCPNetworkConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class GCPNetworkConfig {
  @JsonProperty("config")
  private String config = null;

  @JsonProperty("inband")
  private GCPInBandManagement inband = null;

  @JsonProperty("one_arm")
  private GCPOneArmMode oneArm = null;

  @JsonProperty("two_arm")
  private GCPTwoArmMode twoArm = null;

  public GCPNetworkConfig config(String config) {
    this.config = config;
    return this;
  }

   /**
   * Config Mode for Google Cloud network configuration. Enum options - INBAND_MANAGEMENT, ONE_ARM_MODE, TWO_ARM_MODE. Field introduced in 18.2.1.
   * @return config
  **/
  @Schema(required = true, description = "Config Mode for Google Cloud network configuration. Enum options - INBAND_MANAGEMENT, ONE_ARM_MODE, TWO_ARM_MODE. Field introduced in 18.2.1.")
  public String getConfig() {
    return config;
  }

  public void setConfig(String config) {
    this.config = config;
  }

  public GCPNetworkConfig inband(GCPInBandManagement inband) {
    this.inband = inband;
    return this;
  }

   /**
   * Get inband
   * @return inband
  **/
  @Schema(description = "")
  public GCPInBandManagement getInband() {
    return inband;
  }

  public void setInband(GCPInBandManagement inband) {
    this.inband = inband;
  }

  public GCPNetworkConfig oneArm(GCPOneArmMode oneArm) {
    this.oneArm = oneArm;
    return this;
  }

   /**
   * Get oneArm
   * @return oneArm
  **/
  @Schema(description = "")
  public GCPOneArmMode getOneArm() {
    return oneArm;
  }

  public void setOneArm(GCPOneArmMode oneArm) {
    this.oneArm = oneArm;
  }

  public GCPNetworkConfig twoArm(GCPTwoArmMode twoArm) {
    this.twoArm = twoArm;
    return this;
  }

   /**
   * Get twoArm
   * @return twoArm
  **/
  @Schema(description = "")
  public GCPTwoArmMode getTwoArm() {
    return twoArm;
  }

  public void setTwoArm(GCPTwoArmMode twoArm) {
    this.twoArm = twoArm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GCPNetworkConfig gcPNetworkConfig = (GCPNetworkConfig) o;
    return Objects.equals(this.config, gcPNetworkConfig.config) &&
        Objects.equals(this.inband, gcPNetworkConfig.inband) &&
        Objects.equals(this.oneArm, gcPNetworkConfig.oneArm) &&
        Objects.equals(this.twoArm, gcPNetworkConfig.twoArm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, inband, oneArm, twoArm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GCPNetworkConfig {\n");
    
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    inband: ").append(toIndentedString(inband)).append("\n");
    sb.append("    oneArm: ").append(toIndentedString(oneArm)).append("\n");
    sb.append("    twoArm: ").append(toIndentedString(twoArm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
