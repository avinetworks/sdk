/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.GslbGeoLocation;
import com.vmware.avi.sdk.model.GslbHealthMonitorProxy;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * GslbThirdPartySite
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class GslbThirdPartySite {
  @JsonProperty("cluster_uuid")
  private String clusterUuid = null;

  @JsonProperty("enabled")
  private Boolean enabled = true;

  @JsonProperty("hm_proxies")
  private List<GslbHealthMonitorProxy> hmProxies = null;

  @JsonProperty("location")
  private GslbGeoLocation location = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("ratio")
  private Integer ratio = null;

  @JsonProperty("uuid")
  private String uuid = null;

   /**
   * Third-party-site identifier generated by Avi. Field introduced in 17.1.1.
   * @return clusterUuid
  **/
  @Schema(description = "Third-party-site identifier generated by Avi. Field introduced in 17.1.1.")
  public String getClusterUuid() {
    return clusterUuid;
  }

  public GslbThirdPartySite enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable or disable the third-party Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance. A disabled site&#x27;s configuration shall be retained  but it will not get any new configuration updates.   VIPs associated with the disabled site shall not be sent in DNS response. . Field introduced in 17.1.1.
   * @return enabled
  **/
  @Schema(description = "Enable or disable the third-party Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance. A disabled site's configuration shall be retained  but it will not get any new configuration updates.   VIPs associated with the disabled site shall not be sent in DNS response. . Field introduced in 17.1.1.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public GslbThirdPartySite hmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
    return this;
  }

  public GslbThirdPartySite addHmProxiesItem(GslbHealthMonitorProxy hmProxiesItem) {
    if (this.hmProxies == null) {
      this.hmProxies = new ArrayList<GslbHealthMonitorProxy>();
    }
    this.hmProxies.add(hmProxiesItem);
    return this;
  }

   /**
   * User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.
   * @return hmProxies
  **/
  @Schema(description = "User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.")
  public List<GslbHealthMonitorProxy> getHmProxies() {
    return hmProxies;
  }

  public void setHmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
  }

  public GslbThirdPartySite location(GslbGeoLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public GslbGeoLocation getLocation() {
    return location;
  }

  public void setLocation(GslbGeoLocation location) {
    this.location = location;
  }

  public GslbThirdPartySite name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the third-party Site. Field introduced in 17.1.1.
   * @return name
  **/
  @Schema(required = true, description = "Name of the third-party Site. Field introduced in 17.1.1.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GslbThirdPartySite ratio(Integer ratio) {
    this.ratio = ratio;
    return this;
  }

   /**
   * User can overide the individual GslbPoolMember ratio for all the VIPs of this site. If this field is not configured, then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.
   * @return ratio
  **/
  @Schema(description = "User can overide the individual GslbPoolMember ratio for all the VIPs of this site. If this field is not configured, then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.")
  public Integer getRatio() {
    return ratio;
  }

  public void setRatio(Integer ratio) {
    this.ratio = ratio;
  }

  public GslbThirdPartySite uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * This field is used as a key in the datastore for the GslbThirdPartySite table to encapsulate site-related info. . Field introduced in 17.2.5.
   * @return uuid
  **/
  @Schema(description = "This field is used as a key in the datastore for the GslbThirdPartySite table to encapsulate site-related info. . Field introduced in 17.2.5.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GslbThirdPartySite gslbThirdPartySite = (GslbThirdPartySite) o;
    return Objects.equals(this.clusterUuid, gslbThirdPartySite.clusterUuid) &&
        Objects.equals(this.enabled, gslbThirdPartySite.enabled) &&
        Objects.equals(this.hmProxies, gslbThirdPartySite.hmProxies) &&
        Objects.equals(this.location, gslbThirdPartySite.location) &&
        Objects.equals(this.name, gslbThirdPartySite.name) &&
        Objects.equals(this.ratio, gslbThirdPartySite.ratio) &&
        Objects.equals(this.uuid, gslbThirdPartySite.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterUuid, enabled, hmProxies, location, name, ratio, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GslbThirdPartySite {\n");
    
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hmProxies: ").append(toIndentedString(hmProxies)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
