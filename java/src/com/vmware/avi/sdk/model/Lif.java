/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.Cif;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Lif
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class Lif {
  @JsonProperty("cifs")
  private List<Cif> cifs = null;

  @JsonProperty("lif")
  private String lif = null;

  @JsonProperty("lif_label")
  private String lifLabel = null;

  @JsonProperty("subnet")
  private String subnet = null;

  public Lif cifs(List<Cif> cifs) {
    this.cifs = cifs;
    return this;
  }

  public Lif addCifsItem(Cif cifsItem) {
    if (this.cifs == null) {
      this.cifs = new ArrayList<Cif>();
    }
    this.cifs.add(cifsItem);
    return this;
  }

   /**
   * Placeholder for description of property cifs of obj type Lif field type str  type object
   * @return cifs
  **/
  @Schema(description = "Placeholder for description of property cifs of obj type Lif field type str  type object")
  public List<Cif> getCifs() {
    return cifs;
  }

  public void setCifs(List<Cif> cifs) {
    this.cifs = cifs;
  }

  public Lif lif(String lif) {
    this.lif = lif;
    return this;
  }

   /**
   * lif of Lif.
   * @return lif
  **/
  @Schema(description = "lif of Lif.")
  public String getLif() {
    return lif;
  }

  public void setLif(String lif) {
    this.lif = lif;
  }

  public Lif lifLabel(String lifLabel) {
    this.lifLabel = lifLabel;
    return this;
  }

   /**
   * lif_label of Lif.
   * @return lifLabel
  **/
  @Schema(description = "lif_label of Lif.")
  public String getLifLabel() {
    return lifLabel;
  }

  public void setLifLabel(String lifLabel) {
    this.lifLabel = lifLabel;
  }

  public Lif subnet(String subnet) {
    this.subnet = subnet;
    return this;
  }

   /**
   * subnet of Lif.
   * @return subnet
  **/
  @Schema(description = "subnet of Lif.")
  public String getSubnet() {
    return subnet;
  }

  public void setSubnet(String subnet) {
    this.subnet = subnet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Lif lif = (Lif) o;
    return Objects.equals(this.cifs, lif.cifs) &&
        Objects.equals(this.lif, lif.lif) &&
        Objects.equals(this.lifLabel, lif.lifLabel) &&
        Objects.equals(this.subnet, lif.subnet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cifs, lif, lifLabel, subnet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Lif {\n");
    
    sb.append("    cifs: ").append(toIndentedString(cifs)).append("\n");
    sb.append("    lif: ").append(toIndentedString(lif)).append("\n");
    sb.append("    lifLabel: ").append(toIndentedString(lifLabel)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
