/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.VIMgrInterestedEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * VIMgrDCRuntime
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class VIMgrDCRuntime {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("cloud_ref")
  private String cloudRef = null;

  @JsonProperty("cluster_refs")
  private List<String> clusterRefs = null;

  @JsonProperty("host_refs")
  private List<String> hostRefs = null;

  @JsonProperty("interested_hosts")
  private List<VIMgrInterestedEntity> interestedHosts = null;

  @JsonProperty("interested_nws")
  private List<VIMgrInterestedEntity> interestedNws = null;

  @JsonProperty("interested_vms")
  private List<VIMgrInterestedEntity> interestedVms = null;

  @JsonProperty("inventory_state")
  private Integer inventoryState = null;

  @JsonProperty("managed_object_id")
  private String managedObjectId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("nw_refs")
  private List<String> nwRefs = null;

  @JsonProperty("pending_vcenter_reqs")
  private Integer pendingVcenterReqs = null;

  @JsonProperty("sevm_refs")
  private List<String> sevmRefs = null;

  @JsonProperty("tenant_ref")
  private String tenantRef = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("vcenter_uuid")
  private String vcenterUuid = null;

  @JsonProperty("vm_refs")
  private List<String> vmRefs = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public VIMgrDCRuntime cloudRef(String cloudRef) {
    this.cloudRef = cloudRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Cloud.
   * @return cloudRef
  **/
  @Schema(description = " It is a reference to an object of type Cloud.")
  public String getCloudRef() {
    return cloudRef;
  }

  public void setCloudRef(String cloudRef) {
    this.cloudRef = cloudRef;
  }

  public VIMgrDCRuntime clusterRefs(List<String> clusterRefs) {
    this.clusterRefs = clusterRefs;
    return this;
  }

  public VIMgrDCRuntime addClusterRefsItem(String clusterRefsItem) {
    if (this.clusterRefs == null) {
      this.clusterRefs = new ArrayList<String>();
    }
    this.clusterRefs.add(clusterRefsItem);
    return this;
  }

   /**
   *  It is a reference to an object of type VIMgrClusterRuntime.
   * @return clusterRefs
  **/
  @Schema(description = " It is a reference to an object of type VIMgrClusterRuntime.")
  public List<String> getClusterRefs() {
    return clusterRefs;
  }

  public void setClusterRefs(List<String> clusterRefs) {
    this.clusterRefs = clusterRefs;
  }

  public VIMgrDCRuntime hostRefs(List<String> hostRefs) {
    this.hostRefs = hostRefs;
    return this;
  }

  public VIMgrDCRuntime addHostRefsItem(String hostRefsItem) {
    if (this.hostRefs == null) {
      this.hostRefs = new ArrayList<String>();
    }
    this.hostRefs.add(hostRefsItem);
    return this;
  }

   /**
   *  It is a reference to an object of type VIMgrHostRuntime.
   * @return hostRefs
  **/
  @Schema(description = " It is a reference to an object of type VIMgrHostRuntime.")
  public List<String> getHostRefs() {
    return hostRefs;
  }

  public void setHostRefs(List<String> hostRefs) {
    this.hostRefs = hostRefs;
  }

  public VIMgrDCRuntime interestedHosts(List<VIMgrInterestedEntity> interestedHosts) {
    this.interestedHosts = interestedHosts;
    return this;
  }

  public VIMgrDCRuntime addInterestedHostsItem(VIMgrInterestedEntity interestedHostsItem) {
    if (this.interestedHosts == null) {
      this.interestedHosts = new ArrayList<VIMgrInterestedEntity>();
    }
    this.interestedHosts.add(interestedHostsItem);
    return this;
  }

   /**
   * Placeholder for description of property interested_hosts of obj type VIMgrDCRuntime field type str  type object
   * @return interestedHosts
  **/
  @Schema(description = "Placeholder for description of property interested_hosts of obj type VIMgrDCRuntime field type str  type object")
  public List<VIMgrInterestedEntity> getInterestedHosts() {
    return interestedHosts;
  }

  public void setInterestedHosts(List<VIMgrInterestedEntity> interestedHosts) {
    this.interestedHosts = interestedHosts;
  }

  public VIMgrDCRuntime interestedNws(List<VIMgrInterestedEntity> interestedNws) {
    this.interestedNws = interestedNws;
    return this;
  }

  public VIMgrDCRuntime addInterestedNwsItem(VIMgrInterestedEntity interestedNwsItem) {
    if (this.interestedNws == null) {
      this.interestedNws = new ArrayList<VIMgrInterestedEntity>();
    }
    this.interestedNws.add(interestedNwsItem);
    return this;
  }

   /**
   * Placeholder for description of property interested_nws of obj type VIMgrDCRuntime field type str  type object
   * @return interestedNws
  **/
  @Schema(description = "Placeholder for description of property interested_nws of obj type VIMgrDCRuntime field type str  type object")
  public List<VIMgrInterestedEntity> getInterestedNws() {
    return interestedNws;
  }

  public void setInterestedNws(List<VIMgrInterestedEntity> interestedNws) {
    this.interestedNws = interestedNws;
  }

  public VIMgrDCRuntime interestedVms(List<VIMgrInterestedEntity> interestedVms) {
    this.interestedVms = interestedVms;
    return this;
  }

  public VIMgrDCRuntime addInterestedVmsItem(VIMgrInterestedEntity interestedVmsItem) {
    if (this.interestedVms == null) {
      this.interestedVms = new ArrayList<VIMgrInterestedEntity>();
    }
    this.interestedVms.add(interestedVmsItem);
    return this;
  }

   /**
   * Placeholder for description of property interested_vms of obj type VIMgrDCRuntime field type str  type object
   * @return interestedVms
  **/
  @Schema(description = "Placeholder for description of property interested_vms of obj type VIMgrDCRuntime field type str  type object")
  public List<VIMgrInterestedEntity> getInterestedVms() {
    return interestedVms;
  }

  public void setInterestedVms(List<VIMgrInterestedEntity> interestedVms) {
    this.interestedVms = interestedVms;
  }

  public VIMgrDCRuntime inventoryState(Integer inventoryState) {
    this.inventoryState = inventoryState;
    return this;
  }

   /**
   * Number of inventory_state.
   * @return inventoryState
  **/
  @Schema(description = "Number of inventory_state.")
  public Integer getInventoryState() {
    return inventoryState;
  }

  public void setInventoryState(Integer inventoryState) {
    this.inventoryState = inventoryState;
  }

  public VIMgrDCRuntime managedObjectId(String managedObjectId) {
    this.managedObjectId = managedObjectId;
    return this;
  }

   /**
   * managed_object_id of VIMgrDCRuntime.
   * @return managedObjectId
  **/
  @Schema(required = true, description = "managed_object_id of VIMgrDCRuntime.")
  public String getManagedObjectId() {
    return managedObjectId;
  }

  public void setManagedObjectId(String managedObjectId) {
    this.managedObjectId = managedObjectId;
  }

  public VIMgrDCRuntime name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object.
   * @return name
  **/
  @Schema(required = true, description = "Name of the object.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VIMgrDCRuntime nwRefs(List<String> nwRefs) {
    this.nwRefs = nwRefs;
    return this;
  }

  public VIMgrDCRuntime addNwRefsItem(String nwRefsItem) {
    if (this.nwRefs == null) {
      this.nwRefs = new ArrayList<String>();
    }
    this.nwRefs.add(nwRefsItem);
    return this;
  }

   /**
   *  It is a reference to an object of type VIMgrNWRuntime.
   * @return nwRefs
  **/
  @Schema(description = " It is a reference to an object of type VIMgrNWRuntime.")
  public List<String> getNwRefs() {
    return nwRefs;
  }

  public void setNwRefs(List<String> nwRefs) {
    this.nwRefs = nwRefs;
  }

  public VIMgrDCRuntime pendingVcenterReqs(Integer pendingVcenterReqs) {
    this.pendingVcenterReqs = pendingVcenterReqs;
    return this;
  }

   /**
   * Number of pending_vcenter_reqs.
   * @return pendingVcenterReqs
  **/
  @Schema(description = "Number of pending_vcenter_reqs.")
  public Integer getPendingVcenterReqs() {
    return pendingVcenterReqs;
  }

  public void setPendingVcenterReqs(Integer pendingVcenterReqs) {
    this.pendingVcenterReqs = pendingVcenterReqs;
  }

  public VIMgrDCRuntime sevmRefs(List<String> sevmRefs) {
    this.sevmRefs = sevmRefs;
    return this;
  }

  public VIMgrDCRuntime addSevmRefsItem(String sevmRefsItem) {
    if (this.sevmRefs == null) {
      this.sevmRefs = new ArrayList<String>();
    }
    this.sevmRefs.add(sevmRefsItem);
    return this;
  }

   /**
   *  It is a reference to an object of type VIMgrSEVMRuntime.
   * @return sevmRefs
  **/
  @Schema(description = " It is a reference to an object of type VIMgrSEVMRuntime.")
  public List<String> getSevmRefs() {
    return sevmRefs;
  }

  public void setSevmRefs(List<String> sevmRefs) {
    this.sevmRefs = sevmRefs;
  }

  public VIMgrDCRuntime tenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Tenant.
   * @return tenantRef
  **/
  @Schema(description = " It is a reference to an object of type Tenant.")
  public String getTenantRef() {
    return tenantRef;
  }

  public void setTenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
  }

  public VIMgrDCRuntime type(String type) {
    this.type = type;
    return this;
  }

   /**
   *  Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP.
   * @return type
  **/
  @Schema(required = true, description = " Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public VIMgrDCRuntime uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public VIMgrDCRuntime vcenterUuid(String vcenterUuid) {
    this.vcenterUuid = vcenterUuid;
    return this;
  }

   /**
   * Unique object identifier of vcenter.
   * @return vcenterUuid
  **/
  @Schema(description = "Unique object identifier of vcenter.")
  public String getVcenterUuid() {
    return vcenterUuid;
  }

  public void setVcenterUuid(String vcenterUuid) {
    this.vcenterUuid = vcenterUuid;
  }

  public VIMgrDCRuntime vmRefs(List<String> vmRefs) {
    this.vmRefs = vmRefs;
    return this;
  }

  public VIMgrDCRuntime addVmRefsItem(String vmRefsItem) {
    if (this.vmRefs == null) {
      this.vmRefs = new ArrayList<String>();
    }
    this.vmRefs.add(vmRefsItem);
    return this;
  }

   /**
   *  It is a reference to an object of type VIMgrVMRuntime.
   * @return vmRefs
  **/
  @Schema(description = " It is a reference to an object of type VIMgrVMRuntime.")
  public List<String> getVmRefs() {
    return vmRefs;
  }

  public void setVmRefs(List<String> vmRefs) {
    this.vmRefs = vmRefs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VIMgrDCRuntime viMgrDCRuntime = (VIMgrDCRuntime) o;
    return Objects.equals(this._lastModified, viMgrDCRuntime._lastModified) &&
        Objects.equals(this.cloudRef, viMgrDCRuntime.cloudRef) &&
        Objects.equals(this.clusterRefs, viMgrDCRuntime.clusterRefs) &&
        Objects.equals(this.hostRefs, viMgrDCRuntime.hostRefs) &&
        Objects.equals(this.interestedHosts, viMgrDCRuntime.interestedHosts) &&
        Objects.equals(this.interestedNws, viMgrDCRuntime.interestedNws) &&
        Objects.equals(this.interestedVms, viMgrDCRuntime.interestedVms) &&
        Objects.equals(this.inventoryState, viMgrDCRuntime.inventoryState) &&
        Objects.equals(this.managedObjectId, viMgrDCRuntime.managedObjectId) &&
        Objects.equals(this.name, viMgrDCRuntime.name) &&
        Objects.equals(this.nwRefs, viMgrDCRuntime.nwRefs) &&
        Objects.equals(this.pendingVcenterReqs, viMgrDCRuntime.pendingVcenterReqs) &&
        Objects.equals(this.sevmRefs, viMgrDCRuntime.sevmRefs) &&
        Objects.equals(this.tenantRef, viMgrDCRuntime.tenantRef) &&
        Objects.equals(this.type, viMgrDCRuntime.type) &&
        Objects.equals(this.url, viMgrDCRuntime.url) &&
        Objects.equals(this.uuid, viMgrDCRuntime.uuid) &&
        Objects.equals(this.vcenterUuid, viMgrDCRuntime.vcenterUuid) &&
        Objects.equals(this.vmRefs, viMgrDCRuntime.vmRefs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, cloudRef, clusterRefs, hostRefs, interestedHosts, interestedNws, interestedVms, inventoryState, managedObjectId, name, nwRefs, pendingVcenterReqs, sevmRefs, tenantRef, type, url, uuid, vcenterUuid, vmRefs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VIMgrDCRuntime {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    cloudRef: ").append(toIndentedString(cloudRef)).append("\n");
    sb.append("    clusterRefs: ").append(toIndentedString(clusterRefs)).append("\n");
    sb.append("    hostRefs: ").append(toIndentedString(hostRefs)).append("\n");
    sb.append("    interestedHosts: ").append(toIndentedString(interestedHosts)).append("\n");
    sb.append("    interestedNws: ").append(toIndentedString(interestedNws)).append("\n");
    sb.append("    interestedVms: ").append(toIndentedString(interestedVms)).append("\n");
    sb.append("    inventoryState: ").append(toIndentedString(inventoryState)).append("\n");
    sb.append("    managedObjectId: ").append(toIndentedString(managedObjectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nwRefs: ").append(toIndentedString(nwRefs)).append("\n");
    sb.append("    pendingVcenterReqs: ").append(toIndentedString(pendingVcenterReqs)).append("\n");
    sb.append("    sevmRefs: ").append(toIndentedString(sevmRefs)).append("\n");
    sb.append("    tenantRef: ").append(toIndentedString(tenantRef)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vcenterUuid: ").append(toIndentedString(vcenterUuid)).append("\n");
    sb.append("    vmRefs: ").append(toIndentedString(vmRefs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
