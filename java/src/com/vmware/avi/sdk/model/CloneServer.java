/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.IpAddr;
import com.vmware.avi.sdk.model.IpAddrPrefix;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CloneServer
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class CloneServer {
  @JsonProperty("ip_address")
  private IpAddr ipAddress = null;

  @JsonProperty("mac")
  private String mac = null;

  @JsonProperty("network_ref")
  private String networkRef = null;

  @JsonProperty("subnet")
  private IpAddrPrefix subnet = null;

  public CloneServer ipAddress(IpAddr ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @Schema(description = "")
  public IpAddr getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(IpAddr ipAddress) {
    this.ipAddress = ipAddress;
  }

  public CloneServer mac(String mac) {
    this.mac = mac;
    return this;
  }

   /**
   * MAC Address of the Clone Server. Field introduced in 17.1.1.
   * @return mac
  **/
  @Schema(description = "MAC Address of the Clone Server. Field introduced in 17.1.1.")
  public String getMac() {
    return mac;
  }

  public void setMac(String mac) {
    this.mac = mac;
  }

  public CloneServer networkRef(String networkRef) {
    this.networkRef = networkRef;
    return this;
  }

   /**
   * Network to clone the traffic to. It is a reference to an object of type Network. Field introduced in 17.1.1.
   * @return networkRef
  **/
  @Schema(description = "Network to clone the traffic to. It is a reference to an object of type Network. Field introduced in 17.1.1.")
  public String getNetworkRef() {
    return networkRef;
  }

  public void setNetworkRef(String networkRef) {
    this.networkRef = networkRef;
  }

  public CloneServer subnet(IpAddrPrefix subnet) {
    this.subnet = subnet;
    return this;
  }

   /**
   * Get subnet
   * @return subnet
  **/
  @Schema(description = "")
  public IpAddrPrefix getSubnet() {
    return subnet;
  }

  public void setSubnet(IpAddrPrefix subnet) {
    this.subnet = subnet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloneServer cloneServer = (CloneServer) o;
    return Objects.equals(this.ipAddress, cloneServer.ipAddress) &&
        Objects.equals(this.mac, cloneServer.mac) &&
        Objects.equals(this.networkRef, cloneServer.networkRef) &&
        Objects.equals(this.subnet, cloneServer.subnet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipAddress, mac, networkRef, subnet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloneServer {\n");
    
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    mac: ").append(toIndentedString(mac)).append("\n");
    sb.append("    networkRef: ").append(toIndentedString(networkRef)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
