/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ConnPoolProperties
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class ConnPoolProperties {
  @JsonProperty("upstream_connpool_conn_idle_tmo")
  private Integer upstreamConnpoolConnIdleTmo = 60000;

  @JsonProperty("upstream_connpool_conn_life_tmo")
  private Integer upstreamConnpoolConnLifeTmo = 600000;

  @JsonProperty("upstream_connpool_conn_max_reuse")
  private Integer upstreamConnpoolConnMaxReuse = null;

  @JsonProperty("upstream_connpool_server_max_cache")
  private Integer upstreamConnpoolServerMaxCache = null;

  public ConnPoolProperties upstreamConnpoolConnIdleTmo(Integer upstreamConnpoolConnIdleTmo) {
    this.upstreamConnpoolConnIdleTmo = upstreamConnpoolConnIdleTmo;
    return this;
  }

   /**
   * Connection idle timeout. Field introduced in 18.2.1.
   * @return upstreamConnpoolConnIdleTmo
  **/
  @Schema(description = "Connection idle timeout. Field introduced in 18.2.1.")
  public Integer getUpstreamConnpoolConnIdleTmo() {
    return upstreamConnpoolConnIdleTmo;
  }

  public void setUpstreamConnpoolConnIdleTmo(Integer upstreamConnpoolConnIdleTmo) {
    this.upstreamConnpoolConnIdleTmo = upstreamConnpoolConnIdleTmo;
  }

  public ConnPoolProperties upstreamConnpoolConnLifeTmo(Integer upstreamConnpoolConnLifeTmo) {
    this.upstreamConnpoolConnLifeTmo = upstreamConnpoolConnLifeTmo;
    return this;
  }

   /**
   * Connection life timeout. Field introduced in 18.2.1.
   * @return upstreamConnpoolConnLifeTmo
  **/
  @Schema(description = "Connection life timeout. Field introduced in 18.2.1.")
  public Integer getUpstreamConnpoolConnLifeTmo() {
    return upstreamConnpoolConnLifeTmo;
  }

  public void setUpstreamConnpoolConnLifeTmo(Integer upstreamConnpoolConnLifeTmo) {
    this.upstreamConnpoolConnLifeTmo = upstreamConnpoolConnLifeTmo;
  }

  public ConnPoolProperties upstreamConnpoolConnMaxReuse(Integer upstreamConnpoolConnMaxReuse) {
    this.upstreamConnpoolConnMaxReuse = upstreamConnpoolConnMaxReuse;
    return this;
  }

   /**
   * Maximum number of times a connection can be reused. Special values are 0- &#x27;unlimited&#x27;. Field introduced in 18.2.1.
   * @return upstreamConnpoolConnMaxReuse
  **/
  @Schema(description = "Maximum number of times a connection can be reused. Special values are 0- 'unlimited'. Field introduced in 18.2.1.")
  public Integer getUpstreamConnpoolConnMaxReuse() {
    return upstreamConnpoolConnMaxReuse;
  }

  public void setUpstreamConnpoolConnMaxReuse(Integer upstreamConnpoolConnMaxReuse) {
    this.upstreamConnpoolConnMaxReuse = upstreamConnpoolConnMaxReuse;
  }

  public ConnPoolProperties upstreamConnpoolServerMaxCache(Integer upstreamConnpoolServerMaxCache) {
    this.upstreamConnpoolServerMaxCache = upstreamConnpoolServerMaxCache;
    return this;
  }

   /**
   * Maximum number of connections a server can cache. Special values are 0- &#x27;unlimited&#x27;. Field introduced in 18.2.1.
   * @return upstreamConnpoolServerMaxCache
  **/
  @Schema(description = "Maximum number of connections a server can cache. Special values are 0- 'unlimited'. Field introduced in 18.2.1.")
  public Integer getUpstreamConnpoolServerMaxCache() {
    return upstreamConnpoolServerMaxCache;
  }

  public void setUpstreamConnpoolServerMaxCache(Integer upstreamConnpoolServerMaxCache) {
    this.upstreamConnpoolServerMaxCache = upstreamConnpoolServerMaxCache;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnPoolProperties connPoolProperties = (ConnPoolProperties) o;
    return Objects.equals(this.upstreamConnpoolConnIdleTmo, connPoolProperties.upstreamConnpoolConnIdleTmo) &&
        Objects.equals(this.upstreamConnpoolConnLifeTmo, connPoolProperties.upstreamConnpoolConnLifeTmo) &&
        Objects.equals(this.upstreamConnpoolConnMaxReuse, connPoolProperties.upstreamConnpoolConnMaxReuse) &&
        Objects.equals(this.upstreamConnpoolServerMaxCache, connPoolProperties.upstreamConnpoolServerMaxCache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(upstreamConnpoolConnIdleTmo, upstreamConnpoolConnLifeTmo, upstreamConnpoolConnMaxReuse, upstreamConnpoolServerMaxCache);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnPoolProperties {\n");
    
    sb.append("    upstreamConnpoolConnIdleTmo: ").append(toIndentedString(upstreamConnpoolConnIdleTmo)).append("\n");
    sb.append("    upstreamConnpoolConnLifeTmo: ").append(toIndentedString(upstreamConnpoolConnLifeTmo)).append("\n");
    sb.append("    upstreamConnpoolConnMaxReuse: ").append(toIndentedString(upstreamConnpoolConnMaxReuse)).append("\n");
    sb.append("    upstreamConnpoolServerMaxCache: ").append(toIndentedString(upstreamConnpoolServerMaxCache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
