/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.SecureChannelMetadata;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * SecureChannelToken
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class SecureChannelToken {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("expiry_time")
  private Double expiryTime = null;

  @JsonProperty("metadata")
  private List<SecureChannelMetadata> metadata = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("node_uuid")
  private String nodeUuid = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public SecureChannelToken expiryTime(Double expiryTime) {
    this.expiryTime = expiryTime;
    return this;
  }

   /**
   * Expiry time for secure channel.
   * @return expiryTime
  **/
  @Schema(description = "Expiry time for secure channel.")
  public Double getExpiryTime() {
    return expiryTime;
  }

  public void setExpiryTime(Double expiryTime) {
    this.expiryTime = expiryTime;
  }

  public SecureChannelToken metadata(List<SecureChannelMetadata> metadata) {
    this.metadata = metadata;
    return this;
  }

  public SecureChannelToken addMetadataItem(SecureChannelMetadata metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<SecureChannelMetadata>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

   /**
   * Placeholder for description of property metadata of obj type SecureChannelToken field type str  type object
   * @return metadata
  **/
  @Schema(description = "Placeholder for description of property metadata of obj type SecureChannelToken field type str  type object")
  public List<SecureChannelMetadata> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<SecureChannelMetadata> metadata) {
    this.metadata = metadata;
  }

  public SecureChannelToken name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object.
   * @return name
  **/
  @Schema(required = true, description = "Name of the object.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SecureChannelToken nodeUuid(String nodeUuid) {
    this.nodeUuid = nodeUuid;
    return this;
  }

   /**
   * Unique object identifier of node.
   * @return nodeUuid
  **/
  @Schema(description = "Unique object identifier of node.")
  public String getNodeUuid() {
    return nodeUuid;
  }

  public void setNodeUuid(String nodeUuid) {
    this.nodeUuid = nodeUuid;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public SecureChannelToken uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique object identifier of the object.
   * @return uuid
  **/
  @Schema(description = "Unique object identifier of the object.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecureChannelToken secureChannelToken = (SecureChannelToken) o;
    return Objects.equals(this._lastModified, secureChannelToken._lastModified) &&
        Objects.equals(this.expiryTime, secureChannelToken.expiryTime) &&
        Objects.equals(this.metadata, secureChannelToken.metadata) &&
        Objects.equals(this.name, secureChannelToken.name) &&
        Objects.equals(this.nodeUuid, secureChannelToken.nodeUuid) &&
        Objects.equals(this.url, secureChannelToken.url) &&
        Objects.equals(this.uuid, secureChannelToken.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, expiryTime, metadata, name, nodeUuid, url, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecureChannelToken {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    expiryTime: ").append(toIndentedString(expiryTime)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeUuid: ").append(toIndentedString(nodeUuid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
