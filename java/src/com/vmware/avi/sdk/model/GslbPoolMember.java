/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.GslbGeoLocation;
import com.vmware.avi.sdk.model.GslbHealthMonitorProxy;
import com.vmware.avi.sdk.model.GslbIpAddr;
import com.vmware.avi.sdk.model.IpAddr;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * GslbPoolMember
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class GslbPoolMember {
  @JsonProperty("cloud_uuid")
  private String cloudUuid = null;

  @JsonProperty("cluster_uuid")
  private String clusterUuid = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("enabled")
  private Boolean enabled = true;

  @JsonProperty("fqdn")
  private String fqdn = null;

  @JsonProperty("hm_proxies")
  private List<GslbHealthMonitorProxy> hmProxies = null;

  @JsonProperty("hostname")
  private String hostname = null;

  @JsonProperty("ip")
  private IpAddr ip = null;

  @JsonProperty("location")
  private GslbGeoLocation location = null;

  @JsonProperty("public_ip")
  private GslbIpAddr publicIp = null;

  @JsonProperty("ratio")
  private Integer ratio = 1;

  @JsonProperty("vs_uuid")
  private String vsUuid = null;

  public GslbPoolMember cloudUuid(String cloudUuid) {
    this.cloudUuid = cloudUuid;
    return this;
  }

   /**
   * The Cloud UUID of the Site. Field introduced in 17.1.2.
   * @return cloudUuid
  **/
  @Schema(description = "The Cloud UUID of the Site. Field introduced in 17.1.2.")
  public String getCloudUuid() {
    return cloudUuid;
  }

  public void setCloudUuid(String cloudUuid) {
    this.cloudUuid = cloudUuid;
  }

  public GslbPoolMember clusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

   /**
   * The Cluster UUID of the Site.
   * @return clusterUuid
  **/
  @Schema(description = "The Cluster UUID of the Site.")
  public String getClusterUuid() {
    return clusterUuid;
  }

  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }

  public GslbPoolMember description(String description) {
    this.description = description;
    return this;
  }

   /**
   * User provided information that records member details such as application owner name, contact, etc. Field introduced in 17.1.3.
   * @return description
  **/
  @Schema(description = "User provided information that records member details such as application owner name, contact, etc. Field introduced in 17.1.3.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GslbPoolMember enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable or Disable member to decide if this address should be provided in DNS responses.
   * @return enabled
  **/
  @Schema(description = "Enable or Disable member to decide if this address should be provided in DNS responses.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public GslbPoolMember fqdn(String fqdn) {
    this.fqdn = fqdn;
    return this;
  }

   /**
   * The pool member is configured with a fully qualified domain name.  The FQDN is resolved to an IP address by the controller. DNS service shall health monitor the resolved IP address while it will return the fqdn(cname) in the DNS response.If the user has configured an IP address (in addition to the FQDN), then the IP address will get overwritten whenever periodic FQDN refresh is done by the controller. .
   * @return fqdn
  **/
  @Schema(description = "The pool member is configured with a fully qualified domain name.  The FQDN is resolved to an IP address by the controller. DNS service shall health monitor the resolved IP address while it will return the fqdn(cname) in the DNS response.If the user has configured an IP address (in addition to the FQDN), then the IP address will get overwritten whenever periodic FQDN refresh is done by the controller. .")
  public String getFqdn() {
    return fqdn;
  }

  public void setFqdn(String fqdn) {
    this.fqdn = fqdn;
  }

  public GslbPoolMember hmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
    return this;
  }

  public GslbPoolMember addHmProxiesItem(GslbHealthMonitorProxy hmProxiesItem) {
    if (this.hmProxies == null) {
      this.hmProxies = new ArrayList<GslbHealthMonitorProxy>();
    }
    this.hmProxies.add(hmProxiesItem);
    return this;
  }

   /**
   * Internal generated system-field. Field deprecated in 18.2.2. Field introduced in 17.1.1.
   * @return hmProxies
  **/
  @Schema(description = "Internal generated system-field. Field deprecated in 18.2.2. Field introduced in 17.1.1.")
  public List<GslbHealthMonitorProxy> getHmProxies() {
    return hmProxies;
  }

  public void setHmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
  }

  public GslbPoolMember hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Hostname to be used as host header for http health monitors and as TLS server name for https health monitors.(By default, the fqdn of the GSLB pool member or GSLB service is used.) Note  this field is not used as http host header when exact_http_request is set in the health monitor. . Field introduced in 18.2.5.
   * @return hostname
  **/
  @Schema(description = "Hostname to be used as host header for http health monitors and as TLS server name for https health monitors.(By default, the fqdn of the GSLB pool member or GSLB service is used.) Note  this field is not used as http host header when exact_http_request is set in the health monitor. . Field introduced in 18.2.5.")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public GslbPoolMember ip(IpAddr ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public IpAddr getIp() {
    return ip;
  }

  public void setIp(IpAddr ip) {
    this.ip = ip;
  }

  public GslbPoolMember location(GslbGeoLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public GslbGeoLocation getLocation() {
    return location;
  }

  public void setLocation(GslbGeoLocation location) {
    this.location = location;
  }

  public GslbPoolMember publicIp(GslbIpAddr publicIp) {
    this.publicIp = publicIp;
    return this;
  }

   /**
   * Get publicIp
   * @return publicIp
  **/
  @Schema(description = "")
  public GslbIpAddr getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(GslbIpAddr publicIp) {
    this.publicIp = publicIp;
  }

  public GslbPoolMember ratio(Integer ratio) {
    this.ratio = ratio;
    return this;
  }

   /**
   * Overrides the default ratio of 1.  Reduces the percentage the LB algorithm would pick the server in relation to its peers.  Range is 1-20. Allowed values are 1-20.
   * @return ratio
  **/
  @Schema(description = "Overrides the default ratio of 1.  Reduces the percentage the LB algorithm would pick the server in relation to its peers.  Range is 1-20. Allowed values are 1-20.")
  public Integer getRatio() {
    return ratio;
  }

  public void setRatio(Integer ratio) {
    this.ratio = ratio;
  }

  public GslbPoolMember vsUuid(String vsUuid) {
    this.vsUuid = vsUuid;
    return this;
  }

   /**
   * Select local virtual service in the specified controller cluster belonging to this GSLB service. The virtual service may have multiple IP addresses and FQDNs.  User will have to choose IP address or FQDN and configure it in the respective field. .
   * @return vsUuid
  **/
  @Schema(description = "Select local virtual service in the specified controller cluster belonging to this GSLB service. The virtual service may have multiple IP addresses and FQDNs.  User will have to choose IP address or FQDN and configure it in the respective field. .")
  public String getVsUuid() {
    return vsUuid;
  }

  public void setVsUuid(String vsUuid) {
    this.vsUuid = vsUuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GslbPoolMember gslbPoolMember = (GslbPoolMember) o;
    return Objects.equals(this.cloudUuid, gslbPoolMember.cloudUuid) &&
        Objects.equals(this.clusterUuid, gslbPoolMember.clusterUuid) &&
        Objects.equals(this.description, gslbPoolMember.description) &&
        Objects.equals(this.enabled, gslbPoolMember.enabled) &&
        Objects.equals(this.fqdn, gslbPoolMember.fqdn) &&
        Objects.equals(this.hmProxies, gslbPoolMember.hmProxies) &&
        Objects.equals(this.hostname, gslbPoolMember.hostname) &&
        Objects.equals(this.ip, gslbPoolMember.ip) &&
        Objects.equals(this.location, gslbPoolMember.location) &&
        Objects.equals(this.publicIp, gslbPoolMember.publicIp) &&
        Objects.equals(this.ratio, gslbPoolMember.ratio) &&
        Objects.equals(this.vsUuid, gslbPoolMember.vsUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudUuid, clusterUuid, description, enabled, fqdn, hmProxies, hostname, ip, location, publicIp, ratio, vsUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GslbPoolMember {\n");
    
    sb.append("    cloudUuid: ").append(toIndentedString(cloudUuid)).append("\n");
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
    sb.append("    hmProxies: ").append(toIndentedString(hmProxies)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("    vsUuid: ").append(toIndentedString(vsUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
