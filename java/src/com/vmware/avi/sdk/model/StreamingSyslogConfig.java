/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * StreamingSyslogConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class StreamingSyslogConfig {
  @JsonProperty("facility")
  private Integer facility = 16;

  @JsonProperty("filtered_log_severity")
  private Integer filteredLogSeverity = 5;

  @JsonProperty("hostname")
  private String hostname = "AviVantage";

  @JsonProperty("non_significant_log_severity")
  private Integer nonSignificantLogSeverity = 6;

  @JsonProperty("significant_log_severity")
  private Integer significantLogSeverity = 4;

  public StreamingSyslogConfig facility(Integer facility) {
    this.facility = facility;
    return this;
  }

   /**
   * Facility value, as defined in RFC5424, must be between 0 and 23 inclusive. Allowed values are 0-23. Field introduced in 18.1.1.
   * @return facility
  **/
  @Schema(description = "Facility value, as defined in RFC5424, must be between 0 and 23 inclusive. Allowed values are 0-23. Field introduced in 18.1.1.")
  public Integer getFacility() {
    return facility;
  }

  public void setFacility(Integer facility) {
    this.facility = facility;
  }

  public StreamingSyslogConfig filteredLogSeverity(Integer filteredLogSeverity) {
    this.filteredLogSeverity = filteredLogSeverity;
    return this;
  }

   /**
   * Severity code, as defined in RFC5424, for filtered logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.
   * @return filteredLogSeverity
  **/
  @Schema(description = "Severity code, as defined in RFC5424, for filtered logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.")
  public Integer getFilteredLogSeverity() {
    return filteredLogSeverity;
  }

  public void setFilteredLogSeverity(Integer filteredLogSeverity) {
    this.filteredLogSeverity = filteredLogSeverity;
  }

  public StreamingSyslogConfig hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * String to use as the hostname in the syslog messages. This string can contain only printable ASCII characters (hex 21 to hex 7E; no space allowed). Field introduced in 18.1.1.
   * @return hostname
  **/
  @Schema(description = "String to use as the hostname in the syslog messages. This string can contain only printable ASCII characters (hex 21 to hex 7E; no space allowed). Field introduced in 18.1.1.")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public StreamingSyslogConfig nonSignificantLogSeverity(Integer nonSignificantLogSeverity) {
    this.nonSignificantLogSeverity = nonSignificantLogSeverity;
    return this;
  }

   /**
   * Severity code, as defined in RFC5424, for non-significant logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.
   * @return nonSignificantLogSeverity
  **/
  @Schema(description = "Severity code, as defined in RFC5424, for non-significant logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.")
  public Integer getNonSignificantLogSeverity() {
    return nonSignificantLogSeverity;
  }

  public void setNonSignificantLogSeverity(Integer nonSignificantLogSeverity) {
    this.nonSignificantLogSeverity = nonSignificantLogSeverity;
  }

  public StreamingSyslogConfig significantLogSeverity(Integer significantLogSeverity) {
    this.significantLogSeverity = significantLogSeverity;
    return this;
  }

   /**
   * Severity code, as defined in RFC5424, for significant logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.
   * @return significantLogSeverity
  **/
  @Schema(description = "Severity code, as defined in RFC5424, for significant logs. This must be between 0 and 7 inclusive. Allowed values are 0-7. Field introduced in 18.1.1.")
  public Integer getSignificantLogSeverity() {
    return significantLogSeverity;
  }

  public void setSignificantLogSeverity(Integer significantLogSeverity) {
    this.significantLogSeverity = significantLogSeverity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamingSyslogConfig streamingSyslogConfig = (StreamingSyslogConfig) o;
    return Objects.equals(this.facility, streamingSyslogConfig.facility) &&
        Objects.equals(this.filteredLogSeverity, streamingSyslogConfig.filteredLogSeverity) &&
        Objects.equals(this.hostname, streamingSyslogConfig.hostname) &&
        Objects.equals(this.nonSignificantLogSeverity, streamingSyslogConfig.nonSignificantLogSeverity) &&
        Objects.equals(this.significantLogSeverity, streamingSyslogConfig.significantLogSeverity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facility, filteredLogSeverity, hostname, nonSignificantLogSeverity, significantLogSeverity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamingSyslogConfig {\n");
    
    sb.append("    facility: ").append(toIndentedString(facility)).append("\n");
    sb.append("    filteredLogSeverity: ").append(toIndentedString(filteredLogSeverity)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    nonSignificantLogSeverity: ").append(toIndentedString(nonSignificantLogSeverity)).append("\n");
    sb.append("    significantLogSeverity: ").append(toIndentedString(significantLogSeverity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
