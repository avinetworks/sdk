/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.WafExcludeListEntry;
import com.vmware.avi.sdk.model.WafRule;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * WafRuleGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class WafRuleGroup {
  @JsonProperty("enable")
  private Boolean enable = true;

  @JsonProperty("exclude_list")
  private List<WafExcludeListEntry> excludeList = null;

  @JsonProperty("force_detection")
  private Boolean forceDetection = null;

  @JsonProperty("index")
  private Integer index = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("rules")
  private List<WafRule> rules = null;

  public WafRuleGroup enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Enable or disable WAF Rule Group. Field introduced in 17.2.1.
   * @return enable
  **/
  @Schema(required = true, description = "Enable or disable WAF Rule Group. Field introduced in 17.2.1.")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public WafRuleGroup excludeList(List<WafExcludeListEntry> excludeList) {
    this.excludeList = excludeList;
    return this;
  }

  public WafRuleGroup addExcludeListItem(WafExcludeListEntry excludeListItem) {
    if (this.excludeList == null) {
      this.excludeList = new ArrayList<WafExcludeListEntry>();
    }
    this.excludeList.add(excludeListItem);
    return this;
  }

   /**
   * Exclude list for the WAF rule group. The fields in the exclude list entry are logically and&#x27;ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be &#x27;logical or&#x27; of them. Field introduced in 17.2.1.
   * @return excludeList
  **/
  @Schema(description = "Exclude list for the WAF rule group. The fields in the exclude list entry are logically and'ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be 'logical or' of them. Field introduced in 17.2.1.")
  public List<WafExcludeListEntry> getExcludeList() {
    return excludeList;
  }

  public void setExcludeList(List<WafExcludeListEntry> excludeList) {
    this.excludeList = excludeList;
  }

  public WafRuleGroup forceDetection(Boolean forceDetection) {
    this.forceDetection = forceDetection;
    return this;
  }

   /**
   * When set to &#x27;true&#x27;, any rule in this group will not cause &#x27;deny&#x27; or &#x27;redirect&#x27; actions to run, even if WAF Policy is set to enforcement mode. The behavior would be as if this rule operated in detection mode regardless of WAF Policy setting. Field deprecated in 18.1.5. Field introduced in 18.1.4.
   * @return forceDetection
  **/
  @Schema(description = "When set to 'true', any rule in this group will not cause 'deny' or 'redirect' actions to run, even if WAF Policy is set to enforcement mode. The behavior would be as if this rule operated in detection mode regardless of WAF Policy setting. Field deprecated in 18.1.5. Field introduced in 18.1.4.")
  public Boolean isForceDetection() {
    return forceDetection;
  }

  public void setForceDetection(Boolean forceDetection) {
    this.forceDetection = forceDetection;
  }

  public WafRuleGroup index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   *  Field introduced in 17.2.1.
   * @return index
  **/
  @Schema(required = true, description = " Field introduced in 17.2.1.")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public WafRuleGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   *  Field introduced in 17.2.1.
   * @return name
  **/
  @Schema(required = true, description = " Field introduced in 17.2.1.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WafRuleGroup rules(List<WafRule> rules) {
    this.rules = rules;
    return this;
  }

  public WafRuleGroup addRulesItem(WafRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<WafRule>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Rules as per Modsec language. Field introduced in 17.2.1.
   * @return rules
  **/
  @Schema(description = "Rules as per Modsec language. Field introduced in 17.2.1.")
  public List<WafRule> getRules() {
    return rules;
  }

  public void setRules(List<WafRule> rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WafRuleGroup wafRuleGroup = (WafRuleGroup) o;
    return Objects.equals(this.enable, wafRuleGroup.enable) &&
        Objects.equals(this.excludeList, wafRuleGroup.excludeList) &&
        Objects.equals(this.forceDetection, wafRuleGroup.forceDetection) &&
        Objects.equals(this.index, wafRuleGroup.index) &&
        Objects.equals(this.name, wafRuleGroup.name) &&
        Objects.equals(this.rules, wafRuleGroup.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enable, excludeList, forceDetection, index, name, rules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WafRuleGroup {\n");
    
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    excludeList: ").append(toIndentedString(excludeList)).append("\n");
    sb.append("    forceDetection: ").append(toIndentedString(forceDetection)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
