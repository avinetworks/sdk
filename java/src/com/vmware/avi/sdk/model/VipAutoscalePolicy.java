/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * VipAutoscalePolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class VipAutoscalePolicy {
  @JsonProperty("dns_cooldown")
  private Integer dnsCooldown = 60;

  @JsonProperty("max_size")
  private Integer maxSize = 5;

  @JsonProperty("min_size")
  private Integer minSize = 1;

  @JsonProperty("suspend")
  private Boolean suspend = null;

  public VipAutoscalePolicy dnsCooldown(Integer dnsCooldown) {
    this.dnsCooldown = dnsCooldown;
    return this;
  }

   /**
   * The amount of time, in seconds, when a Vip is withdrawn before a scaling activity starts. Field introduced in 17.2.12, 18.1.2.
   * @return dnsCooldown
  **/
  @Schema(description = "The amount of time, in seconds, when a Vip is withdrawn before a scaling activity starts. Field introduced in 17.2.12, 18.1.2.")
  public Integer getDnsCooldown() {
    return dnsCooldown;
  }

  public void setDnsCooldown(Integer dnsCooldown) {
    this.dnsCooldown = dnsCooldown;
  }

  public VipAutoscalePolicy maxSize(Integer maxSize) {
    this.maxSize = maxSize;
    return this;
  }

   /**
   * The maximum size of the group. Field introduced in 17.2.12, 18.1.2.
   * @return maxSize
  **/
  @Schema(description = "The maximum size of the group. Field introduced in 17.2.12, 18.1.2.")
  public Integer getMaxSize() {
    return maxSize;
  }

  public void setMaxSize(Integer maxSize) {
    this.maxSize = maxSize;
  }

  public VipAutoscalePolicy minSize(Integer minSize) {
    this.minSize = minSize;
    return this;
  }

   /**
   * The minimum size of the group. Field introduced in 17.2.12, 18.1.2.
   * @return minSize
  **/
  @Schema(description = "The minimum size of the group. Field introduced in 17.2.12, 18.1.2.")
  public Integer getMinSize() {
    return minSize;
  }

  public void setMinSize(Integer minSize) {
    this.minSize = minSize;
  }

  public VipAutoscalePolicy suspend(Boolean suspend) {
    this.suspend = suspend;
    return this;
  }

   /**
   * When set, scaling is suspended. Field introduced in 17.2.12, 18.1.2.
   * @return suspend
  **/
  @Schema(description = "When set, scaling is suspended. Field introduced in 17.2.12, 18.1.2.")
  public Boolean isSuspend() {
    return suspend;
  }

  public void setSuspend(Boolean suspend) {
    this.suspend = suspend;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VipAutoscalePolicy vipAutoscalePolicy = (VipAutoscalePolicy) o;
    return Objects.equals(this.dnsCooldown, vipAutoscalePolicy.dnsCooldown) &&
        Objects.equals(this.maxSize, vipAutoscalePolicy.maxSize) &&
        Objects.equals(this.minSize, vipAutoscalePolicy.minSize) &&
        Objects.equals(this.suspend, vipAutoscalePolicy.suspend);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dnsCooldown, maxSize, minSize, suspend);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VipAutoscalePolicy {\n");
    
    sb.append("    dnsCooldown: ").append(toIndentedString(dnsCooldown)).append("\n");
    sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    minSize: ").append(toIndentedString(minSize)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
