/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.HTTPStatusRange;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * HTTPReselectRespCode
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class HTTPReselectRespCode {
  @JsonProperty("codes")
  private List<Integer> codes = null;

  @JsonProperty("ranges")
  private List<HTTPStatusRange> ranges = null;

  @JsonProperty("resp_code_block")
  private List<String> respCodeBlock = null;

  public HTTPReselectRespCode codes(List<Integer> codes) {
    this.codes = codes;
    return this;
  }

  public HTTPReselectRespCode addCodesItem(Integer codesItem) {
    if (this.codes == null) {
      this.codes = new ArrayList<Integer>();
    }
    this.codes.add(codesItem);
    return this;
  }

   /**
   * HTTP response code to be matched. Allowed values are 400-599.
   * @return codes
  **/
  @Schema(description = "HTTP response code to be matched. Allowed values are 400-599.")
  public List<Integer> getCodes() {
    return codes;
  }

  public void setCodes(List<Integer> codes) {
    this.codes = codes;
  }

  public HTTPReselectRespCode ranges(List<HTTPStatusRange> ranges) {
    this.ranges = ranges;
    return this;
  }

  public HTTPReselectRespCode addRangesItem(HTTPStatusRange rangesItem) {
    if (this.ranges == null) {
      this.ranges = new ArrayList<HTTPStatusRange>();
    }
    this.ranges.add(rangesItem);
    return this;
  }

   /**
   * HTTP response code ranges to match.
   * @return ranges
  **/
  @Schema(description = "HTTP response code ranges to match.")
  public List<HTTPStatusRange> getRanges() {
    return ranges;
  }

  public void setRanges(List<HTTPStatusRange> ranges) {
    this.ranges = ranges;
  }

  public HTTPReselectRespCode respCodeBlock(List<String> respCodeBlock) {
    this.respCodeBlock = respCodeBlock;
    return this;
  }

  public HTTPReselectRespCode addRespCodeBlockItem(String respCodeBlockItem) {
    if (this.respCodeBlock == null) {
      this.respCodeBlock = new ArrayList<String>();
    }
    this.respCodeBlock.add(respCodeBlockItem);
    return this;
  }

   /**
   * Block of HTTP response codes to match for server reselect. Enum options - HTTP_RSP_4XX, HTTP_RSP_5XX.
   * @return respCodeBlock
  **/
  @Schema(description = "Block of HTTP response codes to match for server reselect. Enum options - HTTP_RSP_4XX, HTTP_RSP_5XX.")
  public List<String> getRespCodeBlock() {
    return respCodeBlock;
  }

  public void setRespCodeBlock(List<String> respCodeBlock) {
    this.respCodeBlock = respCodeBlock;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPReselectRespCode htTPReselectRespCode = (HTTPReselectRespCode) o;
    return Objects.equals(this.codes, htTPReselectRespCode.codes) &&
        Objects.equals(this.ranges, htTPReselectRespCode.ranges) &&
        Objects.equals(this.respCodeBlock, htTPReselectRespCode.respCodeBlock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codes, ranges, respCodeBlock);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPReselectRespCode {\n");
    
    sb.append("    codes: ").append(toIndentedString(codes)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("    respCodeBlock: ").append(toIndentedString(respCodeBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
