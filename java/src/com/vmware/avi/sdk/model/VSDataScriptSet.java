/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vmware.avi.sdk.model.RateLimiter;
import com.vmware.avi.sdk.model.VSDataScript;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * VSDataScriptSet
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class VSDataScriptSet {
  @JsonProperty("_last_modified")
  private String _lastModified = null;

  @JsonProperty("created_by")
  private String createdBy = null;

  @JsonProperty("datascript")
  private List<VSDataScript> datascript = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("ipgroup_refs")
  private List<String> ipgroupRefs = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("pool_group_refs")
  private List<String> poolGroupRefs = null;

  @JsonProperty("pool_refs")
  private List<String> poolRefs = null;

  @JsonProperty("protocol_parser_refs")
  private List<String> protocolParserRefs = null;

  @JsonProperty("rate_limiters")
  private List<RateLimiter> rateLimiters = null;

  @JsonProperty("string_group_refs")
  private List<String> stringGroupRefs = null;

  @JsonProperty("tenant_ref")
  private String tenantRef = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("uuid")
  private String uuid = null;

   /**
   * UNIX time since epoch in microseconds. Units(MICROSECONDS).
   * @return _lastModified
  **/
  @Schema(description = "UNIX time since epoch in microseconds. Units(MICROSECONDS).")
  public String getLastModified() {
    return _lastModified;
  }

  public VSDataScriptSet createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Creator name. Field introduced in 17.1.11,17.2.4.
   * @return createdBy
  **/
  @Schema(description = "Creator name. Field introduced in 17.1.11,17.2.4.")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public VSDataScriptSet datascript(List<VSDataScript> datascript) {
    this.datascript = datascript;
    return this;
  }

  public VSDataScriptSet addDatascriptItem(VSDataScript datascriptItem) {
    if (this.datascript == null) {
      this.datascript = new ArrayList<VSDataScript>();
    }
    this.datascript.add(datascriptItem);
    return this;
  }

   /**
   * DataScripts to execute.
   * @return datascript
  **/
  @Schema(description = "DataScripts to execute.")
  public List<VSDataScript> getDatascript() {
    return datascript;
  }

  public void setDatascript(List<VSDataScript> datascript) {
    this.datascript = datascript;
  }

  public VSDataScriptSet description(String description) {
    this.description = description;
    return this;
  }

   /**
   * User defined description for the object.
   * @return description
  **/
  @Schema(description = "User defined description for the object.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VSDataScriptSet ipgroupRefs(List<String> ipgroupRefs) {
    this.ipgroupRefs = ipgroupRefs;
    return this;
  }

  public VSDataScriptSet addIpgroupRefsItem(String ipgroupRefsItem) {
    if (this.ipgroupRefs == null) {
      this.ipgroupRefs = new ArrayList<String>();
    }
    this.ipgroupRefs.add(ipgroupRefsItem);
    return this;
  }

   /**
   * UUID of IP Groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type IpAddrGroup.
   * @return ipgroupRefs
  **/
  @Schema(description = "UUID of IP Groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type IpAddrGroup.")
  public List<String> getIpgroupRefs() {
    return ipgroupRefs;
  }

  public void setIpgroupRefs(List<String> ipgroupRefs) {
    this.ipgroupRefs = ipgroupRefs;
  }

  public VSDataScriptSet name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name for the virtual service datascript collection.
   * @return name
  **/
  @Schema(required = true, description = "Name for the virtual service datascript collection.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VSDataScriptSet poolGroupRefs(List<String> poolGroupRefs) {
    this.poolGroupRefs = poolGroupRefs;
    return this;
  }

  public VSDataScriptSet addPoolGroupRefsItem(String poolGroupRefsItem) {
    if (this.poolGroupRefs == null) {
      this.poolGroupRefs = new ArrayList<String>();
    }
    this.poolGroupRefs.add(poolGroupRefsItem);
    return this;
  }

   /**
   * UUID of pool groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type PoolGroup.
   * @return poolGroupRefs
  **/
  @Schema(description = "UUID of pool groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type PoolGroup.")
  public List<String> getPoolGroupRefs() {
    return poolGroupRefs;
  }

  public void setPoolGroupRefs(List<String> poolGroupRefs) {
    this.poolGroupRefs = poolGroupRefs;
  }

  public VSDataScriptSet poolRefs(List<String> poolRefs) {
    this.poolRefs = poolRefs;
    return this;
  }

  public VSDataScriptSet addPoolRefsItem(String poolRefsItem) {
    if (this.poolRefs == null) {
      this.poolRefs = new ArrayList<String>();
    }
    this.poolRefs.add(poolRefsItem);
    return this;
  }

   /**
   * UUID of pools that could be referred by VSDataScriptSet objects. It is a reference to an object of type Pool.
   * @return poolRefs
  **/
  @Schema(description = "UUID of pools that could be referred by VSDataScriptSet objects. It is a reference to an object of type Pool.")
  public List<String> getPoolRefs() {
    return poolRefs;
  }

  public void setPoolRefs(List<String> poolRefs) {
    this.poolRefs = poolRefs;
  }

  public VSDataScriptSet protocolParserRefs(List<String> protocolParserRefs) {
    this.protocolParserRefs = protocolParserRefs;
    return this;
  }

  public VSDataScriptSet addProtocolParserRefsItem(String protocolParserRefsItem) {
    if (this.protocolParserRefs == null) {
      this.protocolParserRefs = new ArrayList<String>();
    }
    this.protocolParserRefs.add(protocolParserRefsItem);
    return this;
  }

   /**
   * List of protocol parsers that could be referred by VSDataScriptSet objects. It is a reference to an object of type ProtocolParser. Field introduced in 18.2.3.
   * @return protocolParserRefs
  **/
  @Schema(description = "List of protocol parsers that could be referred by VSDataScriptSet objects. It is a reference to an object of type ProtocolParser. Field introduced in 18.2.3.")
  public List<String> getProtocolParserRefs() {
    return protocolParserRefs;
  }

  public void setProtocolParserRefs(List<String> protocolParserRefs) {
    this.protocolParserRefs = protocolParserRefs;
  }

  public VSDataScriptSet rateLimiters(List<RateLimiter> rateLimiters) {
    this.rateLimiters = rateLimiters;
    return this;
  }

  public VSDataScriptSet addRateLimitersItem(RateLimiter rateLimitersItem) {
    if (this.rateLimiters == null) {
      this.rateLimiters = new ArrayList<RateLimiter>();
    }
    this.rateLimiters.add(rateLimitersItem);
    return this;
  }

   /**
   * The Rate Limit definitions needed for this DataScript. The name is composed of the Virtual Service name and the DataScript name.
   * @return rateLimiters
  **/
  @Schema(description = "The Rate Limit definitions needed for this DataScript. The name is composed of the Virtual Service name and the DataScript name.")
  public List<RateLimiter> getRateLimiters() {
    return rateLimiters;
  }

  public void setRateLimiters(List<RateLimiter> rateLimiters) {
    this.rateLimiters = rateLimiters;
  }

  public VSDataScriptSet stringGroupRefs(List<String> stringGroupRefs) {
    this.stringGroupRefs = stringGroupRefs;
    return this;
  }

  public VSDataScriptSet addStringGroupRefsItem(String stringGroupRefsItem) {
    if (this.stringGroupRefs == null) {
      this.stringGroupRefs = new ArrayList<String>();
    }
    this.stringGroupRefs.add(stringGroupRefsItem);
    return this;
  }

   /**
   * UUID of String Groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type StringGroup.
   * @return stringGroupRefs
  **/
  @Schema(description = "UUID of String Groups that could be referred by VSDataScriptSet objects. It is a reference to an object of type StringGroup.")
  public List<String> getStringGroupRefs() {
    return stringGroupRefs;
  }

  public void setStringGroupRefs(List<String> stringGroupRefs) {
    this.stringGroupRefs = stringGroupRefs;
  }

  public VSDataScriptSet tenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
    return this;
  }

   /**
   *  It is a reference to an object of type Tenant.
   * @return tenantRef
  **/
  @Schema(description = " It is a reference to an object of type Tenant.")
  public String getTenantRef() {
    return tenantRef;
  }

  public void setTenantRef(String tenantRef) {
    this.tenantRef = tenantRef;
  }

   /**
   * url
   * @return url
  **/
  @Schema(description = "url")
  public String getUrl() {
    return url;
  }

  public VSDataScriptSet uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * UUID of the virtual service datascript collection.
   * @return uuid
  **/
  @Schema(description = "UUID of the virtual service datascript collection.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VSDataScriptSet vsDataScriptSet = (VSDataScriptSet) o;
    return Objects.equals(this._lastModified, vsDataScriptSet._lastModified) &&
        Objects.equals(this.createdBy, vsDataScriptSet.createdBy) &&
        Objects.equals(this.datascript, vsDataScriptSet.datascript) &&
        Objects.equals(this.description, vsDataScriptSet.description) &&
        Objects.equals(this.ipgroupRefs, vsDataScriptSet.ipgroupRefs) &&
        Objects.equals(this.name, vsDataScriptSet.name) &&
        Objects.equals(this.poolGroupRefs, vsDataScriptSet.poolGroupRefs) &&
        Objects.equals(this.poolRefs, vsDataScriptSet.poolRefs) &&
        Objects.equals(this.protocolParserRefs, vsDataScriptSet.protocolParserRefs) &&
        Objects.equals(this.rateLimiters, vsDataScriptSet.rateLimiters) &&
        Objects.equals(this.stringGroupRefs, vsDataScriptSet.stringGroupRefs) &&
        Objects.equals(this.tenantRef, vsDataScriptSet.tenantRef) &&
        Objects.equals(this.url, vsDataScriptSet.url) &&
        Objects.equals(this.uuid, vsDataScriptSet.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_lastModified, createdBy, datascript, description, ipgroupRefs, name, poolGroupRefs, poolRefs, protocolParserRefs, rateLimiters, stringGroupRefs, tenantRef, url, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VSDataScriptSet {\n");
    
    sb.append("    _lastModified: ").append(toIndentedString(_lastModified)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    datascript: ").append(toIndentedString(datascript)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ipgroupRefs: ").append(toIndentedString(ipgroupRefs)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    poolGroupRefs: ").append(toIndentedString(poolGroupRefs)).append("\n");
    sb.append("    poolRefs: ").append(toIndentedString(poolRefs)).append("\n");
    sb.append("    protocolParserRefs: ").append(toIndentedString(protocolParserRefs)).append("\n");
    sb.append("    rateLimiters: ").append(toIndentedString(rateLimiters)).append("\n");
    sb.append("    stringGroupRefs: ").append(toIndentedString(stringGroupRefs)).append("\n");
    sb.append("    tenantRef: ").append(toIndentedString(tenantRef)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
