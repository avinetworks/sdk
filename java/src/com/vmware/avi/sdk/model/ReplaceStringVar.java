/*
 * Avi avi_global_spec Object API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.1.1
 * Contact: support@avinetworks.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.avi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ReplaceStringVar
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-12T12:27:26.755+05:30[Asia/Kolkata]")
public class ReplaceStringVar {
  @JsonProperty("type")
  private String type = null;

  @JsonProperty("val")
  private String val = null;

  public ReplaceStringVar type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of replacement string - can be a variable exposed from datascript, value of an HTTP header or a custom user-input literal string. Enum options - DATASCRIPT_VAR, HTTP_HEADER_VAR, LITERAL_STRING.
   * @return type
  **/
  @Schema(description = "Type of replacement string - can be a variable exposed from datascript, value of an HTTP header or a custom user-input literal string. Enum options - DATASCRIPT_VAR, HTTP_HEADER_VAR, LITERAL_STRING.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ReplaceStringVar val(String val) {
    this.val = val;
    return this;
  }

   /**
   * Value of the replacement string - name of variable exposed from datascript, name of the HTTP header or a custom user-input literal string.
   * @return val
  **/
  @Schema(description = "Value of the replacement string - name of variable exposed from datascript, name of the HTTP header or a custom user-input literal string.")
  public String getVal() {
    return val;
  }

  public void setVal(String val) {
    this.val = val;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplaceStringVar replaceStringVar = (ReplaceStringVar) o;
    return Objects.equals(this.type, replaceStringVar.type) &&
        Objects.equals(this.val, replaceStringVar.val);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, val);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplaceStringVar {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    val: ").append(toIndentedString(val)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
