{
    "info": {
        "title": "Avi HTTPPolicySet Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure httppolicyset <key>\n- show httppolicyset <key>\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/httppolicyset": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "HTTPPolicySet object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySetApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/httppolicyset/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "HTTPPolicySet object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "HTTPPolicySet object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/HTTPPolicySet"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "HTTPSecurityRule": {
            "required": [
                "enable", 
                "index", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the rule.", 
                    "format": "int32"
                }, 
                "enable": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable the rule."
                }, 
                "log": {
                    "type": "boolean", 
                    "description": "Log HTTP request upon rule match."
                }, 
                "action": {
                    "description": "Action to be performed upon successful matching.", 
                    "$ref": "#/definitions/HTTPSecurityAction"
                }, 
                "match": {
                    "description": "Add match criteria to the rule.", 
                    "$ref": "#/definitions/MatchTarget"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rule."
                }
            }
        }, 
        "IpAddrMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "group_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "UUID of IP address group(s). It is a reference to an object of type IpAddrGroup."
                }, 
                "prefixes": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "IP address prefix(es)."
                }, 
                "ranges": {
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }, 
                    "type": "array", 
                    "description": "IP address range(s)."
                }, 
                "addrs": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "IP address(es)."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for IP address matching the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "HdrMatch": {
            "required": [
                "hdr", 
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "hdr": {
                    "type": "string", 
                    "description": "Name of the HTTP header whose value is to be matched."
                }, 
                "value": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String values to match in the HTTP header."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for matching headers in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL."
                }
            }
        }, 
        "HTTPStatusRange": {
            "required": [
                "begin", 
                "end"
            ], 
            "type": "object", 
            "properties": {
                "begin": {
                    "type": "integer", 
                    "description": "Starting HTTP response status code.", 
                    "format": "int32"
                }, 
                "end": {
                    "type": "integer", 
                    "description": "Ending HTTP response status code.", 
                    "format": "int32"
                }
            }
        }, 
        "HTTPHdrAction": {
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "action": {
                    "type": "string", 
                    "description": "ADD  A new header with the new value is added irrespective of the existence of an HTTP header of the given name. REPLACE  A new header with the new value is added if no header of the given name exists, else existing headers with the given name are removed and a new header with the new value is added. REMOVE  All the headers of the given name are removed. Enum options - HTTP_ADD_HDR, HTTP_REMOVE_HDR, HTTP_REPLACE_HDR."
                }, 
                "cookie": {
                    "description": "Cookie information.", 
                    "$ref": "#/definitions/HTTPCookieData"
                }, 
                "hdr": {
                    "description": "HTTP header information.", 
                    "$ref": "#/definitions/HTTPHdrData"
                }
            }
        }, 
        "HTTPRequestRule": {
            "required": [
                "enable", 
                "index", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the rule.", 
                    "format": "int32"
                }, 
                "enable": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable the rule."
                }, 
                "log": {
                    "type": "boolean", 
                    "description": "Log HTTP request upon rule match."
                }, 
                "rewrite_url_action": {
                    "description": "HTTP request URL rewrite action.", 
                    "$ref": "#/definitions/HTTPRewriteURLAction"
                }, 
                "switching_action": {
                    "description": "Content switching action.", 
                    "$ref": "#/definitions/HTTPSwitchingAction"
                }, 
                "redirect_action": {
                    "description": "HTTP redirect action.", 
                    "$ref": "#/definitions/HTTPRedirectAction"
                }, 
                "hdr_action": {
                    "items": {
                        "$ref": "#/definitions/HTTPHdrAction"
                    }, 
                    "type": "array", 
                    "description": "HTTP header rewrite action."
                }, 
                "all_headers": {
                    "type": "boolean", 
                    "description": "Log all HTTP headers upon rule match."
                }, 
                "match": {
                    "description": "Add match criteria to the rule.", 
                    "$ref": "#/definitions/MatchTarget"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rule."
                }
            }
        }, 
        "LocationHdrMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "value": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String value(s) in the location header."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for matching location header value in the HTTP response. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL."
                }
            }
        }, 
        "HTTPStatusMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "ranges": {
                    "items": {
                        "$ref": "#/definitions/HTTPStatusRange"
                    }, 
                    "type": "array", 
                    "description": "HTTP response status code range(s)."
                }, 
                "status_codes": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "HTTP response status code(s).", 
                    "format": "int32"
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for matching the HTTP response status code(s). Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "HTTPResponsePolicy": {
            "type": "object", 
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/HTTPResponseRule"
                    }, 
                    "type": "array", 
                    "description": "Add rules to the HTTP response policy."
                }
            }
        }, 
        "PathMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the matching. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "string_group_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup."
                }, 
                "match_str": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String values."
                }, 
                "match_criteria": {
                    "default": "CONTAINS", 
                    "type": "string", 
                    "description": "Criterion to use for matching the path in the HTTP request URI. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH."
                }
            }
        }, 
        "URIParamQuery": {
            "type": "object", 
            "properties": {
                "keep_query": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Use or drop the query of the incoming request URI in the request URI to the backend server."
                }, 
                "add_string": {
                    "type": "string", 
                    "description": "Concatenate a string to the query of the incoming request URI and then use it in the request URI going to the backend server."
                }
            }
        }, 
        "HTTPRewriteURLAction": {
            "type": "object", 
            "properties": {
                "host_hdr": {
                    "description": "Host config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "path": {
                    "description": "Path config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "query": {
                    "description": "Query config.", 
                    "$ref": "#/definitions/URIParamQuery"
                }
            }
        }, 
        "HTTPRedirectAction": {
            "required": [
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "host": {
                    "description": "Host config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "protocol": {
                    "type": "string", 
                    "description": "Protocol type. Enum options - HTTP, HTTPS."
                }, 
                "path": {
                    "description": "Path config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "keep_query": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Keep or drop the query of the incoming request URI in the redirected URI."
                }, 
                "status_code": {
                    "default": "HTTP_REDIRECT_STATUS_CODE_302", 
                    "type": "string", 
                    "description": "HTTP redirect status code. Enum options - HTTP_REDIRECT_STATUS_CODE_301, HTTP_REDIRECT_STATUS_CODE_302, HTTP_REDIRECT_STATUS_CODE_307."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port to which redirect the request. Allowed values are 1-65535.", 
                    "format": "int32"
                }
            }
        }, 
        "MatchTarget": {
            "type": "object", 
            "properties": {
                "client_ip": {
                    "description": "Configure client ip addresses.", 
                    "$ref": "#/definitions/IpAddrMatch"
                }, 
                "protocol": {
                    "description": "Configure the type of HTTP protocol.", 
                    "$ref": "#/definitions/ProtocolMatch"
                }, 
                "hdrs": {
                    "items": {
                        "$ref": "#/definitions/HdrMatch"
                    }, 
                    "type": "array", 
                    "description": "Configure HTTP header(s)."
                }, 
                "host_hdr": {
                    "description": "Configure the host header.", 
                    "$ref": "#/definitions/HostHdrMatch"
                }, 
                "vs_port": {
                    "description": "Configure virtual service ports.", 
                    "$ref": "#/definitions/PortMatch"
                }, 
                "version": {
                    "description": "Configure versions of the HTTP protocol.", 
                    "$ref": "#/definitions/HTTPVersionMatch"
                }, 
                "cookie": {
                    "description": "Configure HTTP cookie(s).", 
                    "$ref": "#/definitions/CookieMatch"
                }, 
                "path": {
                    "description": "Configure request paths.", 
                    "$ref": "#/definitions/PathMatch"
                }, 
                "query": {
                    "description": "Configure request query.", 
                    "$ref": "#/definitions/QueryMatch"
                }, 
                "method": {
                    "description": "Configure HTTP methods.", 
                    "$ref": "#/definitions/MethodMatch"
                }
            }
        }, 
        "HTTPRequestPolicy": {
            "type": "object", 
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/HTTPRequestRule"
                    }, 
                    "type": "array", 
                    "description": "Add rules to the HTTP request policy."
                }
            }
        }, 
        "PortMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "ports": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "Listening TCP port(s). Allowed values are 1-65535.", 
                    "format": "int32"
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for port matching the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "RateProfile": {
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "description": "Maximum number of connections or requests or packets. Allowed values are 1-2500. Special values are 0- 'unlimited'.", 
                    "format": "int32"
                }, 
                "http_header": {
                    "type": "string", 
                    "description": "HTTP header name. Field introduced in 17.1.1."
                }, 
                "http_cookie": {
                    "type": "string", 
                    "description": "HTTP cookie name. Field introduced in 17.1.1."
                }, 
                "explicit_tracking": {
                    "type": "boolean", 
                    "description": "Explicitly tracks an attacker across rate periods."
                }, 
                "period": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Time value in seconds to enforce rate count. Allowed values are 1-300.", 
                    "format": "int32"
                }, 
                "action": {
                    "description": "Action to perform upon rate limiting.", 
                    "$ref": "#/definitions/RateLimiterAction"
                }, 
                "burst_sz": {
                    "type": "integer", 
                    "description": "Maximum number of connections or requests or packets to be let through instantaneously. Allowed values are 10-2500. Special values are 0- 'automatic'.", 
                    "format": "int32"
                }, 
                "fine_grain": {
                    "type": "boolean", 
                    "description": "Enable fine granularity."
                }
            }
        }, 
        "HostHdrMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "value": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String value(s) in the host header."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for the host header value match. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL."
                }
            }
        }, 
        "HTTPHdrValue": {
            "type": "object", 
            "properties": {
                "var": {
                    "type": "string", 
                    "description": "Variable. Enum options - HTTP_POLICY_VAR_CLIENT_IP, HTTP_POLICY_VAR_VS_PORT, HTTP_POLICY_VAR_VS_IP, HTTP_POLICY_VAR_HTTP_HDR, HTTP_POLICY_VAR_SSL_CLIENT_FINGERPRINT, HTTP_POLICY_VAR_SSL_CLIENT_SERIAL, HTTP_POLICY_VAR_SSL_CLIENT_ISSUER, HTTP_POLICY_VAR_SSL_CLIENT_SUBJECT, HTTP_POLICY_VAR_SSL_CLIENT_RAW, HTTP_POLICY_VAR_SSL_PROTOCOL, HTTP_POLICY_VAR_SSL_SERVER_NAME, HTTP_POLICY_VAR_USER_NAME, HTTP_POLICY_VAR_SSL_CIPHER."
                }, 
                "val": {
                    "type": "string", 
                    "description": "HTTP header value or variable representing an HTTP header."
                }
            }
        }, 
        "HTTPSwitchingAction": {
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "file": {
                    "description": "File from which to serve local response to the request.", 
                    "$ref": "#/definitions/HTTPLocalFile"
                }, 
                "action": {
                    "type": "string", 
                    "description": "Content switching action type. Enum options - HTTP_SWITCHING_SELECT_POOL, HTTP_SWITCHING_SELECT_LOCAL, HTTP_SWITCHING_SELECT_POOLGROUP."
                }, 
                "status_code": {
                    "type": "string", 
                    "description": "HTTP status code to use when serving local response. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": "UUID of the pool of servers to serve the request. It is a reference to an object of type Pool."
                }, 
                "pool_group_ref": {
                    "type": "string", 
                    "description": "UUID of the pool group to serve the request. It is a reference to an object of type PoolGroup."
                }, 
                "server": {
                    "description": "Specific pool server to select.", 
                    "$ref": "#/definitions/PoolServer"
                }
            }
        }, 
        "HTTPHdrData": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "HTTP header name."
                }, 
                "value": {
                    "description": "HTTP header value.", 
                    "$ref": "#/definitions/HTTPHdrValue"
                }
            }
        }, 
        "QueryMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "string_group_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup."
                }, 
                "match_str": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String value(s)."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for matching the query in HTTP request URI. Enum options - QUERY_MATCH_CONTAINS."
                }
            }
        }, 
        "IpAddrRange": {
            "required": [
                "begin", 
                "end"
            ], 
            "type": "object", 
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "end": {
                    "description": "Ending IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "HTTPPolicySet": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "description": {
                    "type": "string", 
                    "description": "User defined description for the object."
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "UUID of the HTTP Policy Set."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Creator name."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the HTTP Policy Set."
                }, 
                "cloud_config_cksum": {
                    "type": "string", 
                    "description": "Checksum of cloud configuration for Pool. Internally set by cloud connector."
                }, 
                "http_security_policy": {
                    "description": "HTTP security policy for the virtual service.", 
                    "$ref": "#/definitions/HTTPSecurityPolicy"
                }, 
                "http_request_policy": {
                    "description": "HTTP request policy for the virtual service.", 
                    "$ref": "#/definitions/HTTPRequestPolicy"
                }, 
                "http_response_policy": {
                    "description": "HTTP response policy for the virtual service.", 
                    "$ref": "#/definitions/HTTPResponsePolicy"
                }, 
                "is_internal_policy": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property is_internal_policy of obj type HTTPPolicySet field type str  type boolean"
                }
            }
        }, 
        "MethodMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "methods": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Configure HTTP method(s). Enum options - HTTP_METHOD_GET, HTTP_METHOD_HEAD, HTTP_METHOD_PUT, HTTP_METHOD_DELETE, HTTP_METHOD_POST, HTTP_METHOD_OPTIONS, HTTP_METHOD_TRACE, HTTP_METHOD_CONNECT."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for HTTP method matching the method in the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "HTTPSecurityAction": {
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "action": {
                    "type": "string", 
                    "description": "Type of the security action to perform. Enum options - HTTP_SECURITY_ACTION_CLOSE_CONN, HTTP_SECURITY_ACTION_SEND_RESPONSE, HTTP_SECURITY_ACTION_ALLOW, HTTP_SECURITY_ACTION_REDIRECT_TO_HTTPS, HTTP_SECURITY_ACTION_RATE_LIMIT."
                }, 
                "status_code": {
                    "type": "string", 
                    "description": "HTTP status code to use for local response. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429."
                }, 
                "rate_limit": {
                    "description": "Rate Limit profile to be used to rate-limit the flow.", 
                    "$ref": "#/definitions/RateProfile"
                }, 
                "https_port": {
                    "type": "integer", 
                    "description": "Secure SSL/TLS port to redirect the HTTP request to. Allowed values are 1-65535.", 
                    "format": "int32"
                }, 
                "file": {
                    "description": "File to be used for generating HTTP local response.", 
                    "$ref": "#/definitions/HTTPLocalFile"
                }
            }
        }, 
        "ResponseMatchTarget": {
            "type": "object", 
            "properties": {
                "status": {
                    "description": "Configure the HTTP status code(s).", 
                    "$ref": "#/definitions/HTTPStatusMatch"
                }, 
                "client_ip": {
                    "description": "Configure client ip addresses.", 
                    "$ref": "#/definitions/IpAddrMatch"
                }, 
                "protocol": {
                    "description": "Configure the type of HTTP protocol.", 
                    "$ref": "#/definitions/ProtocolMatch"
                }, 
                "hdrs": {
                    "items": {
                        "$ref": "#/definitions/HdrMatch"
                    }, 
                    "type": "array", 
                    "description": "Configure HTTP headers."
                }, 
                "loc_hdr": {
                    "description": "Configure the location header.", 
                    "$ref": "#/definitions/LocationHdrMatch"
                }, 
                "host_hdr": {
                    "description": "Configure the host header.", 
                    "$ref": "#/definitions/HostHdrMatch"
                }, 
                "vs_port": {
                    "description": "Configure virtual service ports.", 
                    "$ref": "#/definitions/PortMatch"
                }, 
                "rsp_hdrs": {
                    "items": {
                        "$ref": "#/definitions/HdrMatch"
                    }, 
                    "type": "array", 
                    "description": "Configure the HTTP headers in response."
                }, 
                "cookie": {
                    "description": "Configure HTTP cookie(s).", 
                    "$ref": "#/definitions/CookieMatch"
                }, 
                "version": {
                    "description": "Configure versions of the HTTP protocol.", 
                    "$ref": "#/definitions/HTTPVersionMatch"
                }, 
                "path": {
                    "description": "Configure request paths.", 
                    "$ref": "#/definitions/PathMatch"
                }, 
                "query": {
                    "description": "Configure request query.", 
                    "$ref": "#/definitions/QueryMatch"
                }, 
                "method": {
                    "description": "Configure HTTP methods.", 
                    "$ref": "#/definitions/MethodMatch"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }, 
        "HTTPVersionMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for HTTP version matching the version used in the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }, 
                "versions": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "HTTP protocol version. Enum options - ZERO_NINE, ONE_ZERO, ONE_ONE."
                }
            }
        }, 
        "CookieMatch": {
            "required": [
                "match_criteria", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "INSENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the cookie."
                }, 
                "value": {
                    "type": "string", 
                    "description": "String value in the cookie."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for matching the cookie in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL."
                }
            }
        }, 
        "HTTPRewriteLocHdrAction": {
            "required": [
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "keep_query": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Keep or drop the query from the server side redirect URI."
                }, 
                "path": {
                    "description": "Path config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "host": {
                    "description": "Host config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "protocol": {
                    "type": "string", 
                    "description": "HTTP protocol type. Enum options - HTTP, HTTPS."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port to use in the redirected URI. Allowed values are 1-65535.", 
                    "format": "int32"
                }
            }
        }, 
        "URIParamToken": {
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "str_value": {
                    "type": "string", 
                    "description": "Constant string to use as a token."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Token type for constructing the URI. Enum options - URI_TOKEN_TYPE_HOST, URI_TOKEN_TYPE_PATH, URI_TOKEN_TYPE_STRING, URI_TOKEN_TYPE_STRING_GROUP, URI_TOKEN_TYPE_REGEX."
                }, 
                "start_index": {
                    "type": "integer", 
                    "description": "Index of the starting token in the incoming URI.", 
                    "format": "int32"
                }, 
                "end_index": {
                    "type": "integer", 
                    "description": "Index of the ending token in the incoming URI. Allowed values are 0-65534. Special values are 65535 - 'end of string'.", 
                    "format": "int32"
                }
            }
        }, 
        "RateLimiterAction": {
            "type": "object", 
            "properties": {
                "redirect": {
                    "description": "Parameters for HTTP Redirect rate limit action.", 
                    "$ref": "#/definitions/HTTPRedirectAction"
                }, 
                "status_code": {
                    "default": "HTTP_LOCAL_RESPONSE_STATUS_CODE_429", 
                    "type": "string", 
                    "description": "HTTP status code for Local Response rate limit action. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429."
                }, 
                "type": {
                    "default": "RL_ACTION_NONE", 
                    "type": "string", 
                    "description": "Type of action to be enforced upon hitting the rate limit. Enum options - RL_ACTION_NONE, RL_ACTION_DROP_CONN, RL_ACTION_RESET_CONN, RL_ACTION_CLOSE_CONN, RL_ACTION_LOCAL_RSP, RL_ACTION_REDIRECT."
                }, 
                "file": {
                    "description": "File to be used for HTTP Local response rate limit action.", 
                    "$ref": "#/definitions/HTTPLocalFile"
                }
            }
        }, 
        "ProtocolMatch": {
            "required": [
                "match_criteria", 
                "protocols"
            ], 
            "type": "object", 
            "properties": {
                "protocols": {
                    "type": "string", 
                    "description": "HTTP or HTTPS protocol. Enum options - HTTP, HTTPS."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for protocol matching the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "HTTPPolicySetApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/HTTPPolicySet"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "PoolServer": {
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "description": "IP address of the server in the poool.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "hostname": {
                    "type": "string", 
                    "description": "DNS resolvable name of the server.  May be used in place of the IP address."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port of the pool server listening for HTTP/HTTPS. Default value is the default port in the pool. Allowed values are 1-65535.", 
                    "format": "int32"
                }
            }
        }, 
        "URIParam": {
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "tokens": {
                    "items": {
                        "$ref": "#/definitions/URIParamToken"
                    }, 
                    "type": "array", 
                    "description": "Token config either for the URI components or a constant string."
                }, 
                "type": {
                    "type": "string", 
                    "description": "URI param type. Enum options - URI_PARAM_TYPE_TOKENIZED."
                }
            }
        }, 
        "HTTPSecurityPolicy": {
            "type": "object", 
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/HTTPSecurityRule"
                    }, 
                    "type": "array", 
                    "description": "Add rules to the HTTP security policy."
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }, 
        "HTTPLocalFile": {
            "required": [
                "content_type", 
                "file_content"
            ], 
            "type": "object", 
            "properties": {
                "file_content": {
                    "type": "string", 
                    "description": "File content to used in the local HTTP response body."
                }, 
                "content_type": {
                    "type": "string", 
                    "description": "Mime-type of the content in the file."
                }
            }
        }, 
        "HTTPResponseRule": {
            "required": [
                "enable", 
                "index", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the rule.", 
                    "format": "int32"
                }, 
                "enable": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable the rule."
                }, 
                "log": {
                    "type": "boolean", 
                    "description": "Log HTTP request upon rule match."
                }, 
                "loc_hdr_action": {
                    "description": "Location header rewrite action.", 
                    "$ref": "#/definitions/HTTPRewriteLocHdrAction"
                }, 
                "hdr_action": {
                    "items": {
                        "$ref": "#/definitions/HTTPHdrAction"
                    }, 
                    "type": "array", 
                    "description": "HTTP header rewrite action."
                }, 
                "all_headers": {
                    "type": "boolean", 
                    "description": "Log all HTTP headers upon rule match."
                }, 
                "match": {
                    "description": "Add match criteria to the rule.", 
                    "$ref": "#/definitions/ResponseMatchTarget"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rule."
                }
            }
        }, 
        "HTTPCookieData": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Cookie name."
                }, 
                "value": {
                    "type": "string", 
                    "description": "Cookie value."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}