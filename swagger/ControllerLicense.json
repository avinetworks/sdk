{
    "info": {
        "title": "Avi ControllerLicense Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure license\n- show license\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/license/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerLicense object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerLicense object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/license": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerLicense object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicense"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerLicenseApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "SingleLicense": {
            "required": [
                "customer_name", 
                "license_name", 
                "valid_until"
            ], 
            "type": "object", 
            "properties": {
                "valid_until": {
                    "type": "string", 
                    "description": "valid_until of SingleLicense."
                }, 
                "license_string": {
                    "type": "string", 
                    "description": "license_string of SingleLicense."
                }, 
                "tier_type": {
                    "type": "string", 
                    "description": "Specifies the licensed tier. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5."
                }, 
                "burst_cores": {
                    "type": "integer", 
                    "description": "Total number of Service Engine burst cores for core based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "created_on": {
                    "type": "string", 
                    "description": "created_on of SingleLicense."
                }, 
                "start_on": {
                    "type": "string", 
                    "description": "start_on of SingleLicense."
                }, 
                "cores": {
                    "type": "integer", 
                    "description": "Number of Service Engine cores in non-container clouds.", 
                    "format": "int32"
                }, 
                "enforced_params": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "enforced_params of SingleLicense."
                }, 
                "sockets": {
                    "type": "integer", 
                    "description": "Number of physical cpu sockets across Service Engines in no access and linux server clouds.", 
                    "format": "int32"
                }, 
                "se_bandwidth_limits": {
                    "items": {
                        "$ref": "#/definitions/SEBandwidthLimit"
                    }, 
                    "type": "array", 
                    "description": "Service Engine bandwidth limits for bandwidth based licenses. Field introduced in 17.2.5."
                }, 
                "customer_name": {
                    "type": "string", 
                    "description": "customer_name of SingleLicense."
                }, 
                "license_tier": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "license_tier of SingleLicense."
                }, 
                "max_ses": {
                    "type": "integer", 
                    "description": "Number of Service Engines hosts in container clouds.", 
                    "format": "int32"
                }, 
                "last_update": {
                    "type": "string", 
                    "description": "last_update of SingleLicense."
                }, 
                "version": {
                    "type": "string", 
                    "description": "version of SingleLicense."
                }, 
                "license_name": {
                    "type": "string", 
                    "description": "license_name of SingleLicense."
                }, 
                "license_type": {
                    "type": "string", 
                    "description": "license_type of SingleLicense."
                }, 
                "license_id": {
                    "type": "string", 
                    "description": "license_id of SingleLicense."
                }
            }
        }, 
        "CumulativeLicense": {
            "type": "object", 
            "properties": {
                "burst_cores": {
                    "type": "integer", 
                    "description": "Total number of Service Engine cores for burst core based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "cores": {
                    "type": "integer", 
                    "description": "Total number of Service Engine cores for core based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "tier_type": {
                    "type": "string", 
                    "description": "Specifies the licensed tier. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5."
                }, 
                "max_ses": {
                    "type": "integer", 
                    "description": "Total number of Service Engines for host based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "sockets": {
                    "type": "integer", 
                    "description": "Total number of Service Engine sockets for socket based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "se_bandwidth_limits": {
                    "items": {
                        "$ref": "#/definitions/SEBandwidthLimit"
                    }, 
                    "type": "array", 
                    "description": "Service Engine bandwidth limits for bandwidth based licenses. Field introduced in 17.2.5."
                }
            }
        }, 
        "ControllerLicense": {
            "required": [
                "customer_name", 
                "valid_until"
            ], 
            "type": "object", 
            "properties": {
                "valid_until": {
                    "type": "string", 
                    "description": "valid_until of ControllerLicense."
                }, 
                "license_tiers": {
                    "items": {
                        "$ref": "#/definitions/CumulativeLicense"
                    }, 
                    "type": "array", 
                    "description": " Field introduced in 17.2.5."
                }, 
                "start_on": {
                    "type": "string", 
                    "description": "start_on of ControllerLicense."
                }, 
                "cores": {
                    "type": "integer", 
                    "description": "Number of Service Engine cores in non-container clouds.", 
                    "format": "int32"
                }, 
                "licenses": {
                    "items": {
                        "$ref": "#/definitions/SingleLicense"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property licenses of obj type ControllerLicense field type str  type object"
                }, 
                "license_id": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.5."
                }, 
                "disable_enforcement": {
                    "type": "boolean", 
                    "description": " Field introduced in 17.2.5."
                }, 
                "sockets": {
                    "type": "integer", 
                    "description": "Number of physical cpu sockets across Service Engines in no access and linux server clouds.", 
                    "format": "int32"
                }, 
                "se_bandwidth_limits": {
                    "items": {
                        "$ref": "#/definitions/SEBandwidthLimit"
                    }, 
                    "type": "array", 
                    "description": "Service Engine bandwidth limits for bandwidth based licenses. Field introduced in 17.2.5."
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "license_tier": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "license_tier of ControllerLicense."
                }, 
                "active_burst_resources": {
                    "items": {
                        "$ref": "#/definitions/BurstResource"
                    }, 
                    "type": "array", 
                    "description": "List of active burst core license in use. Field introduced in 17.2.5."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "max_ses": {
                    "type": "integer", 
                    "description": "Number of Service Engines hosts in container clouds.", 
                    "format": "int32"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "burst_cores": {
                    "type": "integer", 
                    "description": "Total number of Service Engine cores for burst core based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "expired_burst_resources": {
                    "items": {
                        "$ref": "#/definitions/BurstResource"
                    }, 
                    "type": "array", 
                    "description": "List of used or expired burst core licenses. Field introduced in 17.2.5."
                }, 
                "customer_name": {
                    "type": "string", 
                    "description": "customer_name of ControllerLicense."
                }
            }
        }, 
        "ControllerLicenseApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/ControllerLicense"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "BurstResource": {
            "type": "object", 
            "properties": {
                "license_tier": {
                    "type": "string", 
                    "description": " Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5."
                }, 
                "se_uuid": {
                    "type": "string", 
                    "description": "Service Engine which triggered the burst license usage. Field introduced in 17.2.5."
                }, 
                "last_alert_time": {
                    "type": "string", 
                    "description": "Time UTC of the last alert created for this burst resource. Field introduced in 17.2.5."
                }, 
                "se_cookie": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.5."
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Time UTC when the burst license was put in use. Field introduced in 17.2.5."
                }, 
                "accounted_license_id": {
                    "type": "string", 
                    "description": "License ID against which this burst has been accounted. Field introduced in 17.2.5."
                }
            }
        }, 
        "SEBandwidthLimit": {
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "description": "Total number of Service Engines for bandwidth based licenses. Field introduced in 17.2.5.", 
                    "format": "int32"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Maximum bandwidth allowed by each Service Engine. Enum options - SE_BANDWIDTH_UNLIMITED, SE_BANDWIDTH_25M, SE_BANDWIDTH_200M, SE_BANDWIDTH_1000M, SE_BANDWIDTH_10000M. Field introduced in 17.2.5."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}