# GENERATED FILE - DO NOT EDIT THIS FILE
---
swagger: '2.0'
info:
    version: '16.3'
    title: Avi API
    contact:
        name: Avi Networks Inc.
        url: https://avinetworks.com/contact-us
        email: support@avinetworks.com
    description: ApplicationProfile API documentation
securityDefinitions:
    basicAuth:
        type: basic
        description: basic authentication
basePath: /api
paths:
    /applicationprofile:
        get:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: name
                    in: query
                    description: object name
                    required: false
                    type: string
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ApplicationProfileApiResponse"
                401:
                    description: log in failed
        post:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
                -   in: body
                    name: body
                    description: ApplicationProfile object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                401:
                    description: log in failed
    /applicationprofile/{uuid}:
        get:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: name
                    in: query
                    description: object name
                    required: false
                    type: string
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
                -   name: uuid
                    in: path
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                401:
                    description: log in failed
        put:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
                -   in: body
                    name: body
                    description: ApplicationProfile object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                401:
                    description: log in failed
        patch:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
                -   in: body
                    name: body
                    description: ApplicationProfile object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ApplicationProfile"
                401:
                    description: log in failed
        delete:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                204:
                    description: object deleted
                    schema:
                        type: string
                404:
                    description: not found

definitions:
    ApplicationProfile:
        type: object
        required:
            -   name
            -   type
        properties:
            description:
                description: ""
                type: string
            dns_service_profile:
                $ref: '#/definitions/DnsServiceApplicationProfile'
            dos_rl_profile:
                $ref: '#/definitions/DosRateLimitProfile'
            http_profile:
                $ref: '#/definitions/HTTPApplicationProfile'
            name:
                description: "The name of the application profile."
                type: string
            preserve_client_ip:
                description: "Specifies if client IP needs to be preserved for backend connection. Not compatible with Connection Multiplexing."
                type: boolean
            tcp_app_profile:
                $ref: '#/definitions/TCPApplicationProfile'
            tenant_ref:
                description: " object ref Tenant."
                type: string
            type:
                description: "Specifies which application layer proxy is enabled for the virtual service.Enum options - APPLICATION_PROFILE_TYPE_L4, APPLICATION_PROFILE_TYPE_HTTP, APPLICATION_PROFILE_TYPE_SYSLOG, APPLICATION_PROFILE_TYPE_DNS, APPLICATION_PROFILE_TYPE_SSL"
                type: number
                format: int64
            url:
                description: "url"
                readOnly: True
                type: string
            uuid:
                description: "UUID of the application profile."
                type: string
    ApplicationProfileApiResponse:
        type: object
        required:
            - count
            - results
        properties:
            count:
                type: integer
                format: int32
            results:
                type: array
                items:
                    $ref: "#/definitions/ApplicationProfile"
    CompressionFilter:
        type: object
        required:
            -   index
            -   level
            -   name
        properties:
            devices_ref:
                description: " object ref StringGroup."
                type: string
            index:
                description: ""
                type: integer
                format: int32
            ip_addr_prefixes:
                type: array
                items:
                    $ref: '#/definitions/IpAddrPrefix'
            ip_addr_ranges:
                type: array
                items:
                    $ref: '#/definitions/IpAddrRange'
            ip_addrs:
                type: array
                items:
                    $ref: '#/definitions/IpAddr'
            ip_addrs_ref:
                description: " object ref IpAddrGroup."
                type: string
            level:
                description: "Enum options - AGGRESSIVE_COMPRESSION, NORMAL_COMPRESSION, NO_COMPRESSION"
                type: number
                format: int64
            match:
                description: "Whether to apply Filter when group criteria is matched or not. Enum options - IS_IN, IS_NOT_IN"
                type: number
                format: int64
            name:
                description: ""
                type: string
            user_agent:
                description: ""
                type: array
                items:
                    type: string
    CompressionProfile:
        type: object
        required:
            -   compression
            -   remove_accept_encoding_header
            -   type
        properties:
            compressible_content_ref:
                description: "Compress only content types listed in this string group. Content types not present in this list are not compressed. object ref StringGroup."
                type: string
            compression:
                description: "Compress HTTP response content if it wasn't already compressed."
                type: boolean
            filter:
                type: array
                items:
                    $ref: '#/definitions/CompressionFilter'
            remove_accept_encoding_header:
                description: "Offload compression from the servers to AVI. Saves compute cycles on the servers."
                type: boolean
            type:
                description: "Compress content automatically or add custom filters to define compressible content and compression levels.Enum options - AUTO_COMPRESSION, CUSTOM_COMPRESSION"
                type: number
                format: int64
    DnsServiceApplicationProfile:
        type: object
        properties:
            domain_names:
                description: "Subdomain names serviced by this Virtual Service. These are configured as Ends-With semantics"
                type: array
                items:
                    type: string
            error_response:
                description: "Error response to the client when the DNS service encounters an error processing the client query. Enum options - DNS_ERROR_RESPONSE_ERROR, DNS_ERROR_RESPONSE_NONE"
                type: number
                format: int64
            num_dns_ip:
                description: "Specifies the number of IP addresses returned by the DNS Service. Enter 0 to return all IP addresses"
                type: integer
                format: int32
            ttl:
                description: "Specifies the TTL value (in seconds) for records served by DNS Service"
                type: integer
                format: int32
    DosRateLimitProfile:
        type: object
        properties:
            dos_profile:
                $ref: '#/definitions/DosThresholdProfile'
            rl_profile:
                $ref: '#/definitions/RateLimiterProfile'
    DosThreshold:
        type: object
        required:
            -   attack
            -   max_value
            -   min_value
        properties:
            attack:
                description: "Attack type.Enum options - LAND, SMURF, ICMP_PING_FLOOD, UNKOWN_PROTOCOL, TEARDROP, IP_FRAG_OVERRUN, IP_FRAG_TOOSMALL, IP_FRAG_FULL, IP_FRAG_INCOMPLETE, PORT_SCAN, TCP_NON_SYN_FLOOD_OLD, SYN_FLOOD, BAD_RST_FLOOD, MALFORMED_FLOOD, FAKE_SESSION, ZERO_WINDOW_STRESS, SMALL_WINDOW_STRESS, DOS_HTTP_TIMEOUT, DOS_HTTP_ERROR, DOS_HTTP_ABORT, DOS_SSL_ERROR, DOS_APP_ERROR, DOS_REQ_IP_RL_DROP, DOS_REQ_URI_RL_DROP, DOS_REQ_URI_SCAN_BAD_RL_DROP, DOS_REQ_URI_SCAN_UNKNOWN_RL_DROP, DOS_REQ_IP_URI_RL_DROP, DOS_CONN_IP_RL_DROP, DOS_SLOW_URL, TCP_NON_SYN_FLOOD, DOS_REQ_CIP_SCAN_BAD_RL_DROP, DOS_REQ_CIP_SCAN_UNKNOWN_RL_DROP, DOS_REQ_IP_RL_DROP_BAD, DOS_REQ_URI_RL_DROP_BAD, DOS_REQ_IP_URI_RL_DROP_BAD, POLICY_DROPS, DOS_CONN_RL_DROP, DOS_REQ_RL_DROP"
                type: number
                format: int64
            max_value:
                description: "Maximum number of packets or connections or requests in a given interval of time to be deemed as attack."
                type: integer
                format: int32
            min_value:
                description: "Minimum number of packets or connections or requests in a given interval of time to be deemed as attack."
                type: integer
                format: int32
    DosThresholdProfile:
        type: object
        required:
            -   thresh_period
        properties:
            thresh_info:
                type: array
                items:
                    $ref: '#/definitions/DosThreshold'
            thresh_period:
                description: "Timer value in seconds to collect DoS attack metrics based on threshold on the Service Engine for this Virtual Service."
                type: integer
                format: int32
    HTTPApplicationProfile:
        type: object
        properties:
            cache_config:
                $ref: '#/definitions/HttpCacheConfig'
            client_body_timeout:
                description: "The maximum length of time allowed between consecutive read operations for a client request body. The value '0' specifies no timeout. This setting generally impacts the length of time allowed for a client to send a POST."
                type: integer
                format: int32
            client_header_timeout:
                description: "The maximum length of time allowed for a client to transmit an entire request header. This helps mitigate various forms of SlowLoris attacks."
                type: integer
                format: int32
            client_max_body_size:
                description: "Maximum size for the client request body.  This limits the size of the client data that can be uploaded/posted as part of a single HTTP Request.  Default 0 => Unlimited."
                type: integer
                format: int64
            client_max_header_size:
                description: "Maximum size in Kbytes of a single HTTP header in the client request."
                type: integer
                format: int32
            client_max_request_size:
                description: "Maximum size in Kbytes of all the client HTTP request headers."
                type: integer
                format: int32
            compression_profile:
                $ref: '#/definitions/CompressionProfile'
            connection_multiplexing_enabled:
                description: "Allows HTTP requests, not just TCP connections, to be load balanced across servers.  Proxied TCP connections to servers may be reused by multiple clients to improve performance. Not compatible with Preserve Client IP."
                type: boolean
            hsts_enabled:
                description: "Inserts HTTP Strict-Transport-Security header in the HTTPS response.  HSTS can help mitigate man-in-the-middle attacks by telling browsers that support HSTS that they should only access this site via HTTPS."
                type: boolean
            hsts_max_age:
                description: "Number of days for which the client should regard this virtual service as a known HSTS host."
                type: integer
                format: int64
            http_to_https:
                description: "Client requests received via HTTP will be redirected to HTTPS."
                type: boolean
            httponly_enabled:
                description: "Mark HTTP cookies as HTTPonly.  This helps mitigate cross site scripting attacks as browsers will not allow these cookies to be read by third parties, such as javascript."
                type: boolean
            keepalive_header:
                description: "Send HTTP 'Keep-Alive' header to the client. By default, the timeout specified in the 'Keep-Alive Timeout' field will be used unless the 'Use App Keepalive Timeout' flag is set, in which case the timeout sent by the application will be honored."
                type: boolean
            keepalive_timeout:
                description: "The max idle time allowed between HTTP requests over a Keep-alive connection."
                type: integer
                format: int32
            max_bad_rps_cip:
                description: "Maximum bad requests per second per client IP."
                type: integer
                format: int32
            max_bad_rps_cip_uri:
                description: "Maximum bad requests per second per client IP and URI."
                type: integer
                format: int32
            max_bad_rps_uri:
                description: "Maximum bad requests per second per URI."
                type: integer
                format: int32
            max_rps_cip:
                description: "Maximum requests per second per client IP."
                type: integer
                format: int32
            max_rps_cip_uri:
                description: "Maximum requests per second per client IP and URI."
                type: integer
                format: int32
            max_rps_unknown_cip:
                description: "Maximum unknown client IPs per second."
                type: integer
                format: int32
            max_rps_unknown_uri:
                description: "Maximum unknown URIs per second."
                type: integer
                format: int32
            max_rps_uri:
                description: "Maximum requests per second per URI."
                type: integer
                format: int32
            pki_profile_ref:
                description: "Select the PKI profile to be associated with the Virtual Service. This profile defines the Certificate Authority and Revocation List. object ref PKIProfile."
                type: string
            post_accept_timeout:
                description: "The max allowed length of time between a client establishing a TCP connection until Avi receives the first byte of the client's HTTP request."
                type: integer
                format: int32
            secure_cookie_enabled:
                description: "Mark server cookies with the 'Secure' attribute.  Client browsers will not send a cookie marked as secure over an unencrypted connection.  If Avi is terminating SSL from clients and passing it as HTTP to the server, the server may return cookies without the secure flag set."
                type: boolean
            server_side_redirect_to_https:
                description: "When terminating client SSL sessions at Avi, servers may incorrectly send redirect to clients as HTTP.  This option will rewrite the server's redirect responses for this virtual service from HTTP to HTTPS."
                type: boolean
            spdy_enabled:
                description: "Enable SPDY proxy for traffic from clients to the virtual service.  SPDY requires SSL from the clients to Avi.  Avi ADC will proxy the SPDY protocol, and forward requests to servers as HTTP 1.1. "
                type: boolean
            spdy_fwd_proxy_mode:
                description: "Enable fwd proxy mode with SPDY. This makes the Proxy combine the  host and  uri spdy headers to create a fwd-proxy style request URI"
                type: boolean
            ssl_client_certificate_action:
                $ref: '#/definitions/SSLClientCertificateAction'
            ssl_client_certificate_mode:
                description: "Specifies whether the client side verification is set to none, request or require.Enum options - SSL_CLIENT_CERTIFICATE_NONE, SSL_CLIENT_CERTIFICATE_REQUEST, SSL_CLIENT_CERTIFICATE_REQUIRE"
                type: number
                format: int64
            ssl_everywhere_enabled:
                description: "Enable common settings to increase the level of security for  virtual services running HTTP and HTTPS.  For sites that are  HTTP only, these settings will have no effect."
                type: boolean
            use_app_keepalive_timeout:
                description: "Use 'Keep-Alive' header timeout sent by application instead of sending the HTTP Keep-Alive Timeout."
                type: boolean
            websockets_enabled:
                description: "Enable Websockets proxy for traffic from clients to the virtual service. Connections to this VS start in HTTP mode. If the client requests an Upgrade to Websockets, and the server responds back with success, then the connection is upgraded to WebSockets mode. "
                type: boolean
            x_forwarded_proto_enabled:
                description: "Insert an X-Forwarded-Proto header in the request sent to the server.  When the client connects via SSL, Avi terminates the SSL, and then forwards the requests to the servers via HTTP, so the servers can determine the original protocol via this header.  In this example, the value will be 'https'."
                type: boolean
            xff_alternate_name:
                description: "Provide a custom name for the X-Forwarded-For header sent to the servers."
                type: string
            xff_enabled:
                description: "The client's original IP address is inserted into an HTTP request header sent to the server.  Servers may use this address for logging or other purposes, rather than Avi's source NAT address used in the Avi to server IP connection."
                type: boolean
    HttpCacheConfig:
        type: object
        properties:
            age_header:
                description: "Add an Age header to content served from cache, which indicates to the client the number of seconds the object has been in the cache."
                type: boolean
            aggressive:
                description: "Enable/disable caching objects without Cache-Control headers"
                type: boolean
            date_header:
                description: "If a Date header was not added by the server, add a Date header to the object served from cache.  This indicates to the client when the object was originally sent by the server to the cache."
                type: boolean
            default_expire:
                description: "Default expiration time of cache objects received from the server without a Cache-Control expiration header.  This value may be overwritten by the Heuristic Expire setting."
                type: integer
                format: int32
            enabled:
                description: "Enable/disable HTTP object caching."
                type: boolean
            heuristic_expire:
                description: "If a response object from the server does not include the Cache-Control header, but does include a Last-Modified header, the system will use this time to calculate the Cache-Control expiration.  If unable to solicit an Last-Modified header, then the system will fall back to the Cache Expire Time value."
                type: boolean
            max_cache_size:
                description: "Max size, in bytes, of the cache.  The default, zero, indicates auto configuration."
                type: integer
                format: int64
            max_object_size:
                description: "Maximum size of an object to store in the cache."
                type: integer
                format: int32
            mime_types_black_group_refs:
                description: "Blacklist string group of non-cacheable mime types object ref StringGroup."
                type: array
                items:
                    type: string
            mime_types_black_list:
                description: "Blacklist of non-cacheable mime types"
                type: array
                items:
                    type: string
            mime_types_group_refs:
                description: "Whitelist string group of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to */* object ref StringGroup."
                type: array
                items:
                    type: string
            mime_types_list:
                description: "Whitelist of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to */*"
                type: array
                items:
                    type: string
            min_object_size:
                description: "Minimum size of an object to store in the cache."
                type: integer
                format: int32
            query_cacheable:
                description: "Allow caching of objects whose URI included a query argument.  When disabled, these objects are not cached.  When enabled, the request must match the URI query to be considered a hit."
                type: boolean
            xcache_header:
                description: "Add an X-Cache header to content served from cache, which indicates to the client that the object was server from an intermediate cache."
                type: boolean
    HTTPLocalFile:
        type: object
        required:
            -   content_type
            -   file_content
        properties:
            content_type:
                description: "Mime-type of the content in the file."
                type: string
            file_content:
                description: "File content to used in the local HTTP response body."
                type: string
    HTTPRedirectAction:
        type: object
        required:
            -   protocol
        properties:
            host:
                $ref: '#/definitions/URIParam'
            keep_query:
                description: "Keep or drop the query of the incoming request URI in the redirected URI"
                type: boolean
            path:
                $ref: '#/definitions/URIParam'
            port:
                description: "Port to which redirect the request"
                type: integer
                format: int32
            protocol:
                description: "Protocol type. Enum options - HTTP, HTTPS"
                type: number
                format: int64
            status_code:
                description: "HTTP redirect status code. Enum options - HTTP_REDIRECT_STATUS_CODE_301, HTTP_REDIRECT_STATUS_CODE_302, HTTP_REDIRECT_STATUS_CODE_307"
                type: number
                format: int64
    IpAddr:
        type: object
        required:
            -   addr
            -   type
        properties:
            addr:
                description: "IP address"
                type: string
            type:
                description: "Enum options - V4, DNS"
                type: number
                format: int64
    IpAddrPrefix:
        type: object
        required:
            -   ip_addr
            -   mask
        properties:
            ip_addr:
                $ref: '#/definitions/IpAddr'
            mask:
                description: ""
                type: integer
                format: int32
    IpAddrRange:
        type: object
        required:
            -   begin
            -   end
        properties:
            begin:
                $ref: '#/definitions/IpAddr'
            end:
                $ref: '#/definitions/IpAddr'
    RateLimiterAction:
        type: object
        properties:
            file:
                $ref: '#/definitions/HTTPLocalFile'
            redirect:
                $ref: '#/definitions/HTTPRedirectAction'
            status_code:
                description: "HTTP status code for Local Response rate limit action.Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429"
                type: number
                format: int64
            type:
                description: "Type of action to be enforced upon hitting the rate limit.Enum options - RL_ACTION_NONE, RL_ACTION_DROP_CONN, RL_ACTION_RESET_CONN, RL_ACTION_CLOSE_CONN, RL_ACTION_LOCAL_RSP, RL_ACTION_REDIRECT"
                type: number
                format: int64
    RateLimiterProfile:
        type: object
        properties:
            client_ip_connections_rate_limit:
                $ref: '#/definitions/RateProfile'
            client_ip_failed_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            client_ip_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            client_ip_scanners_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            client_ip_to_uri_failed_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            client_ip_to_uri_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            uri_failed_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            uri_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
            uri_scanners_requests_rate_limit:
                $ref: '#/definitions/RateProfile'
    RateProfile:
        type: object
        properties:
            action:
                $ref: '#/definitions/RateLimiterAction'
            burst_sz:
                description: "Maximum number of connections or requests or packets to be let through instantaneously"
                type: integer
                format: int32
            count:
                description: "Maximum number of connections or requests or packets"
                type: integer
                format: int32
            explicit_tracking:
                description: "Explicitly tracks an attacker across rate periods"
                type: boolean
            fine_grain:
                description: "Enable fine granularity"
                type: boolean
            period:
                description: "Time value in seconds to enforce rate count"
                type: integer
                format: int32
    SSLClientCertificateAction:
        type: object
        properties:
            close_connection:
                description: ""
                type: boolean
            headers:
                type: array
                items:
                    $ref: '#/definitions/SSLClientRequestHeader'
    SSLClientRequestHeader:
        type: object
        properties:
            request_header:
                description: "If this header exists, reset the connection. If the ssl variable is specified, add a header with this value"
                type: string
            request_header_value:
                description: "Set the request header with the value as indicated by this SSL variable. Eg. send the whole certificate in PEM format. Enum options - HTTP_POLICY_VAR_CLIENT_IP, HTTP_POLICY_VAR_VS_PORT, HTTP_POLICY_VAR_VS_IP, HTTP_POLICY_VAR_HTTP_HDR, HTTP_POLICY_VAR_SSL_CLIENT_FINGERPRINT, HTTP_POLICY_VAR_SSL_CLIENT_SERIAL, HTTP_POLICY_VAR_SSL_CLIENT_ISSUER, HTTP_POLICY_VAR_SSL_CLIENT_SUBJECT, HTTP_POLICY_VAR_SSL_CLIENT_RAW, HTTP_POLICY_VAR_SSL_PROTOCOL, HTTP_POLICY_VAR_SSL_SERVER_NAME, HTTP_POLICY_VAR_USER_NAME, HTTP_POLICY_VAR_SSL_CIPHER"
                type: number
                format: int64
    TCPApplicationProfile:
        type: object
        properties:
            proxy_protocol_enabled:
                description: "Enable/Disable the usage of proxy protocol to convey client connection information to the back-end servers.  Valid only for L4 application profiles and TCP proxy."
                type: boolean
            proxy_protocol_version:
                description: "Version of proxy protocol to be used to convey client connection information to the back-end servers.Enum options - PROXY_PROTOCOL_VERSION_1, PROXY_PROTOCOL_VERSION_2"
                type: number
                format: int64
    URIParam:
        type: object
        required:
            -   type
        properties:
            tokens:
                type: array
                items:
                    $ref: '#/definitions/URIParamToken'
            type:
                description: "URI param type. Enum options - URI_PARAM_TYPE_TOKENIZED"
                type: number
                format: int64
    URIParamToken:
        type: object
        required:
            -   type
        properties:
            end_index:
                description: "Index of the ending token in the incoming URI"
                type: integer
                format: int32
            start_index:
                description: "Index of the starting token in the incoming URI"
                type: integer
                format: int32
            str_value:
                description: "Constant string to use as a token"
                type: string
            type:
                description: "Token type for constructing the URI. Enum options - URI_TOKEN_TYPE_HOST, URI_TOKEN_TYPE_PATH, URI_TOKEN_TYPE_STRING, URI_TOKEN_TYPE_STRING_GROUP, URI_TOKEN_TYPE_REGEX"
                type: number
                format: int64
