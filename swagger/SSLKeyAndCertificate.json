{
    "info": {
        "title": "Avi SSLKeyAndCertificate Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure sslkeyandcertificate <key>\n- show sslkeyandcertificate <key>\n- delete sslkeyandcertificate <key>\n```\n\nExamples\n- **sslkeyandcertificate_example_1**: To generate a self-signed certificate\n  ```json\n    {u'self_signed': True, u'name': u'mycert', u'locality': u'Sunnyvale', u'country': u'US', u'common_name': u'ACME Company', u'state': u'CA', u'key_params': {u'rsa_params': {u'key_size': u'SSL_KEY_1024_BITS'}, u'algorithm': u'SSL_KEY_ALGORITHM_RSA'}, u'organization': u'ACME Company'}\n  ```\n\n- **sslkeyandcertificate_example_2**: To generate a CA-signed certificate use the following sample. This will provide a Certificate Signing Request that you will have to use to get a CA-siged certificate\n  ```json\n    {u'name': u'mycert2', u'locality': u'Sunnyvale', u'country': u'US', u'common_name': u'ACME Company', u'state': u'CA', u'key_params': {u'rsa_params': {u'key_size': u'SSL_KEY_1024_BITS'}, u'algorithm': u'SSL_KEY_ALGORITHM_RSA'}, u'organization': u'ACME Company'}\n  ```\n\n- **sslkeyandcertificate_example_3**: To import a CA-signed certificate\n  ```json\n    {u'certificate': u'\\n-----BEGIN CERTIFICATE-----\\nMIICmTCCAgKgAwIBAgIJAKfrg8i8iZZqMA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNV\\nBAYTAlVTMQswCQYDVQQIDAJDQTEVMBMGA1UECgwMQWNtZSBDb21wYW55MR0wGwYD\\nVQQDDBRTeXN0ZW0gQWRtaW5pc3RyYXRvcjAeFw0xNTAxMTkwNzEyNThaFw0xNjAx\\nMTkwNzEyNThaMFAxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEVMBMGA1UECgwM\\nQWNtZSBDb21wYW55MR0wGwYDVQQDDBRTeXN0ZW0gQWRtaW5pc3RyYXRvcjCBnzAN\\nBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAtT9psNKi/4oImbB4aIJLjJDPwTIAIrQP\\nLoC4R/GHrBCByRYVfoyxFrHJU9WSg9KTqxc6Ph6/zK2hoR+MchQStMP+K5W+4HcR\\nSW+1MJdMwRhm+egxH7hYwnrfsaQoo0GBPVb48deBB/yKTLj7trdGqWTD5oyZqr/B\\nk+kR0kXGzx8CAwEAAaN7MHkwCQYDVR0TBAIwADAsBglghkgBhvhCAQ0EHxYdT3Bl\\nblNTTCBHZW5lcmF0ZWQgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFNhre4joManxHL+F\\nDWzYSVblWVdlMB8GA1UdIwQYMBaAFNhre4joManxHL+FDWzYSVblWVdlMA0GCSqG\\nSIb3DQEBCwUAA4GBAINlLdqGJW2Enow2ft+FRMZdo2qwOovuF4smNIFoXmSoywhW\\n7dyeAkeCyUjZrbqFRNsCf969aUSIE8pARjSnT9P4otOvIMCaIN215F0nzKKZbsIL\\nK4pA6A0h5GSd+aqol6P2vAWzLNE+kUbrE/PcZu9pozWp0GdoiAEu+BnqwWrC\\n-----END CERTIFICATE-----\\n'}\n  ```\n\n- **sslkeyandcertificate_example_4**: To import both key and certificate, use the following sample.\n  ```json\n    {u'key': u'\\n-----BEGIN RSA PRIVATE KEY-----\\nProc-Type: 4,ENCRYPTED\\nDEK-Info: AES-256-CBC,23E2D6132285630DB8D67E25E465F0A6\\n\\n9sM1JGQHgo+rwuZ5L9piE7EGpp2fvY9QC8GgxEcdfw9OHfcj7CHRCCfXAUsxfBOe\\nTh1aGNH9mCmZ72LdrA9cnS/fwISClUoQe0tmVWRTagQptOZfW20HvHI37HGaZ2s1\\nMsqvOaqfQ1ZHa0U6WtzBw5/6PqL9LgDUGoQFSEtMHD06nuYoaynpfDk3eoftFwrx\\n0U3u0O5lc0a0VqwSvJynSYO1yaxoTzTEDZws4Cf1scLi/Wx5aBQHb5I3k6Dr1Ipm\\n59NCpKxjUI+XFUVMszVyQM6+dUUZ0rRU17f2toZFsGTdQ9M1vJLS1J7Ya2pAhlmm\\nX7fzy1NywL5kk+jRPWXRNrSKZg+qnutPSPD1689oDNqu4fwycbC+jZ7zJYXB/vio\\nagS3/UI8d2Lxs69IPFxwP0lhYuUiSEGfLwDwqEuRZNbvaZpwtp2kC6sf7xlKbQF7\\n24lz/LiL5t7xFsLuruOyWfb1fUwLjTZm4O6y8SI9JTSixPm4NCLGclcaTh33harN\\nQhsTf0+qMbovgAUv6myfnI4ajPCcu+Kwn2jMjUjWEFf3oj9A1NUfiT4SqiLcZ4AU\\nsvR8kHs0+rUVDiZ8kFXH0HQ+LI7itVCRoCooq3uqpqeZ5J8L+hZEeILjGCVNQluU\\nlTcEbAry3WibKzsk2bWARe0v+7i/r09EuwSzJ8+H2BOkrxmTr+WgC2RKBMKV+gLc\\nu3rxjeddL6hc0qgo2EN/Hp38FrVBwFLrDYHsBVRwdN6OsDW0OP67EJXikMD+qe2+\\nuUcXr00Sno+Wcgbm17m9SghESxXBj1N5eok6MSUZxbNlFNhxu4qbpiBDKZOrJ2e/\\nn8rxlg9XmJAQPfhY1EKbX7WFiaSa0y4tvbD2tWZfw8Yt97PRSVxumRWg5pbqRr1i\\nl7QTNWfIwk25xtIW5q4WnHjuVynurnREYdlTVd/vBsQcrgV0vaPVYEq+iFzkZBOy\\na0Z0001SHqsQE6ThC2+7ap855EKPpU7HxXqOAEas9z4C9HGgPogSFKT9H5MrDY2C\\nynuoU44hQ/qmR5TAfjO8OnBeLlAlPk0VpEAaOX5V7t8PWhhkAz3QRbQAPbDQ5BQx\\naGnBmi4/12h4EywHUdacj4/9uvUPVd1E476mxePfsDr+E3wtYqUWBzgHtoDxJ9Qn\\nSAL5hU3GrL3mEQQ1RK8kITANVXmlFa56XZXqGuYKxUfGGDGhLTE/VYh13I37hVZH\\nQ825Y+WqZRiRsRvV9W/Wq8H5I2+QU1flB1+kqpoVTxDhzJ15dOetZDTYXqjs6gMS\\nQpr/dYub0yR0zwmV1EKpuqchoYcwHpG4gsX42NRCfcdYoIxoa1Drr/xX4L0si40z\\npY00CT/YuCAJFxbhpzlqKnZz3okj8vzPocT8mjFZcajnyOtaWyILnrBKO/93tkEF\\nYednFMpQ2xdlq5bebhrZhYkf6XS21N8t1ETropoOX19Eh33yJUHh/rJ67I1ccRvZ\\neSI1LDB18B6+k2BdYCfjEhc33WgqUmoHEjxLYEdN0N0qr4ZG2JznQ9R7h/SQusGo\\nwG1rwolI5lxqX/M53KXoBoH1UcZp1yg/8qG2e8Ntx41a6j79oPh7YkXvJYHDh/xt\\n-----END RSA PRIVATE KEY-----\\n', u'key_passphrase': u'avi123', u'name': u'mycert3', u'certificate': u'\\n-----BEGIN CERTIFICATE-----\\nMIIE+DCCAuCgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwQTELMAkGA1UEBhMCVVMx\\nEzARBgNVBAgMCkNhbGlmb3JuaWExHTAbBgNVBAMMFEdyZWcgSW50ZXJtZWRpYXRl\\nIENBMB4XDTE2MDIxMTE2MjYyNFoXDTE3MDIyMDE2MjYyNFowPDELMAkGA1UEBhMC\\nVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExGDAWBgNVBAMMD3d3dy5leGFtcGxlLmNv\\nbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM47ljnydqleK3Yapr//\\nAEqEdPuduGiqgEcY1qjx1vPwO/TU3iqNIJEUEcu/uvHxXqOmsXGUG9+/xMfsV/Lx\\nQAqhneXA2fxZtODmnCWq0SldPQi0mD63ir3jFqI+slS+n9ao20krBBYKpgqjstxh\\nbSez59h6Aoup8vM226gieMfw9Fac7govovJFQZ+lYywGbe2hzP3vftEoyO8itwdB\\novxXk/fmQSDfDPRGSJ4eSve2o8lP9xRRiyqkRKoNQ3UaJRK9L9JSvzdjbvVmUD5S\\n4le7sa6N7VgT73OiUFdwndCQNHN95+BMhGibNury7IXVg+yC94WUmp5L1UX8PixZ\\nv78CAwEAAaOB/jCB+zAJBgNVHRMEAjAAMBEGCWCGSAGG+EIBAQQEAwIGQDAzBglg\\nhkgBhvhCAQ0EJhYkT3BlblNTTCBHZW5lcmF0ZWQgU2VydmVyIENlcnRpZmljYXRl\\nMB0GA1UdDgQWBBSqF2GsfFBj6SkSpRjG9oK1cqvm2jBiBgNVHSMEWzBZgBQGr+y3\\nQMSnVEKwnT9quMhAYExFEaE9pDswOTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNh\\nbGlmb3JuaWExFTATBgNVBAMMDEdyZWcgUm9vdCBDQYICEAAwDgYDVR0PAQH/BAQD\\nAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4ICAQAudoCP\\nRNq/keBcTcL19UYo8X4tRwm350U5ccKwiKb8caEE2Crh3dyNyKDN3+ZKl8i8OwWN\\nx9PpTJANlmWYuOvhjLtvnkGidcxhCmVEpEms2h3+zrRIXijIENqhWpKzcQus7R6F\\nmMxW/KPt0rY80rfrZ2ReCkuhBEZzgL5udYL+AEYkvf7oGD/W18nDCUKEsm8T45jI\\ndBVs7PeFaEJSAlDW8T3OekV8CETvafwBx4UK9kHo7+mfZSHCiGhzodF3WGzPnLFs\\nB4OptAHfXUjIAEZ9pxdr8C/tXU9dVyQVdHjISKQdtWUBoHSwmZnIuEtWADfRjMi8\\ne2Le1qiC0IBMc7JAVZXZ1lbs7A5mKgsUy+1rRUVEkVgmgDfr1BcsstOeXpNcQS4K\\nebKterF/ZDmVYJdUD6o91xfAAy1onn1mzKhIfqMeCZEcz4nvuaLM2h5HsIOJPgLL\\n5LnaQxl+6cNx1u3+X1crPv0k1hs9yqn72LmD65ZqBpamiwJudSpu1RCPCAdNzzcO\\n9v2I8JlXhl0IKRXoAZX+VK1PJmZJ8giRTI+92XOWJlryyknm9Znp1djibZAbLnpI\\nrorY/feSmoZFEKUv74n7XrgbveEWjMbkZQHrNNPW0VZ3uXM30E81Wt6fCyyX5GO3\\ndTPtEDPf9zp/r0AHZKU+4Bg2ZAkrNMltCAjXSg==\\n-----END CERTIFICATE-----\\n'}\n  ```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/sslkeyandcertificate/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "SSLKeyAndCertificate object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "SSLKeyAndCertificate object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/sslkeyandcertificate": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "SSLKeyAndCertificate object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificate"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/SSLKeyAndCertificateApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "SSLKeyRSAParams": {
            "type": "object", 
            "properties": {
                "key_size": {
                    "default": "SSL_KEY_2048_BITS", 
                    "type": "string", 
                    "description": " Enum options - SSL_KEY_1024_BITS, SSL_KEY_2048_BITS, SSL_KEY_3072_BITS, SSL_KEY_4096_BITS."
                }, 
                "exponent": {
                    "default": 65537, 
                    "type": "integer", 
                    "description": "Number of exponent.", 
                    "format": "int32"
                }
            }
        }, 
        "SSLKeyParams": {
            "required": [
                "algorithm"
            ], 
            "type": "object", 
            "properties": {
                "ec_params": {
                    "description": "Placeholder for description of property ec_params of obj type SSLKeyParams field type str  type object", 
                    "$ref": "#/definitions/SSLKeyECParams"
                }, 
                "rsa_params": {
                    "description": "Placeholder for description of property rsa_params of obj type SSLKeyParams field type str  type object", 
                    "$ref": "#/definitions/SSLKeyRSAParams"
                }, 
                "algorithm": {
                    "default": "SSL_KEY_ALGORITHM_RSA", 
                    "type": "string", 
                    "description": " Enum options - SSL_KEY_ALGORITHM_RSA, SSL_KEY_ALGORITHM_EC."
                }
            }
        }, 
        "SSLKeyAndCertificate": {
            "required": [
                "certificate", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "default": "SSL_CERTIFICATE_FINISHED", 
                    "type": "string", 
                    "description": " Enum options - SSL_CERTIFICATE_FINISHED, SSL_CERTIFICATE_PENDING."
                }, 
                "certificate_management_profile_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type CertificateManagementProfile."
                }, 
                "format": {
                    "default": "SSL_PEM", 
                    "type": "string", 
                    "description": "Format of the Key/Certificate file. Enum options - SSL_PEM, SSL_PKCS12. Field introduced in 18.1.2, 18.2.1."
                }, 
                "hardwaresecuritymodulegroup_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type HardwareSecurityModuleGroup."
                }, 
                "key": {
                    "type": "string", 
                    "description": "Private key."
                }, 
                "certificate_base64": {
                    "type": "boolean", 
                    "description": "States if the certificate is base64 encoded. Field introduced in 18.1.2, 18.2.1."
                }, 
                "key_params": {
                    "description": "Placeholder for description of property key_params of obj type SSLKeyAndCertificate field type str  type object", 
                    "$ref": "#/definitions/SSLKeyParams"
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "enckey_base64": {
                    "type": "string", 
                    "description": "Encrypted private key corresponding to the private key (e.g. those generated by an HSM such as Thales nShield)."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "dynamic_params": {
                    "items": {
                        "$ref": "#/definitions/CustomParams"
                    }, 
                    "type": "array", 
                    "description": "Dynamic parameters needed for certificate management profile."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "enckey_name": {
                    "type": "string", 
                    "description": "Name of the encrypted private key (e.g. those generated by an HSM such as Thales nShield)."
                }, 
                "key_base64": {
                    "type": "boolean", 
                    "description": "States if the private key is base64 encoded. Field introduced in 18.1.2, 18.2.1."
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Creator name."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "key_passphrase": {
                    "type": "string", 
                    "description": "Passphrase used to encrypt the private key. Field introduced in 18.1.2, 18.2.1."
                }, 
                "certificate": {
                    "description": "Placeholder for description of property certificate of obj type SSLKeyAndCertificate field type str  type object", 
                    "$ref": "#/definitions/SSLCertificate"
                }, 
                "ca_certs": {
                    "items": {
                        "$ref": "#/definitions/CertificateAuthority"
                    }, 
                    "type": "array", 
                    "description": "CA certificates in certificate chain."
                }, 
                "type": {
                    "type": "string", 
                    "description": " Enum options - SSL_CERTIFICATE_TYPE_VIRTUALSERVICE, SSL_CERTIFICATE_TYPE_SYSTEM, SSL_CERTIFICATE_TYPE_CA."
                }
            }
        }, 
        "CertificateAuthority": {
            "type": "object", 
            "properties": {
                "ca_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type SSLKeyAndCertificate."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }
            }
        }, 
        "CustomParams": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "is_dynamic": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property is_dynamic of obj type CustomParams field type str  type boolean"
                }, 
                "is_sensitive": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property is_sensitive of obj type CustomParams field type str  type boolean"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "value": {
                    "type": "string", 
                    "description": "value of CustomParams."
                }
            }
        }, 
        "SSLCertificateDescription": {
            "type": "object", 
            "properties": {
                "locality": {
                    "type": "string", 
                    "description": "locality of SSLCertificateDescription."
                }, 
                "distinguished_name": {
                    "type": "string", 
                    "description": "distinguished_name of SSLCertificateDescription."
                }, 
                "country": {
                    "type": "string", 
                    "description": "country of SSLCertificateDescription."
                }, 
                "organization_unit": {
                    "type": "string", 
                    "description": "organization_unit of SSLCertificateDescription."
                }, 
                "state": {
                    "type": "string", 
                    "description": "state of SSLCertificateDescription."
                }, 
                "common_name": {
                    "type": "string", 
                    "description": "common_name of SSLCertificateDescription."
                }, 
                "organization": {
                    "type": "string", 
                    "description": "organization of SSLCertificateDescription."
                }, 
                "email_address": {
                    "type": "string", 
                    "description": "email_address of SSLCertificateDescription."
                }
            }
        }, 
        "SSLKeyAndCertificateApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/SSLKeyAndCertificate"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "SSLKeyECParams": {
            "type": "object", 
            "properties": {
                "curve": {
                    "default": "SSL_KEY_EC_CURVE_SECP256R1", 
                    "type": "string", 
                    "description": " Enum options - SSL_KEY_EC_CURVE_SECP256R1, SSL_KEY_EC_CURVE_SECP384R1, SSL_KEY_EC_CURVE_SECP521R1."
                }
            }
        }, 
        "SSLCertificate": {
            "type": "object", 
            "properties": {
                "certificate_signing_request": {
                    "type": "string", 
                    "description": "certificate_signing_request of SSLCertificate."
                }, 
                "text": {
                    "type": "string", 
                    "description": "text of SSLCertificate."
                }, 
                "fingerprint": {
                    "type": "string", 
                    "description": "fingerprint of SSLCertificate."
                }, 
                "expiry_status": {
                    "default": "SSL_CERTIFICATE_GOOD", 
                    "type": "string", 
                    "description": " Enum options - SSL_CERTIFICATE_GOOD, SSL_CERTIFICATE_EXPIRY_WARNING, SSL_CERTIFICATE_EXPIRED."
                }, 
                "signature_algorithm": {
                    "type": "string", 
                    "description": "signature_algorithm of SSLCertificate."
                }, 
                "key_params": {
                    "description": "Placeholder for description of property key_params of obj type SSLCertificate field type str  type object", 
                    "$ref": "#/definitions/SSLKeyParams"
                }, 
                "days_until_expire": {
                    "default": 365, 
                    "type": "integer", 
                    "description": "Number of days_until_expire.", 
                    "format": "int32"
                }, 
                "not_before": {
                    "type": "string", 
                    "description": "not_before of SSLCertificate."
                }, 
                "subject": {
                    "description": "Placeholder for description of property subject of obj type SSLCertificate field type str  type object", 
                    "$ref": "#/definitions/SSLCertificateDescription"
                }, 
                "subject_alt_names": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "subjectAltName that provides additional subject identities."
                }, 
                "public_key": {
                    "type": "string", 
                    "description": "public_key of SSLCertificate."
                }, 
                "self_signed": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property self_signed of obj type SSLCertificate field type str  type boolean"
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "certificate of SSLCertificate."
                }, 
                "not_after": {
                    "type": "string", 
                    "description": "not_after of SSLCertificate."
                }, 
                "chain_verified": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property chain_verified of obj type SSLCertificate field type str  type boolean"
                }, 
                "version": {
                    "type": "string", 
                    "description": "version of SSLCertificate."
                }, 
                "signature": {
                    "type": "string", 
                    "description": "signature of SSLCertificate."
                }, 
                "serial_number": {
                    "type": "string", 
                    "description": "serial_number of SSLCertificate."
                }, 
                "issuer": {
                    "description": "Placeholder for description of property issuer of obj type SSLCertificate field type str  type object", 
                    "$ref": "#/definitions/SSLCertificateDescription"
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}