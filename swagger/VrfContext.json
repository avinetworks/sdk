{
    "info": {
        "title": "Avi VrfContext Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure vrfcontext <key>\n- show vrfcontext <key>\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/vrfcontext/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VrfContext object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VrfContext object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/vrfcontext": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VrfContext object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VrfContext"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VrfContextApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud using its uuid. Eg. cloud_uuid=cloud-xyz.", 
                        "name": "cloud_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud usings its name. This uses cloud name rather than uuid. Eg. cloud_ref.name=Default-Cloud.", 
                        "name": "cloud_ref.name"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "BgpProfile": {
            "required": [
                "ibgp", 
                "local_as"
            ], 
            "type": "object", 
            "properties": {
                "keepalive_interval": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Keepalive interval for Peers. Allowed values are 0-3600.", 
                    "format": "int32"
                }, 
                "peers": {
                    "items": {
                        "$ref": "#/definitions/BgpPeer"
                    }, 
                    "type": "array", 
                    "description": "BGP Peers."
                }, 
                "ip_communities": {
                    "items": {
                        "$ref": "#/definitions/IpCommunity"
                    }, 
                    "type": "array", 
                    "description": "Communities per IP address range. Field introduced in 17.1.3."
                }, 
                "local_as": {
                    "type": "integer", 
                    "description": "Local Autonomous System ID. Allowed values are 1-4294967295.", 
                    "format": "int32"
                }, 
                "community": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Community string either in aa nn format where aa, nn is within [1,65535] or local-AS|no-advertise|no-export|internet. Field introduced in 17.1.2."
                }, 
                "ibgp": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "BGP peer type."
                }, 
                "send_community": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Send community attribute to all peers. Field introduced in 17.1.2."
                }, 
                "shutdown": {
                    "type": "boolean", 
                    "description": "Shutdown the bgp. Field introduced in 17.2.4."
                }, 
                "hold_time": {
                    "default": 180, 
                    "type": "integer", 
                    "description": "Hold time for Peers. Allowed values are 3-7200.", 
                    "format": "int32"
                }
            }
        }, 
        "VrfContext": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "description": {
                    "type": "string", 
                    "description": "User defined description for the object."
                }, 
                "static_routes": {
                    "items": {
                        "$ref": "#/definitions/StaticRoute"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property static_routes of obj type VrfContext field type str  type object"
                }, 
                "cloud_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Cloud."
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "system_default": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property system_default of obj type VrfContext field type str  type boolean"
                }, 
                "gateway_mon": {
                    "items": {
                        "$ref": "#/definitions/GatewayMonitor"
                    }, 
                    "type": "array", 
                    "description": "Configure ping based heartbeat check for gateway in service engines of vrf."
                }, 
                "internal_gateway_monitor": {
                    "description": "Configure ping based heartbeat check for all default gateways in service engines of vrf. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/InternalGatewayMonitor"
                }, 
                "debugvrfcontext": {
                    "description": "Configure debug flags for VRF. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/DebugVrfContext"
                }, 
                "bgp_profile": {
                    "description": "Bgp Local and Peer Info.", 
                    "$ref": "#/definitions/BgpProfile"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }
            }
        }, 
        "BgpPeer": {
            "type": "object", 
            "properties": {
                "subnet6": {
                    "description": "IPv6 subnet providing reachability for Peer. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "peer_ip6": {
                    "description": "IPv6 Address of the BGP Peer. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "advertise_snat_ip": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Advertise SNAT IP to this Peer."
                }, 
                "local_as": {
                    "type": "integer", 
                    "description": "Local AS to use for this ebgp peer. If specified, this will override the local AS configured at the VRF level. Allowed values are 1-4294967295. Field introduced in 17.1.6,17.2.2.", 
                    "format": "int32"
                }, 
                "md5_secret": {
                    "type": "string", 
                    "description": "Peer Autonomous System Md5 Digest Secret Key."
                }, 
                "advertise_vip": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Advertise VIP to this Peer."
                }, 
                "shutdown": {
                    "type": "boolean", 
                    "description": "Shutdown the BGP peer. Field introduced in 17.2.4."
                }, 
                "hold_time": {
                    "default": 180, 
                    "type": "integer", 
                    "description": "Hold time for this Peer. Allowed values are 3-7200.", 
                    "format": "int32"
                }, 
                "keepalive_interval": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Keepalive interval for this Peer. Allowed values are 0-3600.", 
                    "format": "int32"
                }, 
                "subnet": {
                    "description": "Subnet providing reachability for Peer.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "remote_as": {
                    "type": "integer", 
                    "description": "Peer Autonomous System ID. Allowed values are 1-4294967295.", 
                    "format": "int32"
                }, 
                "ebgp_multihop": {
                    "type": "integer", 
                    "description": "TTL for multihop ebgp Peer. Allowed values are 0-255. Field introduced in 17.1.3.", 
                    "format": "int32"
                }, 
                "bfd": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable Bi-Directional Forward Detection. Only async mode supported."
                }, 
                "network_ref": {
                    "type": "string", 
                    "description": "Network providing reachability for Peer. It is a reference to an object of type Network."
                }, 
                "connect_timer": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "Connect timer for this Peer. Allowed values are 1-120.", 
                    "format": "int32"
                }, 
                "peer_ip": {
                    "description": "IP Address of the BGP Peer.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "advertisement_interval": {
                    "default": 5, 
                    "type": "integer", 
                    "description": "Advertisement interval for this Peer. Allowed values are 1-60.", 
                    "format": "int32"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }, 
        "InternalGatewayMonitor": {
            "type": "object", 
            "properties": {
                "gateway_monitor_success_threshold": {
                    "default": 15, 
                    "type": "integer", 
                    "description": "The number of consecutive successful gateway health checks before a gateway that was marked down by the gateway monitor is marked up. Allowed values are 3-50. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "gateway_monitor_failure_threshold": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "The number of consecutive failed gateway health checks before a gateway is marked down. Allowed values are 3-50. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "disable_gateway_monitor": {
                    "type": "boolean", 
                    "description": "Disable the gateway monitor for default gateway. They are monitored by default. Field introduced in 17.1.1."
                }, 
                "gateway_monitor_interval": {
                    "default": 1000, 
                    "type": "integer", 
                    "description": "The interval between two ping requests sent by the gateway monitor in milliseconds. If a value is not specified, requests are sent every second. Allowed values are 100-60000. Field introduced in 17.1.1.", 
                    "format": "int32"
                }
            }
        }, 
        "GatewayMonitor": {
            "required": [
                "gateway_ip"
            ], 
            "type": "object", 
            "properties": {
                "gateway_monitor_success_threshold": {
                    "default": 15, 
                    "type": "integer", 
                    "description": "The number of consecutive successful gateway health checks before a gateway that was marked down by the gateway monitor is marked up. Allowed values are 3-50.", 
                    "format": "int32"
                }, 
                "subnet": {
                    "description": "Subnet providing reachability for Multi-hop Gateway. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "gateway_ip": {
                    "description": "IP address of next hop gateway to be monitored.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "gateway_monitor_fail_threshold": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "The number of consecutive failed gateway health checks before a gateway is marked down. Allowed values are 3-50.", 
                    "format": "int32"
                }, 
                "gateway_monitor_interval": {
                    "default": 1000, 
                    "type": "integer", 
                    "description": "The interval between two ping requests sent by the gateway monitor in milliseconds. If a value is not specified, requests are sent every second. Allowed values are 100-60000.", 
                    "format": "int32"
                }
            }
        }, 
        "IpCommunity": {
            "required": [
                "ip_begin"
            ], 
            "type": "object", 
            "properties": {
                "ip_end": {
                    "description": "End of IP address range. Optional if ip_begin is the only IP address in specified IP range. Field introduced in 17.1.3.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "ip_begin": {
                    "description": "Beginning of IP address range. Field introduced in 17.1.3.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "community": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Community string either in aa nn format where aa, nn is within [1,65535] or local-AS|no-advertise|no-export|internet. Field introduced in 17.1.3."
                }
            }
        }, 
        "VrfContextApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/VrfContext"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "StaticRoute": {
            "required": [
                "next_hop", 
                "prefix", 
                "route_id"
            ], 
            "type": "object", 
            "properties": {
                "route_id": {
                    "type": "string", 
                    "description": "route_id of StaticRoute."
                }, 
                "prefix": {
                    "description": "Placeholder for description of property prefix of obj type StaticRoute field type str  type object", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "next_hop": {
                    "description": "Placeholder for description of property next_hop of obj type StaticRoute field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "if_name": {
                    "type": "string", 
                    "description": "if_name of StaticRoute."
                }, 
                "disable_gateway_monitor": {
                    "type": "boolean", 
                    "description": "Disable the gateway monitor for default gateway. They are monitored by default. Field introduced in 17.1.1."
                }
            }
        }, 
        "DebugVrfContext": {
            "type": "object", 
            "properties": {
                "command_buffer_size": {
                    "default": 32768, 
                    "type": "integer", 
                    "description": "Vrf config command buffer size. Allowed values are 1-32768. Field introduced in 17.2.13,18.1.5,18.2.1.", 
                    "format": "int32"
                }, 
                "flags": {
                    "items": {
                        "$ref": "#/definitions/DebugVrf"
                    }, 
                    "type": "array", 
                    "description": " Field introduced in 17.1.1."
                }, 
                "command_buffer_interval": {
                    "default": 2, 
                    "type": "integer", 
                    "description": "Vrf config command buffer process interval. Allowed values are 1-4. Field introduced in 17.2.13,18.1.5,18.2.1.", 
                    "format": "int32"
                }
            }
        }, 
        "DebugVrf": {
            "required": [
                "flag"
            ], 
            "type": "object", 
            "properties": {
                "flag": {
                    "type": "string", 
                    "description": " Enum options - DEBUG_VRF_BGP, DEBUG_VRF_QUAGGA, DEBUG_VRF_ALL, DEBUG_VRF_NONE. Field introduced in 17.1.1."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}