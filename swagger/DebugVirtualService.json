{
    "info": {
        "title": "Avi DebugVirtualService Object API", 
        "version": "18.2.8", 
        "description": "CLI\n```\n- debug virtualservice <key>\n- show debug virtualservice <key>\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/debugvirtualservice/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugVirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugVirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/debugvirtualservice": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugVirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualService"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugVirtualServiceApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud using its uuid. Eg. cloud_uuid=cloud-xyz.", 
                        "name": "cloud_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud usings its name. This uses cloud name rather than uuid. Eg. cloud_ref.name=Default-Cloud.", 
                        "name": "cloud_ref.name"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "CaptureFileSize": {
            "type": "object", 
            "properties": {
                "absolute_size": {
                    "type": "integer", 
                    "description": "Maximum size in MB. Set 0 for avi default size. Allowed values are 100-512000. Special values are 0 - 'AVI_DEFAULT'. Field introduced in 18.2.8.", 
                    "format": "int32"
                }, 
                "percentage_size": {
                    "type": "integer", 
                    "description": "Limits capture to percentage of free disk space. Set 0 for avi default size. Allowed values are 0-75. Field introduced in 18.2.8.", 
                    "format": "int32"
                }
            }
        }, 
        "CaptureFilters": {
            "type": "object", 
            "properties": {
                "tcp_fin": {
                    "type": "boolean", 
                    "description": "TCP FIN flag filter. Field introduced in 18.2.5."
                }, 
                "dst_port_start": {
                    "type": "integer", 
                    "description": "Destination Port range filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "dst_port_end": {
                    "type": "integer", 
                    "description": "Destination Port range filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "src_port": {
                    "type": "integer", 
                    "description": "Source Port filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "capture_ipc": {
                    "description": "Capture filter for SE IPC. Not applicable for Debug Virtual Service. Field introduced in 18.2.5.", 
                    "$ref": "#/definitions/CaptureIPC"
                }, 
                "tcp_push": {
                    "type": "boolean", 
                    "description": "TCP PUSH flag filter. Field introduced in 18.2.5."
                }, 
                "capture_ip": {
                    "description": "Per packet IP filter. Matches with source and destination address. Curently not applicable for DebugServiceEngine. Field introduced in 18.2.5.", 
                    "$ref": "#/definitions/DebugIpAddr"
                }, 
                "tcp_syn": {
                    "type": "boolean", 
                    "description": "TCP SYN flag filter. Field introduced in 18.2.5."
                }, 
                "ip_proto": {
                    "type": "string", 
                    "description": "IP Proto filter. Support for TCP only for now. Enum options - IP_TYPE_TCP. Field introduced in 18.2.5."
                }, 
                "tcp_ack": {
                    "type": "boolean", 
                    "description": "TCP ACK flag filter. Field introduced in 18.2.5."
                }, 
                "eth_proto": {
                    "type": "string", 
                    "description": "Ethernet Proto filter. Enum options - ETH_TYPE_IPV4. Field introduced in 18.2.5."
                }
            }
        }, 
        "IpAddrRange": {
            "required": [
                "begin", 
                "end"
            ], 
            "type": "object", 
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "end": {
                    "description": "Ending IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }, 
        "DebugVirtualServiceCapture": {
            "type": "object", 
            "properties": {
                "pcap_ng": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable PcapNg for packet capture. Field introduced in 18.2.5."
                }, 
                "capture_file_size": {
                    "description": "Maximum allowed size of PCAP Capture File per SE. Max(absolute_size, percentage_size) will be final value. Set both to 0 for avi default size. DOS, IPC and DROP pcaps not applicaple. Field introduced in 18.2.8.", 
                    "$ref": "#/definitions/CaptureFileSize"
                }, 
                "pkt_size": {
                    "default": 128, 
                    "type": "integer", 
                    "description": "Number of bytes of each packet to capture. Use 0 to capture the entire packet. Allowed values are 64-1514. Special values are 0 - 'full capture'.", 
                    "format": "int32"
                }, 
                "duration": {
                    "type": "integer", 
                    "description": "Number of minutes to capture packets. Use 0 to capture until manually stopped. Special values are 0 - 'infinite'.", 
                    "format": "int32"
                }, 
                "enable_ssl_session_key_capture": {
                    "type": "boolean", 
                    "description": "Enable SSL session key capture. Field introduced in 18.2.3."
                }, 
                "num_pkts": {
                    "type": "integer", 
                    "description": "Total number of packets to capture.", 
                    "format": "int32"
                }
            }
        }, 
        "DebugVirtualService": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "capture": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property capture of obj type DebugVirtualService field type str  type boolean"
                }, 
                "se_params": {
                    "description": "Placeholder for description of property se_params of obj type DebugVirtualService field type str  type object", 
                    "$ref": "#/definitions/DebugVirtualServiceSeParams"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "cloud_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Cloud."
                }, 
                "capture_params": {
                    "description": "Placeholder for description of property capture_params of obj type DebugVirtualService field type str  type object", 
                    "$ref": "#/definitions/DebugVirtualServiceCapture"
                }, 
                "debug_ip": {
                    "description": "Filters all packets of a complete transaction (client and server side), based on client ip.", 
                    "$ref": "#/definitions/DebugIpAddr"
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "capture_filters": {
                    "description": "Per packet capture filters for Debug Virtual Service. Applies to both frontend and backend packets. Field introduced in 18.2.7.", 
                    "$ref": "#/definitions/CaptureFilters"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "dns_options": {
                    "description": "Dns debug options. Field introduced in 18.2.1.", 
                    "$ref": "#/definitions/DebugDnsOptions"
                }, 
                "debug_hm": {
                    "default": "DEBUG_VS_HM_NONE", 
                    "type": "string", 
                    "description": "This option controls the capture of Health Monitor flows. Enum options - DEBUG_VS_HM_NONE, DEBUG_VS_HM_ONLY, DEBUG_VS_HM_INCLUDE."
                }, 
                "flags": {
                    "items": {
                        "$ref": "#/definitions/DebugVsDataplane"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property flags of obj type DebugVirtualService field type str  type object"
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "resync_flows": {
                    "type": "boolean", 
                    "description": "This option re-synchronizes flows between Active-Standby service engines for all the virtual services placed on them. It should be used with caution because as it can cause a flood between Active-Standby. Field introduced in 18.1.3,18.2.1."
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }
            }
        }, 
        "DebugIpAddr": {
            "type": "object", 
            "properties": {
                "prefixes": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property prefixes of obj type DebugIpAddr field type str  type object"
                }, 
                "ranges": {
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property ranges of obj type DebugIpAddr field type str  type object"
                }, 
                "addrs": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property addrs of obj type DebugIpAddr field type str  type object"
                }
            }
        }, 
        "DebugVirtualServiceApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/DebugVirtualService"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DebugVirtualServiceSeParams": {
            "type": "object", 
            "properties": {
                "se_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }
            }
        }, 
        "DebugDnsOptions": {
            "type": "object", 
            "properties": {
                "domain_name": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "This field filters the FQDN for Dns debug. Field introduced in 18.2.1."
                }, 
                "gslb_service_name": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "This field filters the Gslb service for Dns debug. Field introduced in 18.2.1."
                }
            }
        }, 
        "CaptureIPC": {
            "type": "object", 
            "properties": {
                "vs_hb": {
                    "type": "boolean", 
                    "description": "Vs heart beat filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_probe_all": {
                    "type": "boolean", 
                    "description": "Filter for all flow probe SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_all": {
                    "type": "boolean", 
                    "description": "Filter for all flow mirror SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_batched": {
                    "type": "boolean", 
                    "description": "IPC batched filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_del": {
                    "type": "boolean", 
                    "description": "Flow mirror del filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_tx_res": {
                    "type": "boolean", 
                    "description": "Filter for outgoing IPC response. Field introduced in 18.2.5."
                }, 
                "flow_probe": {
                    "type": "boolean", 
                    "description": "Flow probe filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_tx_req": {
                    "type": "boolean", 
                    "description": "Filter for outgoing IPC request. Field introduced in 18.2.5."
                }, 
                "ipc_rx_req": {
                    "type": "boolean", 
                    "description": "Filter for incoming IPC request. Field introduced in 18.2.5."
                }, 
                "ipc_rx_res": {
                    "type": "boolean", 
                    "description": "Filter for incoming IPC response. Field introduced in 18.2.5."
                }, 
                "flow_del_probe": {
                    "type": "boolean", 
                    "description": "Flow del probe filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_add": {
                    "type": "boolean", 
                    "description": "Flow mirror add filter for SE IPC. Field introduced in 18.2.5."
                }
            }
        }, 
        "DebugVsDataplane": {
            "required": [
                "flag"
            ], 
            "type": "object", 
            "properties": {
                "flag": {
                    "type": "string", 
                    "description": " Enum options - DEBUG_VS_TCP_CONNECTION, DEBUG_VS_TCP_PKT, DEBUG_VS_TCP_APP, DEBUG_VS_TCP_APP_PKT, DEBUG_VS_TCP_RETRANSMIT, DEBUG_VS_TCP_TIMER, DEBUG_VS_TCP_CONN_ERROR, DEBUG_VS_TCP_PKT_ERROR, DEBUG_VS_TCP_REXMT, DEBUG_VS_TCP_ALL, DEBUG_VS_CREDIT, DEBUG_VS_PROXY_CONNECTION, DEBUG_VS_PROXY_PKT, DEBUG_VS_PROXY_ERR, DEBUG_VS_UDP, DEBUG_VS_UDP_PKT, DEBUG_VS_HM, DEBUG_VS_HM_ERR, DEBUG_VS_HM_PKT, DEBUG_VS_HTTP_CORE, DEBUG_VS_HTTP_ALL, DEBUG_VS_CONFIG, DEBUG_VS_EVENTS, DEBUG_VS_HTTP_RULES, DEBUG_VS_HM_EXT, DEBUG_VS_SSL, DEBUG_VS_WAF, DEBUG_VS_DNS, DEBUG_VS_PAA, DEBUG_VS_ALL, DEBUG_VS_ERROR, DEBUG_VS_NONE."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}