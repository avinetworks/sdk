{
    "info": {
        "title": "Avi WafPolicy Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure wafpolicy <key>\n- show wafpolicy <key>\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/wafpolicy": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "WafPolicy object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicyApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/wafpolicy/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "WafPolicy object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "WafPolicy object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/WafPolicy"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "WafPolicyApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/WafPolicy"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }, 
        "WafLearning": {
            "type": "object", 
            "properties": {
                "confidence": {
                    "default": 90, 
                    "type": "integer", 
                    "description": "Confidence level used to derive rules from the WAF learning. Allowed values are 60-100. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "enable": {
                    "type": "boolean", 
                    "description": "Enable Learning for WAF policy. Field introduced in 18.1.2."
                }, 
                "sampling_percent": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "Sampling percent of the requests subjected to WAF learning. Allowed values are 1-100. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "arg_summarization_threshold": {
                    "default": 3, 
                    "type": "integer", 
                    "description": "Suffix Summarization threshold used to compress args. Allowed values are 3-255. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "path_summarization_threshold": {
                    "default": 5, 
                    "type": "integer", 
                    "description": "Suffix Summarization threshold used to compress paths. Allowed values are 3-255. Field introduced in 18.1.2.", 
                    "format": "int32"
                }
            }
        }, 
        "WafRuleGroup": {
            "required": [
                "enable", 
                "index", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "exclude_list": {
                    "items": {
                        "$ref": "#/definitions/WafExcludeListEntry"
                    }, 
                    "type": "array", 
                    "description": "Exclude list for the WAF rule group. The fields in the exclude list entry are logically and'ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be 'logical or' of them. Field introduced in 17.2.1."
                }, 
                "enable": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable WAF Rule Group. Field introduced in 17.2.1."
                }, 
                "name": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.1."
                }, 
                "index": {
                    "type": "integer", 
                    "description": " Field introduced in 17.2.1.", 
                    "format": "int32"
                }, 
                "rules": {
                    "items": {
                        "$ref": "#/definitions/WafRule"
                    }, 
                    "type": "array", 
                    "description": "Rules as per Modsec language. Field introduced in 17.2.1."
                }, 
                "force_detection": {
                    "type": "boolean", 
                    "description": "When set to 'true', any rule in this group will not cause 'deny' or 'redirect' actions to run, even if WAF Policy is set to enforcement mode. The behavior would be as if this rule operated in detection mode regardless of WAF Policy setting. Field deprecated in 18.1.5. Field introduced in 18.1.4."
                }
            }
        }, 
        "WafPolicy": {
            "required": [
                "mode", 
                "name", 
                "waf_profile_ref"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.1."
                }, 
                "pre_crs_groups": {
                    "items": {
                        "$ref": "#/definitions/WafRuleGroup"
                    }, 
                    "type": "array", 
                    "description": "WAF Rules are categorized in to groups based on their characterization. These groups are created by the user and will be  enforced before the CRS groups. Field introduced in 17.2.1."
                }, 
                "crs_groups": {
                    "items": {
                        "$ref": "#/definitions/WafRuleGroup"
                    }, 
                    "type": "array", 
                    "description": "WAF Rules are categorized in to groups based on their characterization. These groups are system created with CRS groups. Field introduced in 17.2.1."
                }, 
                "learning": {
                    "description": "Configure parameters for WAF learning. Field introduced in 18.1.2.", 
                    "$ref": "#/definitions/WafLearning"
                }, 
                "paranoia_level": {
                    "default": "WAF_PARANOIA_LEVEL_LOW", 
                    "type": "string", 
                    "description": "WAF Ruleset paranoia  mode. This is used to select Rules based on the paranoia-level tag. Enum options - WAF_PARANOIA_LEVEL_LOW, WAF_PARANOIA_LEVEL_MEDIUM, WAF_PARANOIA_LEVEL_HIGH, WAF_PARANOIA_LEVEL_EXTREME. Field introduced in 17.2.1."
                }, 
                "waf_profile_ref": {
                    "type": "string", 
                    "description": "WAF Profile for WAF policy. It is a reference to an object of type WafProfile. Field introduced in 17.2.1."
                }, 
                "allow_mode_delegation": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Allow Rules to overwrite the policy mode. This must be set if the policy mode is set to enforcement. Field introduced in 18.1.5, 18.2.1."
                }, 
                "waf_crs_ref": {
                    "type": "string", 
                    "description": "WAF core ruleset used for the CRS part of this Policy. It is a reference to an object of type WafCRS. Field introduced in 18.1.1."
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "failure_mode": {
                    "default": "WAF_FAILURE_MODE_OPEN", 
                    "type": "string", 
                    "description": "WAF Policy failure mode. This can be 'Open' or 'Closed'. Enum options - WAF_FAILURE_MODE_OPEN, WAF_FAILURE_MODE_CLOSED. Field introduced in 18.1.2."
                }, 
                "post_crs_groups": {
                    "items": {
                        "$ref": "#/definitions/WafRuleGroup"
                    }, 
                    "type": "array", 
                    "description": "WAF Rules are categorized in to groups based on their characterization. These groups are created by the user and will be enforced after the CRS groups. Field introduced in 17.2.1."
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant. Field introduced in 17.2.1."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.1."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Creator name. Field introduced in 17.2.4."
                }, 
                "name": {
                    "type": "string", 
                    "description": " Field introduced in 17.2.1."
                }, 
                "mode": {
                    "default": "WAF_MODE_DETECTION_ONLY", 
                    "type": "string", 
                    "description": "WAF Policy mode. This can be detection or enforcement. It can be overwritten by rules if allow_mode_delegation is set. Enum options - WAF_MODE_DETECTION_ONLY, WAF_MODE_ENFORCEMENT. Field introduced in 17.2.1."
                }
            }
        }, 
        "WafExclusionType": {
            "required": [
                "match_case", 
                "match_op"
            ], 
            "type": "object", 
            "properties": {
                "match_case": {
                    "default": "SENSITIVE", 
                    "type": "string", 
                    "description": "Case sensitivity to use for the matching. Enum options - SENSITIVE, INSENSITIVE. Field introduced in 17.2.8."
                }, 
                "match_op": {
                    "default": "EQUALS", 
                    "type": "string", 
                    "description": "String Operation to use for matching the Exclusion. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH. Field introduced in 17.2.8."
                }
            }
        }, 
        "WafExcludeListEntry": {
            "type": "object", 
            "properties": {
                "match_element_criteria": {
                    "description": "Criteria for match_element matching. Field introduced in 19.1.1, 18.2.2.", 
                    "$ref": "#/definitions/WafExclusionType"
                }, 
                "uri_path": {
                    "type": "string", 
                    "description": "URI Path to exclude for WAF rules. Field introduced in 17.2.1."
                }, 
                "client_subnet": {
                    "description": "Client IP Subnet to exclude for WAF rules. Field introduced in 17.2.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "match_element": {
                    "type": "string", 
                    "description": "The match_element can be 'ARGS xxx', 'ARGS_GET xxx', 'ARGS_POST xxx', 'ARGS_NAMES xxx', 'FILES xxx', 'QUERY_STRING', 'REQUEST_BASENAME', 'REQUEST_BODY', 'REQUEST_URI', 'REQUEST_URI_RAW', 'REQUEST_COOKIES xxx', 'REQUEST_HEADERS xxx' or 'RESPONSE_HEADERS xxx'. These match_elements in the HTTP Transaction (if present) will be excluded when executing WAF Rules. Field introduced in 17.2.1."
                }, 
                "uri_match_criteria": {
                    "description": "Criteria for URI matching. Field introduced in 17.2.8.", 
                    "$ref": "#/definitions/WafExclusionType"
                }
            }
        }, 
        "WafRule": {
            "required": [
                "enable", 
                "index", 
                "rule"
            ], 
            "type": "object", 
            "properties": {
                "exclude_list": {
                    "items": {
                        "$ref": "#/definitions/WafExcludeListEntry"
                    }, 
                    "type": "array", 
                    "description": "Exclude list for the WAF rule. The fields in the exclude list entry are logically and'ed to deduce the exclusion criteria. If there are multiple excludelist entries, it will be 'logical or' of them. Field introduced in 17.2.3."
                }, 
                "enable": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable WAF Rule Group. Field introduced in 17.2.1."
                }, 
                "name": {
                    "type": "string", 
                    "description": "User-friendly optional name for a rule. Field introduced in 17.2.1."
                }, 
                "index": {
                    "type": "integer", 
                    "description": " Field introduced in 17.2.1.", 
                    "format": "int32"
                }, 
                "tags": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Tags for WAF rule as per Modsec language. They are extracted from the tag action in a ModSec rule. Field introduced in 18.1.3."
                }, 
                "rule": {
                    "type": "string", 
                    "description": "Rule as per Modsec language. Field introduced in 17.2.1."
                }, 
                "mode": {
                    "type": "string", 
                    "description": "WAF Rule mode. This can be detection or enforcement. If this is not set, the Policy mode is used. This only takes effect if the policy allows delegation. Enum options - WAF_MODE_DETECTION_ONLY, WAF_MODE_ENFORCEMENT. Field introduced in 18.1.5, 18.2.1."
                }, 
                "force_detection": {
                    "type": "boolean", 
                    "description": "When set to 'true', this rule will not cause 'deny' or 'redirect' actions to run, even if WAF Policy is set to enforcement mode. The behavior would be as if this rule operated in detection mode regardless of WAF Policy setting. Field deprecated in 18.1.5. Field introduced in 18.1.4."
                }, 
                "rule_id": {
                    "type": "string", 
                    "description": "Identifier (id) for a rule per Modsec language. All SecRule and SecAction directives require an id. It is extracted from the id action in a ModSec rule. Rules within a single WAF Policy are required to have unique rule_ids. Field introduced in 17.2.2."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}