{
    "info": {
        "title": "Avi  Object API", 
        "version": "18.2.2", 
        "description": "", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/analytics/healthscore/pool/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponseApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/analytics/healthscore/serviceengine/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponseApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/analytics/healthscore/pool/{uuid}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/analytics/healthscore/virtualservice/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponseApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/analytics/healthscore/virtualservice/{uuid}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/analytics/healthscore/serviceengine/{uuid}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/HealthScoreQueryResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller with reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return detailed header with information like contributors etc.?.", 
                        "name": "detailed_header"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL.", 
                        "name": "dimension_aggregation"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the entity type.", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL.", 
                        "name": "hs_type"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Resolve uuid to references?.", 
                        "name": "include_refs"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Include statistics when no filters specified?.", 
                        "name": "include_statistics"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Max number of metric samples to be returned in the response.", 
                        "name": "limit"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY.", 
                        "name": "metric_entity"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc.", 
                        "name": "order_series_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values.", 
                        "name": "pad_missing_data"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Patch health score with operational data?.", 
                        "name": "patch_oper_status"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Pool name. This will apply to any backend stats that are specified in the query.", 
                        "name": "pool_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF.", 
                        "name": "result_format"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Object id like vip or server ip port.", 
                        "name": "server"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch.", 
                        "name": "start"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "description": "Step interval in seconds.", 
                        "name": "step"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now.", 
                        "name": "stop"
                    }, 
                    {
                        "in": "query", 
                        "type": "boolean", 
                        "description": "Return only summary for health score.", 
                        "name": "summary"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "UUID of the Tenant. .", 
                        "name": "tenant_uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "ControllerAnomalyScoreData": {
            "required": [
                "per_anomalous_controller_stats_metrics", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "per_anomalous_controller_stats_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_controller_stats_metrics of obj type ControllerAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "anomalous_controller_stats_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_controller_stats_metrics of ControllerAnomalyScoreData."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }
            }
        }, 
        "DosAttackLevelData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "pct_pkts_dos_attacks": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_pkts_dos_attacks of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_application_dos_attacks": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_application_dos_attacks of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_connections_dos_attacks": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_connections_dos_attacks of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_dos_rx_bytes": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_dos_rx_bytes of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_policy_drops": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_policy_drops of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "serviceengine_dos_attack_level_scores": {
                    "items": {
                        "$ref": "#/definitions/ServiceEngineDosAttackLevel"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property serviceengine_dos_attack_level_scores of obj type DosAttackLevelData field type str  type object"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the DoS Attack Level."
                }, 
                "avg_total_connections": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_total_connections of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the DoS Attack Level."
                }, 
                "avg_dos_total_req": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_dos_total_req of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_dos_bandwidth": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_dos_bandwidth of obj type DosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }
            }
        }, 
        "ControllerResourcesScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "avg_cpu_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_cpu_usage of obj type ControllerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_mem_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_mem_usage of obj type ControllerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }
            }
        }, 
        "ServiceEngineAnomalyScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type ServiceEngineAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of ServiceEngineAnomalyScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServiceEngineAnomalyScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type ServiceEngineAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/ServiceEngineAnomalyScoreData"
                }
            }
        }, 
        "ServiceEnginePerformanceScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the performance score."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Performance Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "oper_state": {
                    "type": "string", 
                    "description": " Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING, OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING, OPER_FAILED, OPER_UNAVAIL."
                }
            }
        }, 
        "VirtualServiceAnomalyScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type VirtualServiceAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of VirtualServiceAnomalyScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type VirtualServiceAnomalyScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type VirtualServiceAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/VirtualServiceAnomalyScoreData"
                }
            }
        }, 
        "HealthScoreQuery": {
            "required": [
                "entity_uuid", 
                "metric_entity"
            ], 
            "type": "object", 
            "properties": {
                "patch_oper_status": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Patch health score with operational data?."
                }, 
                "entity_uuid": {
                    "type": "string", 
                    "description": "UUID of the entity type."
                }, 
                "include_refs": {
                    "type": "boolean", 
                    "description": "Resolve uuid to references?."
                }, 
                "order_series_by": {
                    "type": "string", 
                    "description": "Order by field in the statistics. It is required tohave include_statistics set to true. A negative sign means decreasing order. Egs. mean, min, max, etc."
                }, 
                "stop": {
                    "type": "string", 
                    "description": "End time for the metrics in ISO 8601 format. Default is now. Negative numbers mean relative time from now."
                }, 
                "step": {
                    "default": 300, 
                    "type": "integer", 
                    "description": "Step interval in seconds.", 
                    "format": "int32"
                }, 
                "pad_missing_data": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Pad missing health scores? That is, if data for certain intervals not present, fill up the time series with null values."
                }, 
                "dimension_aggregation": {
                    "default": "METRICS_DIMENSION_AGG_NONE", 
                    "type": "string", 
                    "description": "Aggregations for dimensions. Eg. use dimenstion_aggregation=avg for averaged metric values. Enum options - METRICS_DIMENSION_AGG_NONE, METRICS_DIMENSION_AGG_AVG, METRICS_DIMENSION_AGG_SUM, METRICS_DIMENSION_AGG_MAX, METRICS_DIMENSION_AGG_MIN, METRICS_DIMENSION_AGG_PERCENT, METRICS_DIMENSION_AGG_ALL."
                }, 
                "hs_type": {
                    "default": "HEALTH_SCORE", 
                    "type": "string", 
                    "description": "Health Score Type. Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL."
                }, 
                "server": {
                    "type": "string", 
                    "description": "Object id like vip or server ip port."
                }, 
                "metric_entity": {
                    "default": "VSERVER_METRICS_ENTITY", 
                    "type": "string", 
                    "description": "Metrics Types supported. Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY."
                }, 
                "summary": {
                    "type": "boolean", 
                    "description": "Return only summary for health score."
                }, 
                "detailed_header": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Return detailed header with information like contributors etc.?."
                }, 
                "start": {
                    "default": "1970-01-01T00:00:00", 
                    "type": "string", 
                    "description": "Start time for the metrics in ISO 8601 format. Default is UNIX Epoch."
                }, 
                "limit": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Max number of metric samples to be returned in the response.", 
                    "format": "int32"
                }, 
                "result_format": {
                    "default": "METRICS_FORMAT_JSON", 
                    "type": "string", 
                    "description": "Format of the data returned. Enum options - METRICS_FORMAT_JSON, METRICS_FORMAT_CSV, METRICS_FORMAT_TXT, METRICS_FORMAT_PROTOBUF."
                }, 
                "include_statistics": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Include statistics when no filters specified?."
                }, 
                "pool_uuid": {
                    "type": "string", 
                    "description": "Pool name. This will apply to any backend stats that are specified in the query."
                }, 
                "tenant_uuid": {
                    "type": "string", 
                    "description": "UUID of the Tenant. ."
                }
            }
        }, 
        "HealthScoreTypeContributorData": {
            "required": [
                "hs_type"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/HealthScoreEntity"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property entities of obj type HealthScoreTypeContributorData field type str  type object"
                }, 
                "metric_ids": {
                    "type": "string", 
                    "description": "metric_ids of HealthScoreTypeContributorData."
                }, 
                "hs_type": {
                    "type": "string", 
                    "description": " Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL."
                }
            }
        }, 
        "HealthScoreResourcesData": {
            "required": [
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "controller_resources": {
                    "description": "Placeholder for description of property controller_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/ControllerResourcesScoreData"
                }, 
                "server_resources": {
                    "description": "Placeholder for description of property server_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/ServerResourcesScoreData"
                }, 
                "application_resources": {
                    "description": "Placeholder for description of property application_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/ApplicationResourcesScoreData"
                }, 
                "serviceengine_resources": {
                    "description": "Placeholder for description of property serviceengine_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/ServiceEngineResourcesScoreData"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for Resources Score."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type HealthScoreResourcesData field type str  type number", 
                    "format": "double"
                }, 
                "pool_resources": {
                    "description": "Placeholder for description of property pool_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/PoolResourcesScoreData"
                }, 
                "virtualservice_resources": {
                    "description": "Placeholder for description of property virtualservice_resources of obj type HealthScoreResourcesData field type str  type object", 
                    "$ref": "#/definitions/VirtualServiceResourcesScoreData"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "reason_attr of HealthScoreResourcesData."
                }
            }
        }, 
        "ServerPerformanceScoreData": {
            "required": [
                "pool_uuid", 
                "reason", 
                "server"
            ], 
            "type": "object", 
            "properties": {
                "sum_finished_conns": {
                    "type": "number", 
                    "description": "Placeholder for description of property sum_finished_conns of obj type ServerPerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "apdexc": {
                    "type": "number", 
                    "description": "Placeholder for description of property apdexc of obj type ServerPerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "oper_state": {
                    "type": "string", 
                    "description": " Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING, OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING, OPER_FAILED, OPER_UNAVAIL."
                }, 
                "pool_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of pool."
                }, 
                "server": {
                    "type": "string", 
                    "description": "server of ServerPerformanceScoreData."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "apdexr": {
                    "type": "number", 
                    "description": "Placeholder for description of property apdexr of obj type ServerPerformanceScoreData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "ServiceEngineDosAttackLevelData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "pct_connections_dropped": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_connections_dropped of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the DoS Attack Level."
                }, 
                "pct_rx_pkts_dropped": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_rx_pkts_dropped of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "pct_rx_bytes_dropped": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_rx_bytes_dropped of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the SE DoS Attack Level."
                }, 
                "avg_rx_bandwidth": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_rx_bandwidth of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "avg_connections": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_connections of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "avg_rx_pkts": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_rx_pkts of obj type ServiceEngineDosAttackLevelData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "ServerAnomalyScoreData": {
            "required": [
                "per_anomalous_l4_metrics", 
                "pool_uuid", 
                "reason", 
                "server"
            ], 
            "type": "object", 
            "properties": {
                "anomalous_l7_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l7_metrics of ServerAnomalyScoreData."
                }, 
                "anomalous_vm_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_vm_metrics of ServerAnomalyScoreData."
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "server": {
                    "type": "string", 
                    "description": "server of ServerAnomalyScoreData."
                }, 
                "per_anomalous_vm_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_vm_metrics of obj type ServerAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "per_anomalous_l7_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l7_metrics of obj type ServerAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "pool_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of pool."
                }, 
                "per_anomalous_l4_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l4_metrics of obj type ServerAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "anomalous_l4_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l4_metrics of ServerAnomalyScoreData."
                }
            }
        }, 
        "ServerResourcesScoreData": {
            "required": [
                "pool_uuid", 
                "reason", 
                "server"
            ], 
            "type": "object", 
            "properties": {
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "avg_mem_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_mem_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_cpu_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_cpu_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_disk4_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_disk4_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_cpu_wait": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_cpu_wait of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_disk1_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_disk1_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_disk3_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_disk3_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_uptime": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_uptime of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "pool_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of pool."
                }, 
                "pct_open_conns": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_open_conns of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "server": {
                    "type": "string", 
                    "description": "server of ServerResourcesScoreData."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "avg_disk2_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_disk2_usage of obj type ServerResourcesScoreData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "HealthScorePerformanceData": {
            "required": [
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "application_performance": {
                    "description": "Placeholder for description of property application_performance of obj type HealthScorePerformanceData field type str  type object", 
                    "$ref": "#/definitions/ApplicationPerformanceScoreData"
                }, 
                "pool_performance": {
                    "description": "Placeholder for description of property pool_performance of obj type HealthScorePerformanceData field type str  type object", 
                    "$ref": "#/definitions/PoolPerformanceScoreData"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "reason_attr of HealthScorePerformanceData."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type HealthScorePerformanceData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for Performance Score."
                }, 
                "serviceengine_performance": {
                    "description": "Placeholder for description of property serviceengine_performance of obj type HealthScorePerformanceData field type str  type object", 
                    "$ref": "#/definitions/ServiceEnginePerformanceScoreData"
                }, 
                "server_performance": {
                    "description": "Placeholder for description of property server_performance of obj type HealthScorePerformanceData field type str  type object", 
                    "$ref": "#/definitions/ServerPerformanceScoreData"
                }, 
                "virtualservice_performance": {
                    "description": "Placeholder for description of property virtualservice_performance of obj type HealthScorePerformanceData field type str  type object", 
                    "$ref": "#/definitions/VirtualServicePerformanceScoreData"
                }
            }
        }, 
        "HealthScoreQueryResponse": {
            "required": [
                "entity_uuid", 
                "metric_entity", 
                "start", 
                "step", 
                "stop"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "series": {
                    "items": {
                        "$ref": "#/definitions/HealthScoreDataSeries"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property series of obj type HealthScoreQueryResponse field type str  type object"
                }, 
                "stop": {
                    "type": "string", 
                    "description": "stop of HealthScoreQueryResponse."
                }, 
                "server": {
                    "type": "string", 
                    "description": "server name or ip."
                }, 
                "start": {
                    "type": "string", 
                    "description": "start of HealthScoreQueryResponse."
                }, 
                "step": {
                    "type": "integer", 
                    "description": "Number of step.", 
                    "format": "int32"
                }, 
                "entity_uuid": {
                    "type": "string", 
                    "description": "uuid of the entity type."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": "Pool name. This will apply to any back end statistics that are specified in the query. It is a reference to an object of type Pool."
                }, 
                "metric_entity": {
                    "type": "string", 
                    "description": " Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY."
                }
            }
        }, 
        "VirtualServicePerformanceScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type VirtualServicePerformanceScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of VirtualServicePerformanceScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type VirtualServicePerformanceScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type VirtualServicePerformanceScore field type str  type object", 
                    "$ref": "#/definitions/VirtualServicePerformanceScoreData"
                }
            }
        }, 
        "VirtualServiceAnomalyScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "anomalous_l7_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l7_metrics of VirtualServiceAnomalyScoreData."
                }, 
                "pool_anomaly_scores": {
                    "items": {
                        "$ref": "#/definitions/PoolAnomalyScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property pool_anomaly_scores of obj type VirtualServiceAnomalyScoreData field type str  type object"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "per_anomalous_l7_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l7_metrics of obj type VirtualServiceAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "serviceengine_anomaly_scores": {
                    "items": {
                        "$ref": "#/definitions/ServiceEngineAnomalyScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property serviceengine_anomaly_scores of obj type VirtualServiceAnomalyScoreData field type str  type object"
                }, 
                "per_anomalous_l4_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l4_metrics of obj type VirtualServiceAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "anomalous_l4_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l4_metrics of VirtualServiceAnomalyScoreData."
                }
            }
        }, 
        "ServiceEngineAnomalyScoreData": {
            "required": [
                "per_anomalous_se_stats_metrics", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "anomalous_se_stats_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_se_stats_metrics of ServiceEngineAnomalyScoreData."
                }, 
                "per_anomalous_se_stats_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_se_stats_metrics of obj type ServiceEngineAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "per_anomalous_vm_stats_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_vm_stats_metrics of obj type ServiceEngineAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "anomalous_vm_stats_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_vm_stats_metrics of ServiceEngineAnomalyScoreData."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }
            }
        }, 
        "ApplicationResourcesScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Application."
                }, 
                "virtualservice_resources_scores": {
                    "items": {
                        "$ref": "#/definitions/VirtualServiceResourcesScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property virtualservice_resources_scores of obj type ApplicationResourcesScoreData field type str  type object"
                }
            }
        }, 
        "HealthScoreData": {
            "required": [
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "security_threat_level": {
                    "description": "Placeholder for description of property security_threat_level of obj type HealthScoreData field type str  type object", 
                    "$ref": "#/definitions/HealthScoreSecurityData"
                }, 
                "dos_attack_level": {
                    "type": "number", 
                    "description": "Placeholder for description of property dos_attack_level of obj type HealthScoreData field type str  type number", 
                    "format": "double"
                }, 
                "timestamp": {
                    "type": "string", 
                    "description": "timestamp of HealthScoreData."
                }, 
                "is_null": {
                    "type": "boolean", 
                    "description": "This is set if the data is none or zero is none."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ssl_score": {
                    "default": 5.0, 
                    "type": "number", 
                    "description": "Placeholder for description of property ssl_score of obj type HealthScoreData field type str  type number", 
                    "format": "double"
                }, 
                "performance_value": {
                    "default": 100, 
                    "type": "integer", 
                    "description": "Number of performance_value.", 
                    "format": "int32"
                }, 
                "resources_penalty": {
                    "type": "integer", 
                    "description": "Number of resources_penalty.", 
                    "format": "int32"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "resources_score": {
                    "description": "Placeholder for description of property resources_score of obj type HealthScoreData field type str  type object", 
                    "$ref": "#/definitions/HealthScoreResourcesData"
                }, 
                "performance_score": {
                    "description": "Placeholder for description of property performance_score of obj type HealthScoreData field type str  type object", 
                    "$ref": "#/definitions/HealthScorePerformanceData"
                }, 
                "anomaly_score": {
                    "description": "Placeholder for description of property anomaly_score of obj type HealthScoreData field type str  type object", 
                    "$ref": "#/definitions/HealthScoreAnomalyData"
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type HealthScoreData field type str  type number", 
                    "format": "double"
                }, 
                "anomaly_penalty": {
                    "type": "integer", 
                    "description": "Number of anomaly_penalty.", 
                    "format": "int32"
                }, 
                "num_samples": {
                    "type": "integer", 
                    "description": "This keeps the num samples reported during aggregation queries.", 
                    "format": "int32"
                }, 
                "security_penalty": {
                    "type": "integer", 
                    "description": "Number of security_penalty.", 
                    "format": "int32"
                }
            }
        }, 
        "VirtualServicePerformanceScoreData": {
            "required": [
                "oper_state", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "avg_pool_performance_score": {
                    "type": "number", 
                    "description": "Average of all pool performance scores.", 
                    "format": "double"
                }, 
                "pool_performance_scores": {
                    "items": {
                        "$ref": "#/definitions/PoolPerformanceScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property pool_performance_scores of obj type VirtualServicePerformanceScoreData field type str  type object"
                }, 
                "sum_finished_conns": {
                    "type": "number", 
                    "description": "Placeholder for description of property sum_finished_conns of obj type VirtualServicePerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "vs_uptime": {
                    "type": "number", 
                    "description": "Percentage time of last 5mins that the VirtualService has been up.", 
                    "format": "double"
                }, 
                "apdexc": {
                    "type": "number", 
                    "description": "Placeholder for description of property apdexc of obj type VirtualServicePerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "oper_state": {
                    "type": "string", 
                    "description": " Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING, OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING, OPER_FAILED, OPER_UNAVAIL."
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "rum_apdexr": {
                    "type": "number", 
                    "description": "Rum Apdexr when client insights is active.", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "apdexr": {
                    "default": 100.0, 
                    "type": "number", 
                    "description": "Placeholder for description of property apdexr of obj type VirtualServicePerformanceScoreData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "HealthScoreEntity": {
            "required": [
                "entity_uuid", 
                "metrics_entity"
            ], 
            "type": "object", 
            "properties": {
                "metrics_entity": {
                    "type": "string", 
                    "description": " Enum options - VSERVER_METRICS_ENTITY, VM_METRICS_ENTITY, SE_METRICS_ENTITY, CONTROLLER_METRICS_ENTITY, APPLICATION_METRICS_ENTITY, TENANT_METRICS_ENTITY, POOL_METRICS_ENTITY."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }, 
                "entity_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of entity."
                }, 
                "server": {
                    "type": "string", 
                    "description": "server of HealthScoreEntity."
                }
            }
        }, 
        "VirtualServiceResourcesScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "avg_bandwidth_usage": {
                    "type": "number", 
                    "description": "Resources of the virtual service with respect to max_throughput.", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "pool_resources_scores": {
                    "items": {
                        "$ref": "#/definitions/PoolResourcesScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property pool_resources_scores of obj type VirtualServiceResourcesScoreData field type str  type object"
                }, 
                "ha_index": {
                    "type": "number", 
                    "description": "Fraction of service engines available.", 
                    "format": "double"
                }, 
                "max_open_conns_usage": {
                    "type": "number", 
                    "description": "Resources of the virtual service with respect to max_open_conns.", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "serviceengine_resources_scores": {
                    "items": {
                        "$ref": "#/definitions/ServiceEngineResourcesScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property serviceengine_resources_scores of obj type VirtualServiceResourcesScoreData field type str  type object"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "multivip_index": {
                    "type": "number", 
                    "description": "Fraction of VIPs available, given a VirtualService.", 
                    "format": "double"
                }
            }
        }, 
        "MetricsMissingDataInterval": {
            "required": [
                "end", 
                "start"
            ], 
            "type": "object", 
            "properties": {
                "start": {
                    "type": "string", 
                    "description": "start of MetricsMissingDataInterval."
                }, 
                "end": {
                    "type": "string", 
                    "description": "end of MetricsMissingDataInterval."
                }
            }
        }, 
        "PoolResourcesScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type PoolResourcesScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of PoolResourcesScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type PoolResourcesScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type PoolResourcesScore field type str  type object", 
                    "$ref": "#/definitions/PoolResourcesScoreData"
                }
            }
        }, 
        "HealthScoreDataSeries": {
            "required": [
                "header"
            ], 
            "type": "object", 
            "properties": {
                "header": {
                    "description": "Placeholder for description of property header of obj type HealthScoreDataSeries field type str  type object", 
                    "$ref": "#/definitions/HealthScoreHeader"
                }, 
                "data": {
                    "items": {
                        "$ref": "#/definitions/HealthScoreData"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property data of obj type HealthScoreDataSeries field type str  type object"
                }
            }
        }, 
        "PoolAnomalyScoreData": {
            "required": [
                "per_anomalous_l4_metrics", 
                "pool_ref", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "anomalous_l7_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l7_metrics of PoolAnomalyScoreData."
                }, 
                "avg_server_anomaly_score": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_server_anomaly_score of obj type PoolAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "server_anomaly_scores": {
                    "items": {
                        "$ref": "#/definitions/ServerAnomalyScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property server_anomaly_scores of obj type PoolAnomalyScoreData field type str  type object"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }, 
                "per_anomalous_l7_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l7_metrics of obj type PoolAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "per_anomalous_l4_metrics": {
                    "type": "number", 
                    "description": "Placeholder for description of property per_anomalous_l4_metrics of obj type PoolAnomalyScoreData field type str  type number", 
                    "format": "double"
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "anomalous_l4_metrics": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "anomalous_l4_metrics of PoolAnomalyScoreData."
                }
            }
        }, 
        "PoolPerformanceScoreData": {
            "required": [
                "pool_ref", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }, 
                "sum_finished_conns": {
                    "type": "number", 
                    "description": "Placeholder for description of property sum_finished_conns of obj type PoolPerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "apdexc": {
                    "type": "number", 
                    "description": "Placeholder for description of property apdexc of obj type PoolPerformanceScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "oper_state": {
                    "type": "string", 
                    "description": " Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING, OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING, OPER_FAILED, OPER_UNAVAIL."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "apdexr": {
                    "default": 100.0, 
                    "type": "number", 
                    "description": "Placeholder for description of property apdexr of obj type PoolPerformanceScoreData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "ServiceEngineResourcesScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "avg_dynamic_mem_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_dynamic_mem_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_mem_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_mem_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_connection_mem_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_connection_mem_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "avg_packet_buffer_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_packet_buffer_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_disk1_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_disk1_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_persistent_table_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_persistent_table_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_cpu_wait": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_cpu_wait of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "avg_cpu_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_cpu_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "oper_state": {
                    "type": "string", 
                    "description": " Enum options - OPER_UP, OPER_DOWN, OPER_CREATING, OPER_RESOURCES, OPER_INACTIVE, OPER_DISABLED, OPER_UNUSED, OPER_UNKNOWN, OPER_PROCESSING, OPER_INITIALIZING, OPER_ERROR_DISABLED, OPER_AWAIT_MANUAL_PLACEMENT, OPER_UPGRADING, OPER_SE_PROCESSING, OPER_PARTITIONED, OPER_DISABLING, OPER_FAILED, OPER_UNAVAIL."
                }, 
                "avg_shared_memory_usage": {
                    "type": "number", 
                    "description": "Use shared memory usage in computation of SE resource penalty.", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "avg_ssl_session_cache_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_ssl_session_cache_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "pct_syn_cache_usage": {
                    "type": "number", 
                    "description": "Placeholder for description of property pct_syn_cache_usage of obj type ServiceEngineResourcesScoreData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "SslScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "pfs_support_score": {
                    "type": "number", 
                    "description": "Score  Is a PFS cipher suite supported.", 
                    "format": "double"
                }, 
                "weak_signature_algorithm_score": {
                    "type": "number", 
                    "description": "Score  Weak algorithm used for signing the certificate.", 
                    "format": "double"
                }, 
                "cert_chain_verified": {
                    "type": "string", 
                    "description": "Chains for all certificates are verified."
                }, 
                "min_cipher_strength": {
                    "type": "string", 
                    "description": "Strength of the weakest symmetric encryption algorithm."
                }, 
                "earliest_cert_expiry": {
                    "type": "string", 
                    "description": "Earliest certificate expiration time."
                }, 
                "min_ssl_protocol_strength": {
                    "type": "string", 
                    "description": "Weakest SSL protocol supported."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the SSL Config Level."
                }, 
                "disable_client_renegotiation_score": {
                    "default": 5.0, 
                    "type": "number", 
                    "description": "Score  Disable client renegotiation.", 
                    "format": "double"
                }, 
                "value": {
                    "default": 5.0, 
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type SslScoreData field type str  type number", 
                    "format": "double"
                }, 
                "cert_chain_verified_score": {
                    "type": "number", 
                    "description": "Score  Chains for all certificates are verified.", 
                    "format": "double"
                }, 
                "earliest_cert_expiry_score": {
                    "type": "number", 
                    "description": "Score  Earliest certificate expiration time.", 
                    "format": "double"
                }, 
                "min_cipher_strength_score": {
                    "type": "number", 
                    "description": "Score  Strength of the weakest symmetric encryption algorithm.", 
                    "format": "double"
                }, 
                "pfs_support": {
                    "type": "boolean", 
                    "description": "Is a PFS cipher suite supported."
                }, 
                "hsts_enabled": {
                    "type": "boolean", 
                    "description": "HSTS enabled for VS."
                }, 
                "hsts_enabled_score": {
                    "type": "number", 
                    "description": "Score  HSTS enabled for VS.", 
                    "format": "double"
                }, 
                "weakest_enc_algo_score": {
                    "type": "number", 
                    "description": "Score  Weakest algorithm for symmetric encryption.", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the SSL Config Level."
                }, 
                "weakest_enc_algo": {
                    "type": "string", 
                    "description": "Weakest algorithm for symmetric encryption."
                }, 
                "min_ssl_protocol_strength_score": {
                    "type": "number", 
                    "description": "Score  Weakest SSL protocol supported.", 
                    "format": "double"
                }, 
                "disable_client_renegotiation": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Disable client renegotiation."
                }, 
                "weak_signature_algorithm": {
                    "type": "string", 
                    "description": "Weak algorithm used for signing the certificate, amongst all certificates for the VS."
                }, 
                "ssl_enabled": {
                    "type": "boolean", 
                    "description": "Set whether the SSL service is enabled for the VS."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }
            }
        }, 
        "VirtualServiceResourcesScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type VirtualServiceResourcesScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of VirtualServiceResourcesScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type VirtualServiceResourcesScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type VirtualServiceResourcesScore field type str  type object", 
                    "$ref": "#/definitions/VirtualServiceResourcesScoreData"
                }
            }
        }, 
        "PoolResourcesScoreData": {
            "required": [
                "pool_ref", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "avg_uptime": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_uptime of obj type PoolResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VirtualService."
                }, 
                "avg_server_resources_score": {
                    "type": "number", 
                    "description": "Placeholder for description of property avg_server_resources_score of obj type PoolResourcesScoreData field type str  type number", 
                    "format": "double"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "server_resources_scores": {
                    "items": {
                        "$ref": "#/definitions/ServerResourcesScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property server_resources_scores of obj type PoolResourcesScoreData field type str  type object"
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }
            }
        }, 
        "ServerAnomalyScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type ServerAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of ServerAnomalyScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServerAnomalyScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type ServerAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/ServerAnomalyScoreData"
                }
            }
        }, 
        "HealthScoreSecurityData": {
            "type": "object", 
            "properties": {
                "dos_attack_level_data": {
                    "description": "Threat associated with VirtualService DoS infrastructure.", 
                    "$ref": "#/definitions/DosAttackLevelData"
                }, 
                "reason": {
                    "default": "No Security Penalty", 
                    "type": "string", 
                    "description": "Reason for Security Threat Level."
                }, 
                "ssl_score_data": {
                    "description": "Threat associated with VirtualService SSL infrastructure.", 
                    "$ref": "#/definitions/SslScoreData"
                }, 
                "serviceengine_dos_attack_level_data": {
                    "description": "Threat associated with ServiceEngine DoS infrastructure.", 
                    "$ref": "#/definitions/ServiceEngineDosAttackLevelData"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "reason_attr of HealthScoreSecurityData."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type HealthScoreSecurityData field type str  type number", 
                    "format": "double"
                }
            }
        }, 
        "ApplicationAnomalyScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Application."
                }, 
                "virtualservice_anomaly_scores": {
                    "items": {
                        "$ref": "#/definitions/VirtualServiceAnomalyScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property virtualservice_anomaly_scores of obj type ApplicationAnomalyScoreData field type str  type object"
                }
            }
        }, 
        "ServerResourcesScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type ServerResourcesScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of ServerResourcesScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServerResourcesScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type ServerResourcesScore field type str  type object", 
                    "$ref": "#/definitions/ServerResourcesScoreData"
                }
            }
        }, 
        "HealthScoreQueryResponseApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/HealthScoreQueryResponse"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "PoolPerformanceScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type PoolPerformanceScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of PoolPerformanceScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type PoolPerformanceScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type PoolPerformanceScore field type str  type object", 
                    "$ref": "#/definitions/PoolPerformanceScoreData"
                }
            }
        }, 
        "ServiceEngineResourcesScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type ServiceEngineResourcesScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of ServiceEngineResourcesScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServiceEngineResourcesScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type ServiceEngineResourcesScore field type str  type object", 
                    "$ref": "#/definitions/ServiceEngineResourcesScoreData"
                }
            }
        }, 
        "MetricStatistics": {
            "type": "object", 
            "properties": {
                "min": {
                    "type": "number", 
                    "description": "minimum value in time series requested.", 
                    "format": "double"
                }, 
                "trend": {
                    "type": "number", 
                    "description": "slope of the data points across the time series requested. trend = (last_value - avg)/avg.", 
                    "format": "double"
                }, 
                "max": {
                    "type": "number", 
                    "description": "maximum value in time series requested.", 
                    "format": "double"
                }, 
                "sum": {
                    "type": "number", 
                    "description": "summation of all values.", 
                    "format": "double"
                }, 
                "max_ts": {
                    "type": "string", 
                    "description": "timestamp of the minimum value."
                }, 
                "min_ts": {
                    "type": "string", 
                    "description": "timestamp of the minimum value."
                }, 
                "num_samples": {
                    "type": "integer", 
                    "description": "Number of actual data samples. It excludes fake data.", 
                    "format": "int32"
                }, 
                "last_sample": {
                    "type": "number", 
                    "description": "value of the last sample.", 
                    "format": "double"
                }, 
                "mean": {
                    "type": "number", 
                    "description": "arithmetic mean.", 
                    "format": "double"
                }
            }
        }, 
        "ApplicationPerformanceScoreData": {
            "required": [
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "virtualservice_performance_scores": {
                    "items": {
                        "$ref": "#/definitions/VirtualServicePerformanceScore"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property virtualservice_performance_scores of obj type ApplicationPerformanceScoreData field type str  type object"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "Attribute that is dominating the health score."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for the Health Score."
                }, 
                "ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Application."
                }
            }
        }, 
        "ServiceEngineDosAttackLevel": {
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type ServiceEngineDosAttackLevel field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of ServiceEngineDosAttackLevel."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type ServiceEngineDosAttackLevel field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type ServiceEngineDosAttackLevel field type str  type object", 
                    "$ref": "#/definitions/ServiceEngineDosAttackLevelData"
                }
            }
        }, 
        "PoolAnomalyScore": {
            "required": [
                "hs_entity", 
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "hs_entity": {
                    "description": "Placeholder for description of property hs_entity of obj type PoolAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/HealthScoreEntity"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "reason of PoolAnomalyScore."
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type PoolAnomalyScore field type str  type number", 
                    "format": "double"
                }, 
                "score_data": {
                    "description": "Placeholder for description of property score_data of obj type PoolAnomalyScore field type str  type object", 
                    "$ref": "#/definitions/PoolAnomalyScoreData"
                }
            }
        }, 
        "HealthScoreHeader": {
            "type": "object", 
            "properties": {
                "statistics": {
                    "description": "Placeholder for description of property statistics of obj type HealthScoreHeader field type str  type object", 
                    "$ref": "#/definitions/MetricStatistics"
                }, 
                "metrics_min_scale": {
                    "default": 100, 
                    "type": "integer", 
                    "description": "Number of metrics_min_scale.", 
                    "format": "int32"
                }, 
                "name": {
                    "default": "health_score", 
                    "type": "string", 
                    "description": "Health Score metric name."
                }, 
                "contributors": {
                    "items": {
                        "$ref": "#/definitions/HealthScoreTypeContributorData"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property contributors of obj type HealthScoreHeader field type str  type object"
                }, 
                "security_penalty_statistics": {
                    "description": "Placeholder for description of property security_penalty_statistics of obj type HealthScoreHeader field type str  type object", 
                    "$ref": "#/definitions/MetricStatistics"
                }, 
                "anomaly_penalty_statistics": {
                    "description": "Placeholder for description of property anomaly_penalty_statistics of obj type HealthScoreHeader field type str  type object", 
                    "$ref": "#/definitions/MetricStatistics"
                }, 
                "performance_score_statistics": {
                    "description": "Placeholder for description of property performance_score_statistics of obj type HealthScoreHeader field type str  type object", 
                    "$ref": "#/definitions/MetricStatistics"
                }, 
                "server": {
                    "type": "string", 
                    "description": "server of HealthScoreHeader."
                }, 
                "resources_penalty_statistics": {
                    "description": "Placeholder for description of property resources_penalty_statistics of obj type HealthScoreHeader field type str  type object", 
                    "$ref": "#/definitions/MetricStatistics"
                }, 
                "missing_intervals": {
                    "items": {
                        "$ref": "#/definitions/MetricsMissingDataInterval"
                    }, 
                    "type": "array", 
                    "description": "Missing data intervals. data in these intervals are not used for stats calculation."
                }, 
                "entity_uuid": {
                    "type": "string", 
                    "description": "uuid of the entity type."
                }, 
                "units": {
                    "default": "METRIC_COUNT", 
                    "type": "string", 
                    "description": "units of the column data. Enum options - METRIC_COUNT, BITS_PER_SECOND, MILLISECONDS, SECONDS, PER_SECOND, BYTES, PERCENT, KILO_BYTES, KILO_BYTES_PER_SECOND, BYTES_PER_SECOND, KILO_BITS_PER_SECOND, GIGA_BYTES, MEGA_BYTES, NORMALIZED, STRING, SEC, MIN, DAYS, KB, MB, GB, MBPS, GHZ, RATIO, WORD, MICROSECONDS, HEALTH."
                }, 
                "hs_type": {
                    "type": "string", 
                    "description": " Enum options - HEALTH_SCORE, HEALTH_PERFORMANCE_SCORE, HEALTH_ANOMALY_SCORE, HEALTH_RESOURCES_SCORE, HEALTH_SECURITY_THREAT_LEVEL."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }, 
                "serviceengine_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }
            }
        }, 
        "HealthScoreAnomalyData": {
            "required": [
                "reason", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "controller_anomaly": {
                    "description": "Placeholder for description of property controller_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/ControllerAnomalyScoreData"
                }, 
                "reason_attr": {
                    "type": "string", 
                    "description": "reason_attr of HealthScoreAnomalyData."
                }, 
                "serviceengine_anomaly": {
                    "description": "Placeholder for description of property serviceengine_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/ServiceEngineAnomalyScoreData"
                }, 
                "value": {
                    "type": "number", 
                    "description": "Placeholder for description of property value of obj type HealthScoreAnomalyData field type str  type number", 
                    "format": "double"
                }, 
                "application_anomaly": {
                    "description": "Placeholder for description of property application_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/ApplicationAnomalyScoreData"
                }, 
                "pool_anomaly": {
                    "description": "Placeholder for description of property pool_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/PoolAnomalyScoreData"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for Anomaly Score."
                }, 
                "server_anomaly": {
                    "description": "Placeholder for description of property server_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/ServerAnomalyScoreData"
                }, 
                "virtualservice_anomaly": {
                    "description": "Placeholder for description of property virtualservice_anomaly of obj type HealthScoreAnomalyData field type str  type object", 
                    "$ref": "#/definitions/VirtualServiceAnomalyScoreData"
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}