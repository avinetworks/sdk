{
    "swagger": "2.0",
    "info": {
        "version": "21.1.1",
        "title": "Avi DynamicDnsRecord Object API",
        "contact": {
            "name": "Avi Networks Inc.",
            "url": "https://avinetworks.com/contact-us",
            "email": "support@avinetworks.com"
        },
        "description": "CLI\n```\n- show dynamicdnsrecord <key>\n```\n"
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "basic authentication"
        }
    },
    "basePath": "/api",
    "paths": {
        "/dynamicdnsrecord": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "refers_to",
                        "in": "query",
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "referred_by",
                        "in": "query",
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecordApiResponse"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "DynamicDnsRecord object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/dynamicdnsrecord/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "DynamicDnsRecord object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "DynamicDnsRecord object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DynamicDnsRecord"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "object deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "DnsAAAARdata": {
            "type": "object",
            "required": [
                "ip6_address"
            ],
            "properties": {
                "ip6_address": {
                    "description": "IPv6 address for FQDN. Field introduced in 18.1.1.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "DnsARdata": {
            "type": "object",
            "required": [
                "ip_address"
            ],
            "properties": {
                "ip_address": {
                    "description": "IP address for FQDN.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "DnsCnameRdata": {
            "type": "object",
            "required": [
                "cname"
            ],
            "properties": {
                "cname": {
                    "description": "Canonical name.",
                    "type": "string"
                }
            }
        },
        "DnsMxRdata": {
            "type": "object",
            "required": [
                "host",
                "priority"
            ],
            "properties": {
                "host": {
                    "description": "Fully qualified domain name of a mailserver . The host name maps directly to one or more address records in the DNS table, and must not point to any CNAME records (RFC 2181). Field introduced in 18.2.9, 20.1.1.",
                    "type": "string"
                },
                "priority": {
                    "description": "The priority field identifies which mail server should be preferred. Allowed values are 0-65535. Field introduced in 18.2.9, 20.1.1.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DnsNsRdata": {
            "type": "object",
            "required": [
                "nsname"
            ],
            "properties": {
                "ip6_address": {
                    "description": "IPv6 address for Name Server. Field introduced in 18.1.1.",
                    "$ref": "#/definitions/IpAddr"
                },
                "ip_address": {
                    "description": "IP address for Name Server. Field introduced in 17.1.1.",
                    "$ref": "#/definitions/IpAddr"
                },
                "nsname": {
                    "description": "Name Server name. Field introduced in 17.1.1.",
                    "type": "string"
                }
            }
        },
        "DnsSrvRdata": {
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "port": {
                    "description": "Service port. Allowed values are 0-65535.",
                    "type": "integer",
                    "format": "int32"
                },
                "priority": {
                    "description": "Priority of the target hosting the service, low value implies higher priority for this service record. Allowed values are 0-65535.",
                    "type": "integer",
                    "format": "int32"
                },
                "target": {
                    "description": "Canonical hostname, of the machine hosting the service, with no trailing period. 'default.host' is valid but not 'default.host.'.",
                    "type": "string",
                    "default": "default.host"
                },
                "weight": {
                    "description": "Relative weight for service records with same priority, high value implies higher preference for this service record. Allowed values are 0-65535.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DnsTxtRdata": {
            "type": "object",
            "required": [
                "text_str"
            ],
            "properties": {
                "text_str": {
                    "description": "Text data associated with the FQDN. Field introduced in 18.2.9, 20.1.1.",
                    "type": "string"
                }
            }
        },
        "DynamicDnsRecord": {
            "type": "object",
            "properties": {
                "_last_modified": {
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS).",
                    "readOnly": true,
                    "type": "string"
                },
                "algorithm": {
                    "description": "Specifies the algorithm to pick the IP address(es) to be returned,when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is round-robin. Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH. Field introduced in 20.1.3.",
                    "type": "string",
                    "default": "DNS_RECORD_RESPONSE_ROUND_ROBIN"
                },
                "cname": {
                    "description": "Canonical name in CNAME record. Field introduced in 20.1.3.",
                    "$ref": "#/definitions/DnsCnameRdata"
                },
                "delegated": {
                    "description": "Configured FQDNs are delegated domains (i.e. they represent a zone cut). Field introduced in 20.1.3.",
                    "type": "boolean"
                },
                "description": {
                    "description": "Details of DNS record. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "dns_vs_uuid": {
                    "description": "UUID of the DNS VS. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "fqdn": {
                    "description": "Fully Qualified Domain Name. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "ip6_address": {
                    "description": "IPv6 address in AAAA record. Field introduced in 20.1.3. Maximum of 4 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsAAAARdata"
                    }
                },
                "ip_address": {
                    "description": "IP address in A record. Field introduced in 20.1.3. Maximum of 4 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsARdata"
                    }
                },
                "metadata": {
                    "description": "Internal metadata for the DNS record. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "mx_records": {
                    "description": "MX record. Field introduced in 20.1.3. Maximum of 4 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsMxRdata"
                    }
                },
                "name": {
                    "description": "DynamicDnsRecord name, needed for a top level uuid protobuf, for display in shell. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "ns": {
                    "description": "Name Server information in NS record. Field introduced in 20.1.3. Maximum of 13 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsNsRdata"
                    }
                },
                "num_records_in_response": {
                    "description": "Specifies the number of records returned by the DNS service.Enter 0 to return all records. Default is 0. Allowed values are 0-20. Special values are 0- 'Return all records'. Field introduced in 20.1.3.",
                    "type": "integer",
                    "format": "int32"
                },
                "service_locators": {
                    "description": "Service locator info in SRV record. Field introduced in 20.1.3. Maximum of 4 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsSrvRdata"
                    }
                },
                "tenant_ref": {
                    "description": "tenant_uuid from Dns VS's tenant_uuid. It is a reference to an object of type Tenant. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "ttl": {
                    "description": "Time To Live for this DNS record. Field introduced in 20.1.3.",
                    "type": "integer",
                    "format": "int32"
                },
                "txt_records": {
                    "description": "Text record. Field introduced in 20.1.3. Maximum of 4 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsTxtRdata"
                    }
                },
                "type": {
                    "description": "DNS record type. Enum options - DNS_RECORD_OTHER, DNS_RECORD_A, DNS_RECORD_NS, DNS_RECORD_CNAME, DNS_RECORD_SOA, DNS_RECORD_PTR, DNS_RECORD_HINFO, DNS_RECORD_MX, DNS_RECORD_TXT, DNS_RECORD_RP, DNS_RECORD_DNSKEY, DNS_RECORD_AAAA, DNS_RECORD_SRV, DNS_RECORD_OPT, DNS_RECORD_RRSIG, DNS_RECORD_AXFR, DNS_RECORD_ANY. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "readOnly": true,
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID of the dns record. Field introduced in 20.1.3.",
                    "type": "string"
                },
                "wildcard_match": {
                    "description": "Enable wild-card match of fqdn  if an exact match is not found in the DNS table, the longest match is chosen by wild-carding the fqdn in the DNS request. Default is false. Field introduced in 20.1.3.",
                    "type": "boolean"
                }
            }
        },
        "DynamicDnsRecordApiResponse": {
            "type": "object",
            "required": [
                "count",
                "results"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicDnsRecord"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "IpAddr": {
            "type": "object",
            "required": [
                "addr",
                "type"
            ],
            "properties": {
                "addr": {
                    "description": "IP address.",
                    "type": "string"
                },
                "type": {
                    "description": " Enum options - V4, DNS, V6.",
                    "type": "string"
                }
            }
        }
    }
}