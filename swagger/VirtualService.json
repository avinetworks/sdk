{
    "info": {
        "title": "Avi VirtualService Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure virtualservice <key>\n- show virtualservice <key>\n- scaleout virtualservice <key>\n- scalein virtualservice <key>\n- migrate virtualservice <key>\n- switchover virtualservice <key>\n- clear virtualservice <key>\n- resync virtualservice <key>\n- rotatekeys virtualservice <key>\n- apicplacement virtualservice <key>\n- retryplacement virtualservice <key>\n```\n\nExamples\n- **virtualservice_example_1**: To create a basic virtualservice object that has both http and https enabled\n  ```json\n    {u'services': [{u'port': 80}, {u'enable_ssl': True, u'port': 443}], u'vip': [{u'ip_address': {u'type': u'V4', u'addr': u'10.10.2.28'}}], u'name': u'production_vs'}\n  ```\n\n- **virtualservice_example_ipamdns_infoblox**: Create a basic virtualservice object that requires IP to be auto-allocated and DNS record to be registered. @Assumptions: - This example assumes the virtualservice being created is part of a Cloud with Infoblox as IPAM & DNS provider - On Infoblox server - \"10.10.10.0/24\" is configured for VIPs - \"prod.corp\" is configured as zone\n  ```json\n    {u'vip': [{u'subnet': {u'ip_addr': {u'type': u'V4', u'addr': u'10.10.10.0'}, u'mask': 24}, u'auto_allocate_ip': True}], u'name': u'production_vs', u'fqdn': u'production_vs.prod.corp'}\n  ```\n\n- **virtualservice_example_ipamdns_internal**: Create a basic virtualservice object that requires IP to be auto-allocated and DNS record to be registered. @Assumptions: - This example assumes the virtualservice being created is part of a Cloud with Internal IPAM & DNS provider - On Avi - Network object containing free IPs from \"10.10.10.0/24\" is already created - \"prod.corp\" is configured as a domain name in DNS provider config in Avi\n  ```json\n    {u'vip': [{u'subnet': {u'ip_addr': {u'type': u'V4', u'addr': u'10.10.10.0'}, u'mask': 24}, u'auto_allocate_ip': True, u'network_ref': u'/api/network/network-042975ea-376d-4e59-b8da-1b299be51eb1'}], u'name': u'production_vs', u'fqdn': u'production_vs.prod.corp'}\n  ```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/virtualservice/{uuid}/gslbservicedetail/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/gslbserviceinternal/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/httpstats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/networksecuritypolicy/detail/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/candidatesehostlist/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/clientsummary/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/gslbservicehmonstat/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/tcpstat/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/geolocationinfo/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/scalein": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VsScaleinParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VsScaleinParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/runtime/detail/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/keyval/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/udpstat/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/apicplacement": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ApicVSPlacementReq", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ApicVSPlacementReq"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/authstats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/networksecuritypolicystats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/l4policysetstats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/runtime/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/gslbsiteinternal/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/sescaleoutstatus/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/rotatekeys": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "empty", 
                        "name": "body", 
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            }, 
                            "type": "object"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/placement/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/dnspolicystats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/dnstable/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/runtime/internal/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/clear": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "empty", 
                        "name": "body", 
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            }, 
                            "type": "object"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/userdefineddatascriptcounters/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/retryplacement": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "RetryPlacementParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/RetryPlacementParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/switchover": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VsSwitchoverParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VsSwitchoverParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/scaleout": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VsScaleoutParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VsScaleoutParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/geodbinternal/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/resync": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VsResyncParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VsResyncParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/client/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/cltracksummary/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/httppolicysetstats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/dosstat/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VirtualServiceApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud using its uuid. Eg. cloud_uuid=cloud-xyz.", 
                        "name": "cloud_uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to get objects that belongs to a specific cloud usings its name. This uses cloud name rather than uuid. Eg. cloud_ref.name=Default-Cloud.", 
                        "name": "cloud_ref.name"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/connections/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/cltrack/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VirtualService object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VirtualService"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/traffic_clone_stats/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/keyvalsummary/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/httppolicyset/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/virtualservice/{uuid}/migrate": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "VsMigrateParams", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/VsMigrateParams"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "Lif": {
            "type": "object", 
            "properties": {
                "subnet": {
                    "type": "string", 
                    "description": "subnet of Lif."
                }, 
                "lif": {
                    "type": "string", 
                    "description": "lif of Lif."
                }, 
                "cifs": {
                    "items": {
                        "$ref": "#/definitions/Cif"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property cifs of obj type Lif field type str  type object"
                }, 
                "lif_label": {
                    "type": "string", 
                    "description": "lif_label of Lif."
                }
            }
        }, 
        "ServicePoolSelector": {
            "required": [
                "service_port"
            ], 
            "type": "object", 
            "properties": {
                "service_pool_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Pool."
                }, 
                "service_port": {
                    "type": "integer", 
                    "description": "Pool based destination port. Allowed values are 1-65535.", 
                    "format": "int32"
                }, 
                "service_pool_group_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type PoolGroup."
                }, 
                "service_port_range_end": {
                    "type": "integer", 
                    "description": "The end of the Service port number range. Allowed values are 1-65535. Special values are 0- 'single port'. Field introduced in 17.2.4.", 
                    "format": "int32"
                }, 
                "service_protocol": {
                    "type": "string", 
                    "description": "Destination protocol to match for the pool selection. If not specified, it will match any protocol. Enum options - PROTOCOL_TYPE_TCP_PROXY, PROTOCOL_TYPE_TCP_FAST_PATH, PROTOCOL_TYPE_UDP_FAST_PATH, PROTOCOL_TYPE_UDP_PROXY."
                }
            }
        }, 
        "MatchReplacePair": {
            "required": [
                "match_string"
            ], 
            "type": "object", 
            "properties": {
                "match_string": {
                    "type": "string", 
                    "description": "String to be matched."
                }, 
                "replacement_string": {
                    "description": "Replacement string.", 
                    "$ref": "#/definitions/ReplaceStringVar"
                }
            }
        }, 
        "IpAddrMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "group_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "UUID of IP address group(s). It is a reference to an object of type IpAddrGroup."
                }, 
                "prefixes": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "IP address prefix(es)."
                }, 
                "ranges": {
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }, 
                    "type": "array", 
                    "description": "IP address range(s)."
                }, 
                "addrs": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "IP address(es)."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for IP address matching the HTTP request. Enum options - IS_IN, IS_NOT_IN."
                }
            }
        }, 
        "RateLimiterAction": {
            "type": "object", 
            "properties": {
                "redirect": {
                    "description": "Parameters for HTTP Redirect rate limit action.", 
                    "$ref": "#/definitions/HTTPRedirectAction"
                }, 
                "status_code": {
                    "default": "HTTP_LOCAL_RESPONSE_STATUS_CODE_429", 
                    "type": "string", 
                    "description": "HTTP status code for Local Response rate limit action. Enum options - HTTP_LOCAL_RESPONSE_STATUS_CODE_200, HTTP_LOCAL_RESPONSE_STATUS_CODE_403, HTTP_LOCAL_RESPONSE_STATUS_CODE_404, HTTP_LOCAL_RESPONSE_STATUS_CODE_429."
                }, 
                "type": {
                    "default": "RL_ACTION_NONE", 
                    "type": "string", 
                    "description": "Type of action to be enforced upon hitting the rate limit. Enum options - RL_ACTION_NONE, RL_ACTION_DROP_CONN, RL_ACTION_RESET_CONN, RL_ACTION_CLOSE_CONN, RL_ACTION_LOCAL_RSP, RL_ACTION_REDIRECT."
                }, 
                "file": {
                    "description": "File to be used for HTTP Local response rate limit action.", 
                    "$ref": "#/definitions/HTTPLocalFile"
                }
            }
        }, 
        "HTTPClientAuthenticationParams": {
            "type": "object", 
            "properties": {
                "realm": {
                    "type": "string", 
                    "description": "Basic authentication realm to present to a user along with the prompt for credentials."
                }, 
                "auth_profile_ref": {
                    "type": "string", 
                    "description": "Auth Profile to use for validating users. It is a reference to an object of type AuthProfile."
                }, 
                "type": {
                    "type": "string", 
                    "description": "type of client authentication. Enum options - HTTP_BASIC_AUTH."
                }, 
                "request_uri_path": {
                    "description": "Rrequest URI path when the authentication applies.", 
                    "$ref": "#/definitions/StringMatch"
                }
            }
        }, 
        "DnsAAAARdata": {
            "required": [
                "ip6_address"
            ], 
            "type": "object", 
            "properties": {
                "ip6_address": {
                    "description": "IPv6 address for FQDN. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "ClientInsightsSampling": {
            "type": "object", 
            "properties": {
                "skip_uris": {
                    "description": "URL patterns to avoid when inserting RUM script.", 
                    "$ref": "#/definitions/StringMatch"
                }, 
                "client_ip": {
                    "description": "Client IP addresses to check when inserting RUM script.", 
                    "$ref": "#/definitions/IpAddrMatch"
                }, 
                "sample_uris": {
                    "description": "URL patterns to check when inserting RUM script.", 
                    "$ref": "#/definitions/StringMatch"
                }
            }
        }, 
        "DnsNsRdata": {
            "required": [
                "nsname"
            ], 
            "type": "object", 
            "properties": {
                "ip6_address": {
                    "description": "IPv6 address for Name Server. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "ip_address": {
                    "description": "IP address for Name Server. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "nsname": {
                    "type": "string", 
                    "description": "Name Server name. Field introduced in 17.1.1."
                }
            }
        }, 
        "DnsPolicies": {
            "required": [
                "dns_policy_ref", 
                "index"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the dns policy. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "dns_policy_ref": {
                    "type": "string", 
                    "description": "UUID of the dns policy. It is a reference to an object of type DnsPolicy. Field introduced in 17.1.1."
                }
            }
        }, 
        "MetricsRealTimeUpdate": {
            "required": [
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "duration": {
                    "default": 30, 
                    "type": "integer", 
                    "description": "Real time metrics collection duration in minutes. 0 for infinite. Special values are 0 - 'infinite'.", 
                    "format": "int32"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Enables real time metrics collection.  When disabled, 6 hour view is the most granular the system will track."
                }
            }
        }, 
        "AuthenticationPolicy": {
            "type": "object", 
            "properties": {
                "single_signon_url": {
                    "type": "string", 
                    "description": "Single Signon URL to be programmed on the IDP. Field introduced in 18.2.1."
                }, 
                "entity_id": {
                    "type": "string", 
                    "description": "Globally unique entityID for this node. Entity ID on the IDP should match this. Field introduced in 18.2.1."
                }, 
                "key": {
                    "items": {
                        "$ref": "#/definitions/HttpCookiePersistenceKey"
                    }, 
                    "type": "array", 
                    "description": "Key to generate the cookie. Field introduced in 18.2.1."
                }, 
                "sp_metadata": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "SAML SP metadata. Field introduced in 18.2.1."
                }, 
                "auth_profile_ref": {
                    "type": "string", 
                    "description": "Auth Profile to use for validating users. It is a reference to an object of type AuthProfile. Field introduced in 18.2.1."
                }, 
                "cookie_name": {
                    "type": "string", 
                    "description": "HTTP cookie name for authenticated session. Field introduced in 18.2.1."
                }, 
                "cookie_timeout": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Cookie timeout in minutes. Allowed values are 1-1440. Field introduced in 18.2.1.", 
                    "format": "int32"
                }
            }
        }, 
        "Cif": {
            "type": "object", 
            "properties": {
                "adapter": {
                    "type": "string", 
                    "description": "adapter of Cif."
                }, 
                "mac_address": {
                    "type": "string", 
                    "description": "mac_address of Cif."
                }, 
                "se_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of se."
                }, 
                "resources": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "resources of Cif."
                }, 
                "cif": {
                    "type": "string", 
                    "description": "cif of Cif."
                }
            }
        }, 
        "HTTPRedirectAction": {
            "required": [
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "host": {
                    "description": "Host config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "protocol": {
                    "type": "string", 
                    "description": "Protocol type. Enum options - HTTP, HTTPS."
                }, 
                "path": {
                    "description": "Path config.", 
                    "$ref": "#/definitions/URIParam"
                }, 
                "keep_query": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Keep or drop the query of the incoming request URI in the redirected URI."
                }, 
                "status_code": {
                    "default": "HTTP_REDIRECT_STATUS_CODE_302", 
                    "type": "string", 
                    "description": "HTTP redirect status code. Enum options - HTTP_REDIRECT_STATUS_CODE_301, HTTP_REDIRECT_STATUS_CODE_302, HTTP_REDIRECT_STATUS_CODE_307."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port to which redirect the request. Allowed values are 1-65535.", 
                    "format": "int32"
                }
            }
        }, 
        "RetryPlacementParams": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "all_east_west": {
                    "type": "boolean", 
                    "description": "Retry placement operations for all East-West services. Field introduced in 17.1.6,17.2.2."
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": "Indicates the vip_id that needs placement retrial. Field introduced in 17.1.2."
                }
            }
        }, 
        "ConnectionClearFilter": {
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "type": "string", 
                    "description": "IP address in dotted decimal notation."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port number.", 
                    "format": "int32"
                }
            }
        }, 
        "Service": {
            "required": [
                "port"
            ], 
            "type": "object", 
            "properties": {
                "enable_ssl": {
                    "type": "boolean", 
                    "description": "Enable SSL termination and offload for traffic from clients."
                }, 
                "override_application_profile_ref": {
                    "type": "string", 
                    "description": "Enable application layer specific features for the this specific service. It is a reference to an object of type ApplicationProfile. Field introduced in 17.2.4."
                }, 
                "port_range_end": {
                    "type": "integer", 
                    "description": "The end of the Virtual Service's port number range. Allowed values are 1-65535. Special values are 0- 'single port'.", 
                    "format": "int32"
                }, 
                "port": {
                    "type": "integer", 
                    "description": "The Virtual Service's port number. Allowed values are 1-65535.", 
                    "format": "int32"
                }, 
                "override_network_profile_ref": {
                    "type": "string", 
                    "description": "Override the network profile for this specific service port. It is a reference to an object of type NetworkProfile."
                }
            }
        }, 
        "RateProfile": {
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "description": "Maximum number of connections or requests or packets. Allowed values are 1-2500. Special values are 0- 'unlimited'.", 
                    "format": "int32"
                }, 
                "http_header": {
                    "type": "string", 
                    "description": "HTTP header name. Field introduced in 17.1.1."
                }, 
                "http_cookie": {
                    "type": "string", 
                    "description": "HTTP cookie name. Field introduced in 17.1.1."
                }, 
                "explicit_tracking": {
                    "type": "boolean", 
                    "description": "Explicitly tracks an attacker across rate periods."
                }, 
                "period": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Time value in seconds to enforce rate count. Allowed values are 1-300.", 
                    "format": "int32"
                }, 
                "action": {
                    "description": "Action to perform upon rate limiting.", 
                    "$ref": "#/definitions/RateLimiterAction"
                }, 
                "burst_sz": {
                    "type": "integer", 
                    "description": "Maximum number of connections or requests or packets to be let through instantaneously. Allowed values are 10-2500. Special values are 0- 'automatic'.", 
                    "format": "int32"
                }, 
                "fine_grain": {
                    "type": "boolean", 
                    "description": "Enable fine granularity."
                }
            }
        }, 
        "VSDataScripts": {
            "required": [
                "index", 
                "vs_datascript_set_ref"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the virtual service datascript collection.", 
                    "format": "int32"
                }, 
                "vs_datascript_set_ref": {
                    "type": "string", 
                    "description": "UUID of the virtual service datascript collection. It is a reference to an object of type VSDataScriptSet."
                }
            }
        }, 
        "IPNetworkSubnet": {
            "type": "object", 
            "properties": {
                "subnet_uuid": {
                    "type": "string", 
                    "description": "Subnet UUID or Name or Prefix for VirtualService IP allocation with AWS or OpenStack as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed."
                }, 
                "subnet": {
                    "description": "Subnet for VirtualService IP allocation with Vantage or Infoblox as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "subnet6_uuid": {
                    "type": "string", 
                    "description": "Subnet UUID or Name or Prefix for VirtualService IPv6 allocation with AWS or OpenStack as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed. Field introduced in 18.1.1."
                }, 
                "subnet6": {
                    "description": "Subnet for VirtualService IPv6 allocation with Vantage or Infoblox as the IPAM provider. Only one of subnet or subnet_uuid configuration is allowed. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "network_ref": {
                    "type": "string", 
                    "description": "Network for VirtualService IP allocation with Vantage as the IPAM provider. Network should be created before this is configured. It is a reference to an object of type Network."
                }
            }
        }, 
        "SSOPolicy": {
            "type": "object", 
            "properties": {
                "authentication_policy": {
                    "description": "Authentication Policy Settings. Field introduced in 18.2.1.", 
                    "$ref": "#/definitions/AuthenticationPolicy"
                }
            }
        }, 
        "FullClientLogs": {
            "required": [
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "duration": {
                    "default": 30, 
                    "type": "integer", 
                    "description": "How long should the system capture all logs, measured in minutes. Set to 0 for infinite. Special values are 0 - 'infinite'.", 
                    "format": "int32"
                }, 
                "all_headers": {
                    "type": "boolean", 
                    "description": "[DEPRECATED] Log all headers. Please use the all_headers flag in AnalyticsPolicy. Field deprecated in 18.1.4, 18.2.1."
                }, 
                "throttle": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3.", 
                    "format": "int32"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Capture all client logs including connections and requests.  When disabled, only errors will be logged."
                }
            }
        }, 
        "VsResyncParams": {
            "type": "object", 
            "properties": {
                "se_ref": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }
            }
        }, 
        "ClientLogFilter": {
            "required": [
                "enabled", 
                "index", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Number of index.", 
                    "format": "int32"
                }, 
                "client_ip": {
                    "description": "Placeholder for description of property client_ip of obj type ClientLogFilter field type str  type object", 
                    "$ref": "#/definitions/IpAddrMatch"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "duration": {
                    "default": 30, 
                    "type": "integer", 
                    "description": " Special values are 0 - 'infinite'.", 
                    "format": "int32"
                }, 
                "all_headers": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property all_headers of obj type ClientLogFilter field type str  type boolean"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property enabled of obj type ClientLogFilter field type str  type boolean"
                }, 
                "uri": {
                    "description": "Placeholder for description of property uri of obj type ClientLogFilter field type str  type object", 
                    "$ref": "#/definitions/StringMatch"
                }
            }
        }, 
        "APICNetworkRel": {
            "type": "object", 
            "properties": {
                "connector": {
                    "type": "string", 
                    "description": "connector of APICNetworkRel."
                }, 
                "rel_key": {
                    "type": "string", 
                    "description": "rel_key of APICNetworkRel."
                }, 
                "target_network": {
                    "type": "string", 
                    "description": "target_network of APICNetworkRel."
                }
            }
        }, 
        "DiscoveredNetwork": {
            "required": [
                "network_ref"
            ], 
            "type": "object", 
            "properties": {
                "subnet": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "Discovered subnet for this IP."
                }, 
                "subnet6": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "Discovered IPv6 subnet for this IP. Field introduced in 18.1.1."
                }, 
                "network_ref": {
                    "type": "string", 
                    "description": "Discovered network for this IP. It is a reference to an object of type Network."
                }
            }
        }, 
        "IpAddrRange": {
            "required": [
                "begin", 
                "end"
            ], 
            "type": "object", 
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "end": {
                    "description": "Ending IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "VirtualService": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "client_auth": {
                    "description": "HTTP authentication configuration for protected resources.", 
                    "$ref": "#/definitions/HTTPClientAuthenticationParams"
                }, 
                "port_uuid": {
                    "type": "string", 
                    "description": "(internal-use) Network port assigned to the Virtual Service IP address. Field deprecated in 17.1.1."
                }, 
                "availability_zone": {
                    "type": "string", 
                    "description": "Availability-zone to place the Virtual Service. Field deprecated in 17.1.1."
                }, 
                "error_page_profile_ref": {
                    "type": "string", 
                    "description": "Error Page Profile to be used for this virtualservice.This profile is used to send the custom error page to the client generated by the proxy. It is a reference to an object of type ErrorPageProfile. Field introduced in 17.2.4."
                }, 
                "subnet_uuid": {
                    "type": "string", 
                    "description": "It represents subnet for the Virtual Service IP address allocation when auto_allocate_ip is True.It is only applicable in OpenStack or AWS cloud. This field is required if auto_allocate_ip is True. Field deprecated in 17.1.1."
                }, 
                "delay_fairness": {
                    "type": "boolean", 
                    "description": "Select the algorithm for QoS fairness.  This determines how multiple Virtual Services sharing the same Service Engines will prioritize traffic over a congested network."
                }, 
                "vip": {
                    "items": {
                        "$ref": "#/definitions/Vip"
                    }, 
                    "type": "array", 
                    "description": "List of Virtual Service IPs. While creating a 'Shared VS',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1."
                }, 
                "static_dns_records": {
                    "items": {
                        "$ref": "#/definitions/DnsRecord"
                    }, 
                    "type": "array", 
                    "description": "List of static DNS records applied to this Virtual Service. These are static entries and no health monitoring is performed against the IP addresses."
                }, 
                "enable_rhi_snat": {
                    "type": "boolean", 
                    "description": "Enable Route Health Injection for Source NAT'ted floating IP Address using the BGP Config in the vrf context."
                }, 
                "dns_policies": {
                    "items": {
                        "$ref": "#/definitions/DnsPolicies"
                    }, 
                    "type": "array", 
                    "description": "DNS Policies applied on the dns traffic of the Virtual Service. Field introduced in 17.1.1."
                }, 
                "sideband_profile": {
                    "description": "Sideband configuration to be used for this virtualservice.It can be used for sending traffic to sideband VIPs for external inspection etc.", 
                    "$ref": "#/definitions/SidebandProfile"
                }, 
                "requests_rate_limit": {
                    "description": "Rate limit the incoming requests to this virtual service.", 
                    "$ref": "#/definitions/RateProfile"
                }, 
                "analytics_profile_ref": {
                    "type": "string", 
                    "description": "Specifies settings related to analytics. It is a reference to an object of type AnalyticsProfile."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "UUID of the VirtualService."
                }, 
                "ipam_network_subnet": {
                    "description": "Subnet and/or Network for allocating VirtualService IP by IPAM Provider module. Field deprecated in 17.1.1.", 
                    "$ref": "#/definitions/IPNetworkSubnet"
                }, 
                "server_network_profile_ref": {
                    "type": "string", 
                    "description": "Determines the network settings profile for the server side of TCP proxied connections.  Leave blank to use the same settings as the client to VS side of the connection. It is a reference to an object of type NetworkProfile."
                }, 
                "ssl_profile_ref": {
                    "type": "string", 
                    "description": "Determines the set of SSL versions and ciphers to accept for SSL/TLS terminated connections. It is a reference to an object of type SSLProfile."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Creator name."
                }, 
                "discovered_network_ref": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "(internal-use) Discovered networks providing reachability for client facing Virtual Service IP. This field is deprecated. It is a reference to an object of type Network. Field deprecated in 17.1.1."
                }, 
                "max_cps_per_client": {
                    "type": "integer", 
                    "description": "Maximum connections per second per client IP. Allowed values are 10-1000. Special values are 0- 'unlimited'.", 
                    "format": "int32"
                }, 
                "traffic_enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Knob to enable the Virtual Service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to True. Field introduced in 17.2.8."
                }, 
                "ssl_sess_cache_avg_size": {
                    "default": 1024, 
                    "type": "integer", 
                    "description": "Expected number of SSL session cache entries (may be exceeded). Allowed values are 1024-16383.", 
                    "format": "int32"
                }, 
                "flow_dist": {
                    "default": "LOAD_AWARE", 
                    "type": "string", 
                    "description": "Criteria for flow distribution among SEs. Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT."
                }, 
                "l4_policies": {
                    "items": {
                        "$ref": "#/definitions/L4Policies"
                    }, 
                    "type": "array", 
                    "description": "L4 Policies applied to the data traffic of the Virtual Service. Field introduced in 17.2.7."
                }, 
                "http_policies": {
                    "items": {
                        "$ref": "#/definitions/HTTPPolicies"
                    }, 
                    "type": "array", 
                    "description": "HTTP Policies applied on the data traffic of the Virtual Service."
                }, 
                "application_profile_ref": {
                    "type": "string", 
                    "description": "Enable application layer specific features for the Virtual Service. It is a reference to an object of type ApplicationProfile."
                }, 
                "microservice_ref": {
                    "type": "string", 
                    "description": "Microservice representing the virtual service. It is a reference to an object of type MicroService."
                }, 
                "use_vip_as_snat": {
                    "type": "boolean", 
                    "description": "Use the Virtual IP as the SNAT IP for health monitoring and sending traffic to the backend servers instead of the Service Engine interface IP. The caveat of enabling this option is that the VirtualService cannot be configued in an Active-Active HA mode. DNS based Multi VIP solution has to be used for HA & Non-disruptive Upgrade purposes. Field introduced in 17.1.9,17.2.3."
                }, 
                "ip_address": {
                    "description": "IP Address of the Virtual Service. Field deprecated in 17.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "azure_availability_set": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "(internal-use)Applicable for Azure only. Azure Availability set to which this VS is associated. Internally set by the cloud connector. Field introduced in 17.2.12, 18.1.2."
                }, 
                "pool_group_ref": {
                    "type": "string", 
                    "description": "The pool group is an object that contains pools. It is a reference to an object of type PoolGroup."
                }, 
                "east_west_placement": {
                    "type": "boolean", 
                    "description": "Force placement on all SE's in service group (Mesos mode only)."
                }, 
                "floating_subnet_uuid": {
                    "type": "string", 
                    "description": "If auto_allocate_floating_ip is True and more than one floating-ip subnets exist, then the subnet for the floating IP address allocation. This field is applicable only if the VirtualService belongs to an OpenStack or AWS cloud. In OpenStack or AWS cloud it is required when auto_allocate_floating_ip is selected. Field deprecated in 17.1.1."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name for the Virtual Service."
                }, 
                "service_pool_select": {
                    "items": {
                        "$ref": "#/definitions/ServicePoolSelector"
                    }, 
                    "type": "array", 
                    "description": "Select pool based on destination port."
                }, 
                "close_client_conn_on_config_update": {
                    "type": "boolean", 
                    "description": "close client connection on vs config update. Field introduced in 17.2.4."
                }, 
                "type": {
                    "default": "VS_TYPE_NORMAL", 
                    "type": "string", 
                    "description": "Specify if this is a normal Virtual Service, or if it is the parent or child of an SNI-enabled virtual hosted Virtual Service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD."
                }, 
                "enable_autogw": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Response traffic to clients will be sent back to the source MAC address of the connection, rather than statically sent to a default gateway."
                }, 
                "discovered_networks": {
                    "items": {
                        "$ref": "#/definitions/DiscoveredNetwork"
                    }, 
                    "type": "array", 
                    "description": "(internal-use) Discovered networks providing reachability for client facing Virtual Service IP. This field is used internally by Avi, not editable by the user. Field deprecated in 17.1.1."
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "remove_listening_port_on_vs_down": {
                    "type": "boolean", 
                    "description": "Remove listening port if VirtualService is down."
                }, 
                "ssl_key_and_certificate_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Select or create one or two certificates, EC and/or RSA, that will be presented to SSL/TLS terminated connections. It is a reference to an object of type SSLKeyAndCertificate."
                }, 
                "snat_ip": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "NAT'ted floating source IP Address(es) for upstream connection to servers."
                }, 
                "analytics_policy": {
                    "description": "Determines analytics settings for the application.", 
                    "$ref": "#/definitions/AnalyticsPolicy"
                }, 
                "sp_pool_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "GSLB pools used to manage site-persistence functionality. Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the GSLB manager. This is a read-only field for the user. It is a reference to an object of type Pool. Field introduced in 17.2.2."
                }, 
                "flow_label_type": {
                    "default": "NO_LABEL", 
                    "type": "string", 
                    "description": "Criteria for flow labelling. Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL."
                }, 
                "network_profile_ref": {
                    "type": "string", 
                    "description": "Determines network settings such as protocol, TCP or UDP, and related options for the protocol. It is a reference to an object of type NetworkProfile."
                }, 
                "weight": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "The Quality of Service weight to assign to traffic transmitted from this Virtual Service.  A higher weight will prioritize traffic versus other Virtual Services sharing the same Service Engines. Allowed values are 1-128.", 
                    "format": "int32"
                }, 
                "dns_info": {
                    "items": {
                        "$ref": "#/definitions/DnsInfo"
                    }, 
                    "type": "array", 
                    "description": "Service discovery specific data including fully qualified domain name, type and Time-To-Live of the DNS record. Note that only one of fqdn and dns_info setting is allowed."
                }, 
                "security_policy_ref": {
                    "type": "string", 
                    "description": "Security policy applied on the traffic of the Virtual Service. This policy is used to perform security actions such as Distributed Denial of Service (DDoS) attack mitigation, etc. It is a reference to an object of type SecurityPolicy. Field introduced in 18.2.1."
                }, 
                "content_rewrite": {
                    "description": "Profile used to match and rewrite strings in request and/or response body.", 
                    "$ref": "#/definitions/ContentRewriteProfile"
                }, 
                "traffic_clone_profile_ref": {
                    "type": "string", 
                    "description": "Server network or list of servers for cloning traffic. It is a reference to an object of type TrafficCloneProfile. Field introduced in 17.1.1."
                }, 
                "apic_contract_graph": {
                    "type": "string", 
                    "description": "The name of the Contract/Graph associated with the Virtual Service. Should be in the <Contract name> <Graph name> format. This is applicable only for Service Integration mode with Cisco APIC Controller . Field introduced in 17.2.12,18.1.2."
                }, 
                "avi_allocated_vip": {
                    "type": "boolean", 
                    "description": "(internal-use) VIP allocated by Avi in the Cloud infrastructure. Field deprecated in 17.1.1."
                }, 
                "vrf_context_ref": {
                    "type": "string", 
                    "description": "Virtual Routing Context that the Virtual Service is bound to. This is used to provide the isolation of the set of networks the application is attached to. It is a reference to an object of type VrfContext."
                }, 
                "description": {
                    "type": "string", 
                    "description": "User defined description for the object."
                }, 
                "subnet": {
                    "description": "Subnet providing reachability for client facing Virtual Service IP. Field deprecated in 17.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "service_metadata": {
                    "type": "string", 
                    "description": "Metadata pertaining to the Service provided by this virtual service. In Openshift/Kubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by Avi Vantage."
                }, 
                "cloud_type": {
                    "default": "CLOUD_NONE", 
                    "type": "string", 
                    "description": " Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP."
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "vh_domain_name": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The exact name requested from the client's SNI-enabled TLS hello domain name field. If this is a match, the parent VS will forward the connection to this child VS."
                }, 
                "cloud_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Cloud."
                }, 
                "enable_rhi": {
                    "type": "boolean", 
                    "description": "Enable Route Health Injection using the BGP Config in the vrf context."
                }, 
                "se_group_ref": {
                    "type": "string", 
                    "description": "The Service Engine Group to use for this Virtual Service. Moving to a new SE Group is disruptive to existing connections for this VS. It is a reference to an object of type ServiceEngineGroup."
                }, 
                "waf_policy_ref": {
                    "type": "string", 
                    "description": "WAF policy for the Virtual Service. It is a reference to an object of type WafPolicy. Field introduced in 17.2.1."
                }, 
                "network_ref": {
                    "type": "string", 
                    "description": "Manually override the network on which the Virtual Service is placed. It is a reference to an object of type Network. Field deprecated in 17.1.1."
                }, 
                "scaleout_ecmp": {
                    "type": "boolean", 
                    "description": "Disable re-distribution of flows across service engines for a virtual service. Enable if the network itself performs flow hashing with ECMP in environments such as GCP."
                }, 
                "sso_policy": {
                    "description": "Client Authentication and Authorization Policy for the virtualservice. Field introduced in 18.2.1.", 
                    "$ref": "#/definitions/SSOPolicy"
                }, 
                "nsx_securitygroup": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of NSX Service Groups representing the Clients which can access the Virtual IP of the Virtual Service. Field introduced in 17.1.1."
                }, 
                "cloud_config_cksum": {
                    "type": "string", 
                    "description": "Checksum of cloud configuration for VS. Internally set by cloud connector."
                }, 
                "min_pools_up": {
                    "type": "integer", 
                    "description": "Minimum number of UP pools to mark VS up. Field introduced in 18.2.1, 17.2.12.", 
                    "format": "int32"
                }, 
                "vsvip_ref": {
                    "type": "string", 
                    "description": "Mostly used during the creation of Shared VS, this field refers to entities that can be shared across Virtual Services. It is a reference to an object of type VsVip. Field introduced in 17.1.1."
                }, 
                "performance_limits": {
                    "description": "Optional settings that determine performance limits like max connections or bandwdith etc.", 
                    "$ref": "#/definitions/PerformanceLimits"
                }, 
                "use_bridge_ip_as_vip": {
                    "type": "boolean", 
                    "description": "Use Bridge IP as VIP on each Host in Mesos deployments."
                }, 
                "enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable the Virtual Service."
                }, 
                "floating_ip": {
                    "description": "Floating IP to associate with this Virtual Service. Field deprecated in 17.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "auto_allocate_floating_ip": {
                    "type": "boolean", 
                    "description": "Auto-allocate floating/elastic IP from the Cloud infrastructure. Field deprecated in 17.1.1."
                }, 
                "host_name_xlate": {
                    "type": "string", 
                    "description": "Translate the host name sent to the servers to this value.  Translate the host name sent from servers back to the value used by the client."
                }, 
                "vh_parent_vs_uuid": {
                    "type": "string", 
                    "description": "Specifies the Virtual Service acting as Virtual Hosting (SNI) parent."
                }, 
                "connections_rate_limit": {
                    "description": "Rate limit the incoming connections to this virtual service.", 
                    "$ref": "#/definitions/RateProfile"
                }, 
                "active_standby_se_tag": {
                    "default": "ACTIVE_STANDBY_SE_1", 
                    "type": "string", 
                    "description": "This configuration only applies if the VirtualService is in Legacy Active Standby HA mode and Load Distribution among Active Standby is enabled. This field is used to tag the VirtualService so that VirtualServices with the same tag will share the same Active ServiceEngine. VirtualServices with different tags will have different Active ServiceEngines. If one of the ServiceEngine's in the ServiceEngineGroup fails, all VirtualServices will end up using the same Active ServiceEngine. Redistribution of the VirtualServices can be either manual or automated when the failed ServiceEngine recovers. Redistribution is based on the auto redistribute property of the ServiceEngineGroup. Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2."
                }, 
                "pool_ref": {
                    "type": "string", 
                    "description": "The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type Pool."
                }, 
                "ign_pool_net_reach": {
                    "type": "boolean", 
                    "description": "Ignore Pool servers network reachability constraints for Virtual Service placement."
                }, 
                "limit_doser": {
                    "type": "boolean", 
                    "description": "Limit potential DoS attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while."
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "auto_allocate_ip": {
                    "type": "boolean", 
                    "description": "Auto-allocate VIP from the provided subnet. Field deprecated in 17.1.1."
                }, 
                "fqdn": {
                    "type": "string", 
                    "description": "DNS resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed."
                }, 
                "network_security_policy_ref": {
                    "type": "string", 
                    "description": "Network security policies for the Virtual Service. It is a reference to an object of type NetworkSecurityPolicy."
                }, 
                "vs_datascripts": {
                    "items": {
                        "$ref": "#/definitions/VSDataScripts"
                    }, 
                    "type": "array", 
                    "description": "Datascripts applied on the data traffic of the Virtual Service."
                }, 
                "services": {
                    "items": {
                        "$ref": "#/definitions/Service"
                    }, 
                    "type": "array", 
                    "description": "List of Services defined for this Virtual Service."
                }, 
                "avi_allocated_fip": {
                    "type": "boolean", 
                    "description": "(internal-use) FIP allocated by Avi in the Cloud infrastructure. Field deprecated in 17.1.1."
                }, 
                "vsvip_cloud_config_cksum": {
                    "type": "string", 
                    "description": "Checksum of cloud configuration for VsVip. Internally set by cloud connector. Field introduced in 17.2.9, 18.1.2."
                }, 
                "discovered_subnet": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "(internal-use) Discovered subnets providing reachability for client facing Virtual Service IP. This field is deprecated. Field deprecated in 17.1.1."
                }, 
                "bulk_sync_kvcache": {
                    "type": "boolean", 
                    "description": "(This is a beta feature). Sync Key-Value cache to the new SEs when VS is scaled out. For ex  SSL sessions are stored using VS's Key-Value cache. When the VS is scaled out, the SSL session information is synced to the new SE, allowing existing SSL sessions to be reused on the new SE. . Field introduced in 17.2.7, 18.1.1."
                }
            }
        }, 
        "ContentRewriteProfile": {
            "type": "object", 
            "properties": {
                "rewritable_content_ref": {
                    "type": "string", 
                    "description": "Rewrite only content types listed in this string group. Content types not present in this list are not rewritten. It is a reference to an object of type StringGroup."
                }, 
                "response_rewrite_enabled": {
                    "type": "boolean", 
                    "description": "Enable rewrite on response body."
                }, 
                "request_rewrite_enabled": {
                    "type": "boolean", 
                    "description": "Enable rewrite on request body."
                }, 
                "req_match_replace_pair": {
                    "items": {
                        "$ref": "#/definitions/MatchReplacePair"
                    }, 
                    "type": "array", 
                    "description": "Strings to be matched and replaced with on the request body."
                }, 
                "rsp_match_replace_pair": {
                    "items": {
                        "$ref": "#/definitions/MatchReplacePair"
                    }, 
                    "type": "array", 
                    "description": "Strings to be matched and replaced with on the response body."
                }
            }
        }, 
        "VirtualServiceApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/VirtualService"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "PerformanceLimits": {
            "type": "object", 
            "properties": {
                "max_concurrent_connections": {
                    "type": "integer", 
                    "description": "The maximum number of concurrent client conections allowed to the Virtual Service.", 
                    "format": "int32"
                }, 
                "max_throughput": {
                    "type": "integer", 
                    "description": "The maximum throughput per second for all clients allowed through the client side of the Virtual Service.", 
                    "format": "int32"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }, 
        "VsMigrateParams": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "new_vcpus": {
                    "type": "integer", 
                    "description": "Number of new_vcpus.", 
                    "format": "int32"
                }, 
                "to_new_se": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property to_new_se of obj type VsMigrateParams field type str  type boolean"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "from_se_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "to_host_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VIMgrHostRuntime."
                }, 
                "to_se_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": " Field introduced in 17.1.1."
                }
            }
        }, 
        "URIParam": {
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "tokens": {
                    "items": {
                        "$ref": "#/definitions/URIParamToken"
                    }, 
                    "type": "array", 
                    "description": "Token config either for the URI components or a constant string."
                }, 
                "type": {
                    "type": "string", 
                    "description": "URI param type. Enum options - URI_PARAM_TYPE_TOKENIZED."
                }
            }
        }, 
        "HTTPPolicies": {
            "required": [
                "http_policy_set_ref", 
                "index"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the virtual service HTTP policy collection.", 
                    "format": "int32"
                }, 
                "http_policy_set_ref": {
                    "type": "string", 
                    "description": "UUID of the virtual service HTTP policy collection. It is a reference to an object of type HTTPPolicySet."
                }
            }
        }, 
        "URIParamToken": {
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "str_value": {
                    "type": "string", 
                    "description": "Constant string to use as a token."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Token type for constructing the URI. Enum options - URI_TOKEN_TYPE_HOST, URI_TOKEN_TYPE_PATH, URI_TOKEN_TYPE_STRING, URI_TOKEN_TYPE_STRING_GROUP, URI_TOKEN_TYPE_REGEX."
                }, 
                "start_index": {
                    "type": "integer", 
                    "description": "Index of the starting token in the incoming URI.", 
                    "format": "int32"
                }, 
                "end_index": {
                    "type": "integer", 
                    "description": "Index of the ending token in the incoming URI. Allowed values are 0-65534. Special values are 65535 - 'end of string'.", 
                    "format": "int32"
                }
            }
        }, 
        "AnalyticsPolicy": {
            "type": "object", 
            "properties": {
                "udf_log_throttle": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "This setting limits the total number of UDF logs generated per second for this VS on each SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 10 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3.", 
                    "format": "int32"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "[DEPRECATED] Disable Analytics on this VirtualService. This will disable the collection of both metrics and logs. Please use following fields in AnalytcsProfile to control this behavior instead. disable_vs_analytics (for VirtualServices metrics), disable_server_analytics (for Pool metrics) and client_log_config (for logs). Field deprecated in 18.2.1. Field introduced in 17.2.4."
                }, 
                "client_insights_sampling": {
                    "description": "Placeholder for description of property client_insights_sampling of obj type AnalyticsPolicy field type str  type object", 
                    "$ref": "#/definitions/ClientInsightsSampling"
                }, 
                "full_client_logs": {
                    "description": "Placeholder for description of property full_client_logs of obj type AnalyticsPolicy field type str  type object", 
                    "$ref": "#/definitions/FullClientLogs"
                }, 
                "client_log_filters": {
                    "items": {
                        "$ref": "#/definitions/ClientLogFilter"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property client_log_filters of obj type AnalyticsPolicy field type str  type object"
                }, 
                "metrics_realtime_update": {
                    "description": "Settings to turn on realtime metrics and set duration for realtime updates.", 
                    "$ref": "#/definitions/MetricsRealTimeUpdate"
                }, 
                "significant_log_throttle": {
                    "default": 10, 
                    "type": "integer", 
                    "description": "This setting limits the number of significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3.", 
                    "format": "int32"
                }, 
                "client_insights": {
                    "default": "NO_INSIGHTS", 
                    "type": "string", 
                    "description": "Gain insights from sampled client to server HTTP requests and responses. Enum options - NO_INSIGHTS, PASSIVE, ACTIVE."
                }, 
                "all_headers": {
                    "type": "boolean", 
                    "description": "Log all headers. Field introduced in 18.1.4, 18.2.1."
                }
            }
        }, 
        "DnsRecord": {
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "ns": {
                    "items": {
                        "$ref": "#/definitions/DnsNsRdata"
                    }, 
                    "type": "array", 
                    "description": "Name Server information in NS record. Field introduced in 17.1.1."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Details of DNS record."
                }, 
                "algorithm": {
                    "default": "DNS_RECORD_RESPONSE_ROUND_ROBIN", 
                    "type": "string", 
                    "description": "Specifies the algorithm to pick the IP address(es) to be returned, when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is round-robin. Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH. Field introduced in 17.1.1."
                }, 
                "num_records_in_response": {
                    "type": "integer", 
                    "description": "Specifies the number of records returned by the DNS service. Enter 0 to return all records. Default is 0. Allowed values are 0-20. Special values are 0- 'Return all records'. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "ip_address": {
                    "items": {
                        "$ref": "#/definitions/DnsARdata"
                    }, 
                    "type": "array", 
                    "description": "IP address in A record."
                }, 
                "fqdn": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Fully Qualified Domain Name."
                }, 
                "cname": {
                    "description": "Canonical name in CNAME record.", 
                    "$ref": "#/definitions/DnsCnameRdata"
                }, 
                "service_locator": {
                    "items": {
                        "$ref": "#/definitions/DnsSrvRdata"
                    }, 
                    "type": "array", 
                    "description": "Service locator info in SRV record."
                }, 
                "ttl": {
                    "type": "integer", 
                    "description": "Time To Live for this DNS record.", 
                    "format": "int32"
                }, 
                "ip6_address": {
                    "items": {
                        "$ref": "#/definitions/DnsAAAARdata"
                    }, 
                    "type": "array", 
                    "description": "IPv6 address in AAAA record. Field introduced in 18.1.1."
                }, 
                "delegated": {
                    "type": "boolean", 
                    "description": "Configured FQDNs are delegated domains (i.e. they represent a zone cut). Field introduced in 17.1.2."
                }, 
                "wildcard_match": {
                    "type": "boolean", 
                    "description": "Enable wild-card match of fqdn  if an exact match is not found in the DNS table, the longest match is chosen by wild-carding the fqdn in the DNS request. Default is false. Field introduced in 17.1.1."
                }, 
                "type": {
                    "type": "string", 
                    "description": "DNS record type. Enum options - DNS_RECORD_OTHER, DNS_RECORD_A, DNS_RECORD_NS, DNS_RECORD_CNAME, DNS_RECORD_SOA, DNS_RECORD_PTR, DNS_RECORD_HINFO, DNS_RECORD_MX, DNS_RECORD_TXT, DNS_RECORD_RP, DNS_RECORD_DNSKEY, DNS_RECORD_AAAA, DNS_RECORD_SRV, DNS_RECORD_OPT, DNS_RECORD_RRSIG, DNS_RECORD_AXFR, DNS_RECORD_ANY."
                }
            }
        }, 
        "VsScaleinParams": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "scalein_primary": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property scalein_primary of obj type VsScaleinParams field type str  type boolean"
                }, 
                "admin_down": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property admin_down of obj type VsScaleinParams field type str  type boolean"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "from_se_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": " Field introduced in 17.1.1."
                }
            }
        }, 
        "L4Policies": {
            "required": [
                "index", 
                "l4_policy_set_ref"
            ], 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the virtual service L4 policy set. Field introduced in 17.2.7.", 
                    "format": "int32"
                }, 
                "l4_policy_set_ref": {
                    "type": "string", 
                    "description": "ID of the virtual service L4 policy set. It is a reference to an object of type L4PolicySet. Field introduced in 17.2.7."
                }
            }
        }, 
        "DnsARdata": {
            "required": [
                "ip_address"
            ], 
            "type": "object", 
            "properties": {
                "ip_address": {
                    "description": "IP address for FQDN.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "SidebandProfile": {
            "type": "object", 
            "properties": {
                "ip": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "IP Address of the sideband server."
                }, 
                "sideband_max_request_body_size": {
                    "default": 1024, 
                    "type": "integer", 
                    "description": "Maximum size of the request body that will be sent on the sideband. Allowed values are 0-16384.", 
                    "format": "int32"
                }
            }
        }, 
        "StringMatch": {
            "required": [
                "match_criteria"
            ], 
            "type": "object", 
            "properties": {
                "string_group_refs": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup."
                }, 
                "match_str": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "String value(s)."
                }, 
                "match_criteria": {
                    "type": "string", 
                    "description": "Criterion to use for string matching the HTTP request. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH."
                }
            }
        }, 
        "DnsInfo": {
            "type": "object", 
            "properties": {
                "cname": {
                    "description": "Canonical name in CNAME record. Field introduced in 17.2.1.", 
                    "$ref": "#/definitions/DnsCnameRdata"
                }, 
                "algorithm": {
                    "default": "DNS_RECORD_RESPONSE_CONSISTENT_HASH", 
                    "type": "string", 
                    "description": "Specifies the algorithm to pick the IP address(es) to be returned, when multiple entries are configured. This does not apply if num_records_in_response is 0. Default is consistent hash. Enum options - DNS_RECORD_RESPONSE_ROUND_ROBIN, DNS_RECORD_RESPONSE_CONSISTENT_HASH. Field introduced in 17.1.1."
                }, 
                "ttl": {
                    "type": "integer", 
                    "description": "Time to live for fqdn record. Default value is chosen from DNS profile for this cloud if no value provided.", 
                    "format": "int32"
                }, 
                "num_records_in_response": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Specifies the number of records returned for this FQDN. Enter 0 to return all records. Default is 0. Allowed values are 0-20. Special values are 0- 'Return all records'. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "type": {
                    "default": "DNS_RECORD_A", 
                    "type": "string", 
                    "description": "DNS record type. Enum options - DNS_RECORD_OTHER, DNS_RECORD_A, DNS_RECORD_NS, DNS_RECORD_CNAME, DNS_RECORD_SOA, DNS_RECORD_PTR, DNS_RECORD_HINFO, DNS_RECORD_MX, DNS_RECORD_TXT, DNS_RECORD_RP, DNS_RECORD_DNSKEY, DNS_RECORD_AAAA, DNS_RECORD_SRV, DNS_RECORD_OPT, DNS_RECORD_RRSIG, DNS_RECORD_AXFR, DNS_RECORD_ANY."
                }, 
                "fqdn": {
                    "type": "string", 
                    "description": "Fully qualified domain name."
                }, 
                "metadata": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Any metadata associated with this record. Field introduced in 17.2.2."
                }
            }
        }, 
        "VsSwitchoverParams": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": " Field introduced in 17.1.1."
                }, 
                "se_uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of se."
                }
            }
        }, 
        "Vip": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "discovered_networks": {
                    "items": {
                        "$ref": "#/definitions/DiscoveredNetwork"
                    }, 
                    "type": "array", 
                    "description": "Discovered networks providing reachability for client facing Vip IP. Field introduced in 17.1.1."
                }, 
                "port_uuid": {
                    "type": "string", 
                    "description": "(internal-use) Network port assigned to the Vip IP address. Field introduced in 17.1.1."
                }, 
                "availability_zone": {
                    "type": "string", 
                    "description": "Availability-zone to place the Virtual Service. Field introduced in 17.1.1."
                }, 
                "floating_ip": {
                    "description": "Floating IPv4 to associate with this Vip. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "auto_allocate_floating_ip": {
                    "type": "boolean", 
                    "description": "Auto-allocate floating/elastic IP from the Cloud infrastructure. Field introduced in 17.1.1."
                }, 
                "floating_subnet_uuid": {
                    "type": "string", 
                    "description": "If auto_allocate_floating_ip is True and more than one floating-ip subnets exist, then the subnet for the floating IP address allocation. Field introduced in 17.1.1."
                }, 
                "avi_allocated_vip": {
                    "type": "boolean", 
                    "description": "(internal-use) VIP allocated by Avi in the Cloud infrastructure. Field introduced in 17.1.1."
                }, 
                "ip6_address": {
                    "description": "IPv6 Address of the Vip. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "auto_allocate_ip_type": {
                    "default": "V4_ONLY", 
                    "type": "string", 
                    "description": "Specifies whether to auto-allocate only a V4 address, only a V6 address, or one of each type. Enum options - V4_ONLY, V6_ONLY, V4_V6. Field introduced in 18.1.1."
                }, 
                "ip_address": {
                    "description": "IPv4 Address of the VIP. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "subnet_uuid": {
                    "type": "string", 
                    "description": "If auto_allocate_ip is True, then the subnet for the Vip IP address allocation. This field is applicable only if the VirtualService belongs to an Openstack or AWS cloud, in which case it is mandatory, if auto_allocate is selected. Field introduced in 17.1.1."
                }, 
                "floating_subnet6_uuid": {
                    "type": "string", 
                    "description": "If auto_allocate_floating_ip is True and more than one floating-ip subnets exist, then the subnet for the floating IPv6 address allocation. Field introduced in 18.1.1."
                }, 
                "subnet": {
                    "description": "Subnet providing reachability for client facing Vip IP. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }, 
                "subnet6_uuid": {
                    "type": "string", 
                    "description": "If auto_allocate_ip is True, then the subnet for the Vip IPv6 address allocation. This field is applicable only if the VirtualService belongs to an Openstack or AWS cloud, in which case it is mandatory, if auto_allocate is selected. Field introduced in 18.1.1."
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": "Unique ID associated with the vip. Field introduced in 17.1.1."
                }, 
                "network_ref": {
                    "type": "string", 
                    "description": "Manually override the network on which the Vip is placed. It is a reference to an object of type Network. Field introduced in 17.1.1."
                }, 
                "floating_ip6": {
                    "description": "Floating IPv6 address to associate with this Vip. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "avi_allocated_fip": {
                    "type": "boolean", 
                    "description": "(internal-use) FIP allocated by Avi in the Cloud infrastructure. Field introduced in 17.1.1."
                }, 
                "auto_allocate_ip": {
                    "type": "boolean", 
                    "description": "Auto-allocate VIP from the provided subnet. Field introduced in 17.1.1."
                }, 
                "enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable or disable the Vip. Field introduced in 17.1.1."
                }, 
                "ipam_network_subnet": {
                    "description": "Subnet and/or Network for allocating VirtualService IP by IPAM Provider module. Field introduced in 17.1.1.", 
                    "$ref": "#/definitions/IPNetworkSubnet"
                }, 
                "subnet6": {
                    "description": "Subnet providing reachability for client facing Vip IPv6. Field introduced in 18.1.1.", 
                    "$ref": "#/definitions/IpAddrPrefix"
                }
            }
        }, 
        "DnsSrvRdata": {
            "required": [
                "port"
            ], 
            "type": "object", 
            "properties": {
                "priority": {
                    "type": "integer", 
                    "description": "Priority of the target hosting the service, low value implies higher priority for this service record. Allowed values are 0-65535.", 
                    "format": "int32"
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Service port. Allowed values are 0-65535.", 
                    "format": "int32"
                }, 
                "weight": {
                    "type": "integer", 
                    "description": "Relative weight for service records with same priority, high value implies higher preference for this service record. Allowed values are 0-65535.", 
                    "format": "int32"
                }, 
                "target": {
                    "default": "default.host", 
                    "type": "string", 
                    "description": "Canonical hostname, of the machine hosting the service, with no trailing period. 'default.host' is valid but not 'default.host.'."
                }
            }
        }, 
        "VsScaleoutParams": {
            "required": [
                "vip_id"
            ], 
            "type": "object", 
            "properties": {
                "new_vcpus": {
                    "type": "integer", 
                    "description": "Number of new_vcpus.", 
                    "format": "int32"
                }, 
                "to_new_se": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property to_new_se of obj type VsScaleoutParams field type str  type boolean"
                }, 
                "vip_id": {
                    "type": "string", 
                    "description": " Field introduced in 17.1.1."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "to_host_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type VIMgrHostRuntime."
                }, 
                "to_se_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type ServiceEngine."
                }, 
                "admin_up": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property admin_up of obj type VsScaleoutParams field type str  type boolean"
                }
            }
        }, 
        "DnsCnameRdata": {
            "required": [
                "cname"
            ], 
            "type": "object", 
            "properties": {
                "cname": {
                    "type": "string", 
                    "description": "Canonical name."
                }
            }
        }, 
        "ReplaceStringVar": {
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Type of replacement string - can be a variable exposed from datascript, value of an HTTP header or a custom user-input literal string. Enum options - DATASCRIPT_VAR, HTTP_HEADER_VAR, LITERAL_STRING."
                }, 
                "val": {
                    "type": "string", 
                    "description": "Value of the replacement string - name of variable exposed from datascript, name of the HTTP header or a custom user-input literal string."
                }
            }
        }, 
        "HTTPLocalFile": {
            "required": [
                "content_type", 
                "file_content"
            ], 
            "type": "object", 
            "properties": {
                "file_content": {
                    "type": "string", 
                    "description": "File content to used in the local HTTP response body."
                }, 
                "content_type": {
                    "type": "string", 
                    "description": "Mime-type of the content in the file."
                }
            }
        }, 
        "ApicVSPlacementReq": {
            "type": "object", 
            "properties": {
                "vgrp": {
                    "type": "string", 
                    "description": "vgrp of ApicVSPlacementReq."
                }, 
                "lifs": {
                    "items": {
                        "$ref": "#/definitions/Lif"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property lifs of obj type ApicVSPlacementReq field type str  type object"
                }, 
                "graph": {
                    "type": "string", 
                    "description": "graph of ApicVSPlacementReq."
                }, 
                "tenant_name": {
                    "type": "string", 
                    "description": "tenant_name of ApicVSPlacementReq."
                }, 
                "vdev": {
                    "type": "string", 
                    "description": "vdev of ApicVSPlacementReq."
                }, 
                "network_rel": {
                    "items": {
                        "$ref": "#/definitions/APICNetworkRel"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property network_rel of obj type ApicVSPlacementReq field type str  type object"
                }
            }
        }, 
        "HttpCookiePersistenceKey": {
            "type": "object", 
            "properties": {
                "hmac_key": {
                    "type": "string", 
                    "description": "hmac_key of HttpCookiePersistenceKey."
                }, 
                "name": {
                    "type": "string", 
                    "description": "name to use for cookie encryption."
                }, 
                "aes_key": {
                    "type": "string", 
                    "description": "aes_key of HttpCookiePersistenceKey."
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}