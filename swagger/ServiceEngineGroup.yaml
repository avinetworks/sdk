# GENERATED FILE - DO NOT EDIT THIS FILE
---
swagger: '2.0'
info:
    version: '18.2.2'
    title: Avi ServiceEngineGroup Object API
    contact:
        name: Avi Networks Inc.
        url: https://avinetworks.com/contact-us
        email: support@avinetworks.com
    description: |
        CLI
        ```
        - configure serviceenginegroup <key>
        - show serviceenginegroup <key>
        - redistribute serviceenginegroup <key>
        - clear serviceenginegroup <key>
        ```

        Examples
        - **serviceenginegroup_example_1**: To create a SE group that is suitable for a production application with a HA policy of shared active/active with a minimum scale out of 2 SE
          ```json
            {u'min_scaleout_per_vs': 2, u'ha_mode': u'HA_MODE_SHARED_PAIR', u'name': u'production-group'}
          ```

        - **serviceenginegroup_example_2**: To create a SE group that is of best effort category suitable for test deployments
          ```json
            {u'buffer_se': 0, u'ha_mode': u'HA_MODE_SHARED', u'max_se': 8, u'name': u'test-group'}
          ```


securityDefinitions:
    basicAuth:
        type: basic
        description: basic authentication
basePath: /api
paths:
    /serviceenginegroup:
        get:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: name
                    in: query
                    description: object name
                    required: false
                    type: string
                -   name: refers_to
                    in: query
                    description: Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid
                    type: string
                -   name: referred_by
                    in: query
                    description: Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid
                    type: string
                -   name: fields
                    in: query
                    description: List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.
                    type: string
                -   name: include_name
                    in: query
                    description: All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.
                    required: false
                    type: boolean
                -   name: skip_default
                    in: query
                    description: Default values are not set.
                    required: false
                    type: boolean
                -   name: join_subresources
                    in: query
                    description: It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.
                    type: string
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   name: cloud_uuid
                    in: query
                    description: Filter to get objects that belongs to a specific cloud using its uuid. Eg. cloud_uuid=cloud-xyz.
                    type: string
                -   name: cloud_ref.name
                    in: query
                    description: Filter to get objects that belongs to a specific cloud usings its name. This uses cloud name rather than uuid. Eg. cloud_ref.name=Default-Cloud.
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ServiceEngineGroupApiResponse"
                401:
                    description: log in failed
        post:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: body
                    name: body
                    description: ServiceEngineGroup object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                401:
                    description: log in failed
    /serviceenginegroup/{uuid}:
        get:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   name: name
                    in: query
                    description: object name
                    required: false
                    type: string
                -   name: X-Avi-Tenant
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   name: uuid
                    in: path
                    description: UUID of the object to fetch
                    required: true
                    type: string
                -   name: fields
                    in: query
                    description: List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.
                    type: string
                -   name: include_name
                    in: query
                    description: All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.
                    required: false
                    type: boolean
                -   name: skip_default
                    in: query
                    description: Default values are not set.
                    required: false
                    type: boolean
                -   name: join_subresources
                    in: query
                    description: It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                401:
                    description: log in failed
        put:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: body
                    name: body
                    description: ServiceEngineGroup object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                401:
                    description: log in failed
        patch:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: body
                    name: body
                    description: ServiceEngineGroup object creation
                    required: true
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        $ref: "#/definitions/ServiceEngineGroup"
                401:
                    description: log in failed
        delete:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: query
                    name: name
                    description: object name
                    required: false
                    type: string
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                204:
                    description: object deleted
                    schema:
                        type: string
                404:
                    description: not found

    /serviceenginegroup/{uuid}/redistribute:
        post:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: body
                    name: body
                    description: empty
                    required: true
                    schema:
                        type: object
                        additionalProperties:
                            type: string
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        type: string
                401:
                    description: log in failed
    /serviceenginegroup/{uuid}/clear:
        post:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   in: body
                    name: body
                    description: empty
                    required: true
                    schema:
                        type: object
                        additionalProperties:
                            type: string
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        type: string
                401:
                    description: log in failed

    /serviceenginegroup/{uuid}/runtime/:
        get:
            consumes:
                -   application/json
            produces:
                -   application/json
            parameters:
                -   in: header
                    name: X-Avi-Tenant
                    type: string
                    required: false
                    description: Avi Tenant Header
                -   name: X-Avi-Tenant-UUID
                    in: header
                    type: string
                    required: false
                    description: Avi Tenant Header UUID
                -   name: X-CSRFToken
                    in: header
                    type: string
                    required: false
                    description: Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.
                -   name: X-Avi-Version
                    in: header
                    type: string
                    required: true
                    description: The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.
                -   in: path
                    name: uuid
                    description: UUID of the object to fetch
                    required: true
                    type: string
            security:
                - basicAuth: []
            responses:
                200:
                    description: OK
                    schema:
                        type: string
                401:
                    description: log in failed
definitions:
    CustomTag:
        type: object
        required:
            -   tag_key
        properties:
            tag_key:
                description: "tag_key of CustomTag."
                type: string
            tag_val:
                description: "tag_val of CustomTag."
                type: string
    DosThreshold:
        type: object
        required:
            -   attack
            -   max_value
            -   min_value
        properties:
            attack:
                description: "Attack type. Enum options - LAND, SMURF, ICMP_PING_FLOOD, UNKOWN_PROTOCOL, TEARDROP, IP_FRAG_OVERRUN, IP_FRAG_TOOSMALL, IP_FRAG_FULL, IP_FRAG_INCOMPLETE, PORT_SCAN, TCP_NON_SYN_FLOOD_OLD, SYN_FLOOD, BAD_RST_FLOOD, MALFORMED_FLOOD, FAKE_SESSION, ZERO_WINDOW_STRESS, SMALL_WINDOW_STRESS, DOS_HTTP_TIMEOUT, DOS_HTTP_ERROR, DOS_HTTP_ABORT, DOS_SSL_ERROR, DOS_APP_ERROR, DOS_REQ_IP_RL_DROP, DOS_REQ_URI_RL_DROP, DOS_REQ_URI_SCAN_BAD_RL_DROP, DOS_REQ_URI_SCAN_UNKNOWN_RL_DROP, DOS_REQ_IP_URI_RL_DROP, DOS_CONN_IP_RL_DROP, DOS_SLOW_URL, TCP_NON_SYN_FLOOD, DOS_REQ_CIP_SCAN_BAD_RL_DROP, DOS_REQ_CIP_SCAN_UNKNOWN_RL_DROP, DOS_REQ_IP_RL_DROP_BAD, DOS_REQ_URI_RL_DROP_BAD, DOS_REQ_IP_URI_RL_DROP_BAD, POLICY_DROPS, DOS_CONN_RL_DROP, DOS_REQ_RL_DROP, DOS_REQ_HDR_RL_DROP, DOS_REQ_CUSTOM_RL_DROP."
                type: string
            max_value:
                description: "Maximum number of packets or connections or requests in a given interval of time to be deemed as attack."
                type: integer
                format: int32
            min_value:
                description: "Minimum number of packets or connections or requests in a given interval of time to be deemed as attack."
                type: integer
                format: int32
    DosThresholdProfile:
        type: object
        required:
            -   thresh_period
        properties:
            thresh_info:
                description: "Attack type, min and max values for DoS attack detection."
                type: array
                items:
                    $ref: '#/definitions/DosThreshold'
            thresh_period:
                description: "Timer value in seconds to collect DoS attack metrics based on threshold on the Service Engine for this Virtual Service."
                type: integer
                default: 5
                format: int32
    IpAddr:
        type: object
        required:
            -   addr
            -   type
        properties:
            addr:
                description: "IP address."
                type: string
            type:
                description: " Enum options - V4, DNS, V6."
                type: string
    IpAddrPrefix:
        type: object
        required:
            -   ip_addr
            -   mask
        properties:
            ip_addr:
                description: "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object"
                $ref: '#/definitions/IpAddr'
            mask:
                description: "Number of mask."
                type: integer
                format: int32
    IptableRule:
        type: object
        required:
            -   action
        properties:
            action:
                description: " Enum options - ACCEPT, DROP, REJECT, DNAT, MASQUERADE."
                type: string
            dnat_ip:
                description: "Placeholder for description of property dnat_ip of obj type IptableRule field type str  type object"
                $ref: '#/definitions/IpAddr'
            dst_ip:
                description: "Placeholder for description of property dst_ip of obj type IptableRule field type str  type object"
                $ref: '#/definitions/IpAddrPrefix'
            dst_port:
                description: "Placeholder for description of property dst_port of obj type IptableRule field type str  type object"
                $ref: '#/definitions/PortRange'
            input_interface:
                description: "input_interface of IptableRule."
                type: string
            output_interface:
                description: "output_interface of IptableRule."
                type: string
            proto:
                description: " Enum options - PROTO_TCP, PROTO_UDP, PROTO_ICMP, PROTO_ALL."
                type: string
            src_ip:
                description: "Placeholder for description of property src_ip of obj type IptableRule field type str  type object"
                $ref: '#/definitions/IpAddrPrefix'
            src_port:
                description: "Placeholder for description of property src_port of obj type IptableRule field type str  type object"
                $ref: '#/definitions/PortRange'
            tag:
                description: "tag of IptableRule."
                type: string
    IptableRuleSet:
        type: object
        required:
            -   chain
            -   table
        properties:
            chain:
                description: "chain of IptableRuleSet."
                type: string
            rules:
                description: "Placeholder for description of property rules of obj type IptableRuleSet field type str  type object"
                type: array
                items:
                    $ref: '#/definitions/IptableRule'
            table:
                description: "table of IptableRuleSet."
                type: string
    MetricsRealTimeUpdate:
        type: object
        required:
            -   enabled
        properties:
            duration:
                description: "Real time metrics collection duration in minutes. 0 for infinite. Special values are 0 - 'infinite'."
                type: integer
                default: 30
                format: int32
            enabled:
                description: "Enables real time metrics collection.  When disabled, 6 hour view is the most granular the system will track."
                type: boolean
    PortRange:
        type: object
        required:
            -   end
            -   start
        properties:
            end:
                description: "TCP/UDP port range end (inclusive). Allowed values are 1-65535."
                type: integer
                format: int32
            start:
                description: "TCP/UDP port range start (inclusive). Allowed values are 1-65535."
                type: integer
                format: int32
    ServiceEngineGroup:
        type: object
        required:
            -   name
        properties:
            _last_modified:
                description: "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                readOnly: True
                type: string
            accelerated_networking:
                description: "Enable accelerated networking option for Azure SE. Accelerated networking enables single root I/O virtualization (SR-IOV) to a SE VM. This improves networking performance. Field introduced in 17.2.14,18.1.5,18.2.1."
                type: boolean
            active_standby:
                description: "Service Engines in active/standby mode for HA failover."
                type: boolean
            additional_config_memory:
                description: "Indicates the percent of config memory used for config updates. Allowed values are 0-90. Field deprecated in 18.1.2. Field introduced in 18.1.1."
                type: integer
                format: int32
            advertise_backend_networks:
                description: "Advertise reach-ability of backend server networks via ADC through BGP for default gateway feature."
                type: boolean
            aggressive_failure_detection:
                description: "Enable aggressive failover configuration for ha."
                type: boolean
            algo:
                description: "In compact placement, Virtual Services are placed on existing SEs until max_vs_per_se limit is reached. Enum options - PLACEMENT_ALGO_PACKED, PLACEMENT_ALGO_DISTRIBUTED."
                type: string
                default: "PLACEMENT_ALGO_PACKED"
            allow_burst:
                description: "Allow SEs to be created using burst license. Field introduced in 17.2.5."
                type: boolean
            app_cache_percent:
                description: "A percent value of total SE memory reserved for application caching. This is an SE bootup property and requires SE restart. Allowed values are 0 - 100. Special values are 0- 'disable'. Field introduced in 18.2.2."
                type: integer
                format: int32
            archive_shm_limit:
                description: "Amount of SE memory in GB until which shared memory is collected in core archive. Field introduced in 17.1.3."
                type: integer
                default: 8
                format: int32
            async_ssl:
                description: "SSL handshakes will be handled by dedicated SSL Threads."
                type: boolean
            async_ssl_threads:
                description: "Number of Async SSL threads per se_dp. Allowed values are 1-16."
                type: integer
                default: 1
                format: int32
            auto_rebalance:
                description: "If set, Virtual Services will be automatically migrated when load on an SE is less than minimum or more than maximum thresholds. Only Alerts are generated when the auto_rebalance is not set."
                type: boolean
            auto_rebalance_capacity_per_se:
                description: "Capacities of SE for auto rebalance for each criteria. Field introduced in 17.2.4."
                type: array
                items:
                    type: integer
                format: int64
            auto_rebalance_criteria:
                description: "Set of criteria for SE Auto Rebalance. Enum options - SE_AUTO_REBALANCE_CPU, SE_AUTO_REBALANCE_PPS, SE_AUTO_REBALANCE_MBPS, SE_AUTO_REBALANCE_OPEN_CONNS, SE_AUTO_REBALANCE_CPS. Field introduced in 17.2.3."
                type: array
                items:
                    type: string
            auto_rebalance_interval:
                description: "Frequency of rebalance, if 'Auto rebalance' is enabled."
                type: integer
                default: 300
                format: int32
            auto_redistribute_active_standby_load:
                description: "Redistribution of virtual services from the takeover SE to the replacement SE can cause momentary traffic loss. If the auto-redistribute load option is left in its default off state, any desired rebalancing requires calls to REST API."
                type: boolean
            bgp_state_update_interval:
                description: "BGP peer state update interval. Allowed values are 5-100. Field introduced in 17.2.14,18.1.5,18.2.1."
                type: integer
                default: 10
                format: int32
            buffer_se:
                description: "Excess Service Engine capacity provisioned for HA failover."
                type: integer
                default: 1
                format: int32
            cloud_ref:
                description: " It is a reference to an object of type Cloud."
                type: string
            config_debugs_on_all_cores:
                description: "Enable config debugs on all cores of SE. Field introduced in 17.2.13,18.1.5,18.2.1."
                type: boolean
            connection_memory_percentage:
                description: "Percentage of memory for connection state. This will come at the expense of memory used for HTTP in-memory cache. Allowed values are 10-90."
                type: integer
                default: 50
                format: int32
            cpu_reserve:
                description: "Placeholder for description of property cpu_reserve of obj type ServiceEngineGroup field type str  type boolean"
                type: boolean
            cpu_socket_affinity:
                description: "Allocate all the CPU cores for the Service Engine Virtual Machines  on the same CPU socket. Applicable only for vCenter Cloud."
                type: boolean
            custom_securitygroups_data:
                description: "Custom Security Groups to be associated with data vNics for SE instances in OpenStack and AWS Clouds. Field introduced in 17.1.3."
                type: array
                items:
                    type: string
            custom_securitygroups_mgmt:
                description: "Custom Security Groups to be associated with management vNic for SE instances in OpenStack and AWS Clouds. Field introduced in 17.1.3."
                type: array
                items:
                    type: string
            custom_tag:
                description: "Custom tag will be used to create the tags for SE instance in AWS. Note this is not the same as the prefix for SE name."
                type: array
                items:
                    $ref: '#/definitions/CustomTag'
            dedicated_dispatcher_core:
                description: "Dedicate the core that handles packet receive/transmit from the network to just the dispatching function. Don't use it for TCP/IP and SSL functions."
                type: boolean
            description:
                description: "User defined description for the object."
                type: string
            disable_avi_securitygroups:
                description: "By default, Avi creates and manages security groups along with custom sg provided by user. Set this to True to disallow Avi to create and manage new security groups. Avi will only make use of custom security groups provided by user. This option is only supported for AWS cloud type. Field introduced in 17.2.13,18.1.4,18.2.1."
                type: boolean
            disable_csum_offloads:
                description: "Stop using TCP/UDP and IP checksum offload features of NICs. Field introduced in 17.1.14, 17.2.5, 18.1.1."
                type: boolean
            disable_gro:
                description: "Disable Generic Receive Offload (GRO) in DPDK poll-mode driver packet receive path.  GRO is on by default on NICs that do not support LRO (Large Receive Offload) or do not gain performance boost from LRO. Field introduced in 17.2.5, 18.1.1."
                type: boolean
                default: True
            disable_se_memory_check:
                description: "If set, disable the config memory check done in service engine. Field introduced in 18.1.2."
                type: boolean
            disable_tso:
                description: "Disable TCP Segmentation Offload (TSO) in DPDK poll-mode driver packet transmit path.  TSO is on by default on NICs that support it. Field introduced in 17.2.5, 18.1.1."
                type: boolean
                default: True
            disk_per_se:
                description: "Amount of disk space for each of the Service Engine virtual machines."
                type: integer
                default: 10
                format: int32
            distribute_load_active_standby:
                description: "Use both the active and standby Service Engines for Virtual Service placement in the legacy active standby HA mode."
                type: boolean
            distribute_queues:
                description: "Distributes queue ownership among cores so multiple cores handle dispatcher duties. Field introduced in 17.2.8."
                type: boolean
            enable_hsm_priming:
                description: "(This is a beta feature). Enable HSM key priming. If enabled, key handles on the hsm will be synced to SE before processing client connections. Field introduced in 17.2.7, 18.1.1."
                type: boolean
            enable_multi_lb:
                description: "Applicable only for Azure cloud with Basic SKU LB. If set, additional Azure LBs will be automatically created if resources in existing LB are exhausted. Field introduced in 17.2.10, 18.1.2."
                type: boolean
            enable_routing:
                description: "Enable routing for this ServiceEngineGroup ."
                type: boolean
            enable_vip_on_all_interfaces:
                description: "Enable VIP on all interfaces of SE. Field introduced in 17.1.1."
                type: boolean
                default: True
            enable_vmac:
                description: "Use Virtual MAC address for interfaces on which floating interface IPs are placed."
                type: boolean
            ephemeral_portrange_end:
                description: "End local ephemeral port number for outbound connections. Field introduced in 17.2.13, 18.1.5, 18.2.1."
                type: integer
                format: int32
            ephemeral_portrange_start:
                description: "Start local ephemeral port number for outbound connections. Field introduced in 17.2.13, 18.1.5, 18.2.1."
                type: integer
                format: int32
            extra_config_multiplier:
                description: "Multiplier for extra config to support large VS/Pool config."
                type: number
                format: double
            extra_shared_config_memory:
                description: "Extra config memory to support large Geo DB configuration. Field introduced in 17.1.1."
                type: integer
                format: int32
            floating_intf_ip:
                description: "If ServiceEngineGroup is configured for Legacy 1+1 Active Standby HA Mode, Floating IP's will be advertised only by the Active SE in the Pair. Virtual Services in this group must be disabled/enabled for any changes to the Floating IP's to take effect. Only active SE hosting VS tagged with Active Standby SE 1 Tag will advertise this floating IP when manual load distribution is enabled."
                type: array
                items:
                    $ref: '#/definitions/IpAddr'
            floating_intf_ip_se_2:
                description: "If ServiceEngineGroup is configured for Legacy 1+1 Active Standby HA Mode, Floating IP's will be advertised only by the Active SE in the Pair. Virtual Services in this group must be disabled/enabled for any changes to the Floating IP's to take effect. Only active SE hosting VS tagged with Active Standby SE 2 Tag will advertise this floating IP when manual load distribution is enabled."
                type: array
                items:
                    $ref: '#/definitions/IpAddr'
            flow_table_new_syn_max_entries:
                description: "Maximum number of flow table entries that have not completed TCP three-way handshake yet. Field introduced in 17.2.5."
                type: integer
                format: int32
            free_list_size:
                description: "Number of entries in the free list. Field introduced in 17.2.10, 18.1.2."
                type: integer
                default: 1024
                format: int32
            ha_mode:
                description: "High Availability mode for all the Virtual Services using this Service Engine group. Enum options - HA_MODE_SHARED_PAIR, HA_MODE_SHARED, HA_MODE_LEGACY_ACTIVE_STANDBY."
                type: string
                default: "HA_MODE_SHARED"
            hardwaresecuritymodulegroup_ref:
                description: " It is a reference to an object of type HardwareSecurityModuleGroup."
                type: string
            heap_minimum_config_memory:
                description: "Minimum required heap memory to apply any configuration. Allowed values are 0-100. Field introduced in 18.1.2."
                type: integer
                default: 8
                format: int32
            hm_on_standby:
                description: "Enable active health monitoring from the standby SE for all placed virtual services."
                type: boolean
                default: True
            host_attribute_key:
                description: "Key of a (Key, Value) pair identifying a label for a set of Nodes usually in Container Clouds. Needs to be specified together with host_attribute_value. SEs can be configured differently including HA modes across different SE Groups. May also be used for isolation between different classes of VirtualServices. VirtualServices' SE Group may be specified via annotations/labels. A OpenShift/Kubernetes namespace maybe annotated with a matching SE Group label as openshift.io/node-selector  apptype=prod. When multiple SE Groups are used in a Cloud with host attributes specified,just a single SE Group can exist as a match-all SE Group without a host_attribute_key."
                type: string
            host_attribute_value:
                description: "Value of a (Key, Value) pair identifying a label for a set of Nodes usually in Container Clouds. Needs to be specified together with host_attribute_key."
                type: string
            host_gateway_monitor:
                description: "Enable the host gateway monitor when service engine is deployed as docker container. Disabled by default. Field introduced in 17.2.4."
                type: boolean
            hypervisor:
                description: "Override default hypervisor. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN."
                type: string
            ignore_rtt_threshold:
                description: "Ignore RTT samples if it is above threshold. Field introduced in 17.1.6,17.2.2."
                type: integer
                default: 5000
                format: int32
            ingress_access_data:
                description: "Program SE security group ingress rules to allow VIP data access from remote CIDR type. Enum options - SG_INGRESS_ACCESS_NONE, SG_INGRESS_ACCESS_ALL, SG_INGRESS_ACCESS_VPC. Field introduced in 17.1.5."
                type: string
                default: "SG_INGRESS_ACCESS_ALL"
            ingress_access_mgmt:
                description: "Program SE security group ingress rules to allow SSH/ICMP management access from remote CIDR type. Enum options - SG_INGRESS_ACCESS_NONE, SG_INGRESS_ACCESS_ALL, SG_INGRESS_ACCESS_VPC. Field introduced in 17.1.5."
                type: string
                default: "SG_INGRESS_ACCESS_ALL"
            instance_flavor:
                description: "Instance/Flavor type for SE instance."
                type: string
            iptables:
                description: "Iptable Rules."
                type: array
                items:
                    $ref: '#/definitions/IptableRuleSet'
            least_load_core_selection:
                description: "Select core with least load for new flow."
                type: boolean
                default: True
            license_tier:
                description: "Specifies the license tier which would be used. This field by default inherits the value from cloud. Enum options - ENTERPRISE_16, ENTERPRISE_18. Field introduced in 17.2.5."
                type: string
            license_type:
                description: "If no license type is specified then default license enforcement for the cloud type is chosen. Enum options - LIC_BACKEND_SERVERS, LIC_SOCKETS, LIC_CORES, LIC_HOSTS, LIC_SE_BANDWIDTH, LIC_METERED_SE_BANDWIDTH. Field introduced in 17.2.5."
                type: string
            log_disksz:
                description: "Maximum disk capacity (in MB) to be allocated to an SE. This is exclusively used for debug and log data."
                type: integer
                default: 10000
                format: int32
            max_cpu_usage:
                description: "When CPU usage on an SE exceeds this threshold, Virtual Services hosted on this SE may be rebalanced to other SEs to reduce load. A new SE may be created as part of this process. Allowed values are 40-90."
                type: integer
                default: 80
                format: int32
            max_memory_per_mempool:
                description: "Max bytes that can be allocated in a single mempool. Field introduced in 18.1.5."
                type: integer
                default: 64
                format: int32
            max_public_ips_per_lb:
                description: "Applicable to Azure platform only. Maximum number of public IPs per Azure LB. . Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 30
                format: int32
            max_rules_per_lb:
                description: "Applicable to Azure platform only. Maximum number of rules per Azure LB. . Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 150
                format: int32
            max_scaleout_per_vs:
                description: "Maximum number of active Service Engines for the Virtual Service. Allowed values are 1-64."
                type: integer
                default: 4
                format: int32
            max_se:
                description: "Maximum number of Services Engines in this group. Allowed values are 0-1000."
                type: integer
                default: 10
                format: int32
            max_vs_per_se:
                description: "Maximum number of Virtual Services that can be placed on a single Service Engine. East West Virtual Services are excluded from this limit. Allowed values are 1-1000."
                type: integer
                default: 10
                format: int32
            mem_reserve:
                description: "Placeholder for description of property mem_reserve of obj type ServiceEngineGroup field type str  type boolean"
                type: boolean
                default: True
            memory_for_config_update:
                description: "Indicates the percent of memory reserved for config updates. Allowed values are 0-100. Field introduced in 18.1.2."
                type: integer
                default: 15
                format: int32
            memory_per_se:
                description: "Amount of memory for each of the Service Engine virtual machines."
                type: integer
                default: 2048
                format: int32
            mgmt_network_ref:
                description: "Management network to use for Avi Service Engines. It is a reference to an object of type Network."
                type: string
            mgmt_subnet:
                description: "Management subnet to use for Avi Service Engines."
                $ref: '#/definitions/IpAddrPrefix'
            min_cpu_usage:
                description: "When CPU usage on an SE falls below the minimum threshold, Virtual Services hosted on the SE may be consolidated onto other underutilized SEs. After consolidation, unused Service Engines may then be eligible for deletion. . Allowed values are 20-60."
                type: integer
                default: 30
                format: int32
            min_scaleout_per_vs:
                description: "Minimum number of active Service Engines for the Virtual Service. Allowed values are 1-64."
                type: integer
                default: 1
                format: int32
            min_se:
                description: "Minimum number of Services Engines in this group (relevant for SE AutoRebalance only). Allowed values are 0-1000. Field introduced in 17.2.13,18.1.3,18.2.1."
                type: integer
                default: 1
                format: int32
            minimum_connection_memory:
                description: "Indicates the percent of memory reserved for connections. Allowed values are 0-100. Field introduced in 18.1.2."
                type: integer
                default: 20
                format: int32
            minimum_required_config_memory:
                description: "Required available config memory to apply any configuration. Allowed values are 0-90. Field deprecated in 18.1.2. Field introduced in 18.1.1."
                type: integer
                format: int32
            n_log_streaming_threads:
                description: "Number of threads to use for log streaming. Allowed values are 1-100. Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 1
                format: int32
            name:
                description: "Name of the object."
                type: string
            non_significant_log_throttle:
                description: "This setting limits the number of non-significant logs generated per second per core on this SE. Default is 100 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3."
                type: integer
                default: 100
                format: int32
            num_dispatcher_cores:
                description: "Number of dispatcher cores (0,1,2,4,8 or 16). If set to 0, then number of dispatcher cores is deduced automatically. Allowed values are 0,1,2,4,8,16. Field introduced in 17.2.12, 18.1.3, 18.2.1."
                type: integer
                format: int32
            num_flow_cores_sum_changes_to_ignore:
                description: "Number of changes in num flow cores sum to ignore."
                type: integer
                default: 8
                format: int32
            openstack_availability_zone:
                description: " Field deprecated in 17.1.1."
                type: string
            openstack_availability_zones:
                description: " Field introduced in 17.1.1."
                type: array
                items:
                    type: string
            openstack_mgmt_network_name:
                description: "Avi Management network name."
                type: string
            openstack_mgmt_network_uuid:
                description: "Management network UUID."
                type: string
            os_reserved_memory:
                description: "Amount of extra memory to be reserved for use by the Operating System on a Service Engine."
                type: integer
                format: int32
            per_app:
                description: "Per-app SE mode is designed for deploying dedicated load balancers per app (VS). In this mode, each SE is limited to a max of 2 VSs. vCPUs in per-app SEs count towards licensing usage at 25% rate."
                type: boolean
            placement_mode:
                description: "If placement mode is 'Auto', Virtual Services are automatically placed on Service Engines. Enum options - PLACEMENT_MODE_AUTO."
                type: string
                default: "PLACEMENT_MODE_AUTO"
            realtime_se_metrics:
                description: "Enable or disable real time SE metrics."
                $ref: '#/definitions/MetricsRealTimeUpdate'
            se_bandwidth_type:
                description: "Select the SE bandwidth for the bandwidth license. Enum options - SE_BANDWIDTH_UNLIMITED, SE_BANDWIDTH_25M, SE_BANDWIDTH_200M, SE_BANDWIDTH_1000M, SE_BANDWIDTH_10000M. Field introduced in 17.2.5."
                type: string
            se_deprovision_delay:
                description: "Duration to preserve unused Service Engine virtual machines before deleting them. If traffic to a Virtual Service were to spike up abruptly, this SE would still be available to be utilized again rather than creating a new SE. If this value is set to 0, Controller will never delete any SEs and administrator has to manually cleanup unused SEs. Allowed values are 0-525600."
                type: integer
                default: 120
                format: int32
            se_dos_profile:
                description: "Placeholder for description of property se_dos_profile of obj type ServiceEngineGroup field type str  type object"
                $ref: '#/definitions/DosThresholdProfile'
            se_dpdk_pmd:
                description: "Determines if DPDK pool mode driver should be used or not   0  Automatically determine based on hypervisor/NIC type 1  Unconditionally use DPDK poll mode driver 2  Don't use DPDK poll mode driver. Allowed values are 0-2. Field introduced in 18.1.3."
                type: integer
                format: int32
            se_flow_probe_retries:
                description: "Flow probe retry count if no replies are received. Allowed values are 0-5. Field introduced in 18.1.4, 18.2.1."
                type: integer
                default: 2
                format: int32
            se_flow_probe_timer:
                description: "Timeout in milliseconds for flow probe entries. Allowed values are 10-200. Field introduced in 18.1.4, 18.2.1."
                type: integer
                default: 100
                format: int32
            se_ipc_udp_port:
                description: "UDP Port for SE_DP IPC in Docker bridge mode. Field introduced in 17.1.2."
                type: integer
                default: 1500
                format: int32
            se_name_prefix:
                description: "Prefix to use for virtual machine name of Service Engines."
                type: string
                default: "Avi"
            se_pcap_reinit_frequency:
                description: "Frequency in seconds at which periodically a PCAP reinit check is triggered. May be used in conjunction with the configuration pcap_reinit_threshold. [Valid range   15 mins - 12 hours, 0 - disables]. Allowed values are 900-43200. Special values are 0- 'disable'. Field introduced in 17.2.13, 18.1.3, 18.2.1."
                type: integer
                format: int32
            se_pcap_reinit_threshold:
                description: "Threshold for input packet receive errors in PCAP mode exceeding which a PCAP reinit is triggered. If not set, an unconditional reinit is performed. This value is checked every pcap_reinit_frequency interval. Field introduced in 17.2.13, 18.1.3, 18.2.1."
                type: integer
                format: int32
            se_probe_port:
                description: "TCP port on SE where echo service will be run. Field introduced in 17.2.2."
                type: integer
                default: 7
                format: int32
            se_remote_punt_udp_port:
                description: "UDP Port for punted packets in Docker bridge mode. Field introduced in 17.1.2."
                type: integer
                default: 1501
                format: int32
            se_sb_dedicated_core:
                description: "Sideband traffic will be handled by a dedicated core. Field introduced in 16.5.2, 17.1.9, 17.2.3."
                type: boolean
            se_sb_threads:
                description: "Number of Sideband threads per SE. Allowed values are 1-128. Field introduced in 16.5.2, 17.1.9, 17.2.3."
                type: integer
                default: 1
                format: int32
            se_thread_multiplier:
                description: "Multiplier for SE threads based on vCPU. Allowed values are 1-10."
                type: integer
                default: 1
                format: int32
            se_tracert_port_range:
                description: "Traceroute port range. Field introduced in 17.2.8."
                $ref: '#/definitions/PortRange'
            se_tunnel_mode:
                description: "Determines if DSR from secondary SE is active or not  0  Automatically determine based on hypervisor type. 1  Disable DSR unconditionally. 2  Enable DSR unconditionally. Allowed values are 0-2. Field introduced in 17.1.1."
                type: integer
                format: int32
            se_tunnel_udp_port:
                description: "UDP Port for tunneled packets from secondary to primary SE in Docker bridge mode. Field introduced in 17.1.3."
                type: integer
                default: 1550
                format: int32
            se_udp_encap_ipc:
                description: "Determines if SE-SE IPC messages are encapsulated in a UDP header  0  Automatically determine based on hypervisor type. 1  Use UDP encap unconditionally. Allowed values are 0-1. Field introduced in 17.1.2."
                type: integer
                format: int32
            se_use_dpdk:
                description: "Determines if DPDK library should be used or not   0  Automatically determine based on hypervisor type 1  Use DPDK if PCAP is not enabled 2  Don't use DPDK. Allowed values are 0-2. Field introduced in 18.1.3."
                type: integer
                format: int32
            se_vs_hb_max_pkts_in_batch:
                description: "Maximum number of aggregated vs heartbeat packets to send in a batch. Allowed values are 1-256. Field introduced in 17.1.1."
                type: integer
                default: 64
                format: int32
            se_vs_hb_max_vs_in_pkt:
                description: "Maximum number of virtualservices for which heartbeat messages are aggregated in one packet. Allowed values are 1-1024. Field introduced in 17.1.1."
                type: integer
                default: 256
                format: int32
            self_se_election:
                description: "Enable SEs to elect a primary amongst themselves in the absence of a connectivity to controller. Field introduced in 18.1.2."
                type: boolean
            service_ip6_subnets:
                description: "IPv6 Subnets assigned to the SE group. Required for VS group placement. Field introduced in 18.1.1."
                type: array
                items:
                    $ref: '#/definitions/IpAddrPrefix'
            service_ip_subnets:
                description: "Subnets assigned to the SE group. Required for VS group placement. Field introduced in 17.1.1."
                type: array
                items:
                    $ref: '#/definitions/IpAddrPrefix'
            shm_minimum_config_memory:
                description: "Minimum required shared memory to apply any configuration. Allowed values are 0-100. Field introduced in 18.1.2."
                type: integer
                default: 4
                format: int32
            significant_log_throttle:
                description: "This setting limits the number of significant logs generated per second per core on this SE. Default is 100 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3."
                type: integer
                default: 100
                format: int32
            ssl_preprocess_sni_hostname:
                description: "(Beta) Preprocess SSL Client Hello for SNI hostname extension.If set to True, this will apply SNI child's SSL protocol(s), if they are different from SNI Parent's allowed SSL protocol(s). Field introduced in 17.2.12, 18.1.3."
                type: boolean
                default: True
            tenant_ref:
                description: " It is a reference to an object of type Tenant."
                type: string
            udf_log_throttle:
                description: "This setting limits the number of UDF logs generated per second per core on this SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 100 logs per second. Set it to zero (0) to disable throttling. Field introduced in 17.1.3."
                type: integer
                default: 100
                format: int32
            url:
                description: "url"
                readOnly: True
                type: string
            uuid:
                description: "Unique object identifier of the object."
                type: string
            vcenter_clusters:
                description: "Placeholder for description of property vcenter_clusters of obj type ServiceEngineGroup field type str  type object"
                $ref: '#/definitions/VcenterClusters'
            vcenter_datastore_mode:
                description: " Enum options - VCENTER_DATASTORE_ANY, VCENTER_DATASTORE_LOCAL, VCENTER_DATASTORE_SHARED."
                type: string
                default: "VCENTER_DATASTORE_ANY"
            vcenter_datastores:
                description: "Placeholder for description of property vcenter_datastores of obj type ServiceEngineGroup field type str  type object"
                type: array
                items:
                    $ref: '#/definitions/VcenterDatastore'
            vcenter_datastores_include:
                description: "Placeholder for description of property vcenter_datastores_include of obj type ServiceEngineGroup field type str  type boolean"
                type: boolean
            vcenter_folder:
                description: "Folder to place all the Service Engine virtual machines in vCenter."
                type: string
                default: "AviSeFolder"
            vcenter_hosts:
                description: "Placeholder for description of property vcenter_hosts of obj type ServiceEngineGroup field type str  type object"
                $ref: '#/definitions/VcenterHosts'
            vcpus_per_se:
                description: "Number of vcpus for each of the Service Engine virtual machines."
                type: integer
                default: 1
                format: int32
            vip_asg:
                description: "When vip_asg is set, Vip configuration will be managed by Avi.User will be able to configure vip_asg or Vips individually at the time of create. Field introduced in 17.2.12, 18.1.2."
                $ref: '#/definitions/VipAutoscaleGroup'
            vs_host_redundancy:
                description: "Ensure primary and secondary Service Engines are deployed on different physical hosts."
                type: boolean
                default: True
            vs_scalein_timeout:
                description: "Time to wait for the scaled in SE to drain existing flows before marking the scalein done."
                type: integer
                default: 30
                format: int32
            vs_scalein_timeout_for_upgrade:
                description: "During SE upgrade, Time to wait for the scaled-in SE to drain existing flows before marking the scalein done."
                type: integer
                default: 30
                format: int32
            vs_scaleout_timeout:
                description: "Time to wait for the scaled out SE to become ready before marking the scaleout done."
                type: integer
                default: 30
                format: int32
            vs_se_scaleout_additional_wait_time:
                description: "Wait time for sending scaleout ready notification after Virtual Service is marked UP. In certain deployments, there may be an additional delay to accept traffic. For example, for BGP, some time is needed for route advertisement. Allowed values are 0-20. Field introduced in 18.1.5,18.2.1."
                type: integer
                format: int32
            vs_se_scaleout_ready_timeout:
                description: "Timeout in seconds for Service Engine to sendScaleout Ready notification of a Virtual Service. Allowed values are 0-60. Field introduced in 18.1.5,18.2.1."
                type: integer
                default: 25
                format: int32
            vs_switchover_timeout:
                description: "During SE upgrade in a legacy active/standby segroup, Time to wait for the new primary SE to accept flows before marking the switchover done. Field introduced in 17.2.13,18.1.4,18.2.1."
                type: integer
                default: 300
                format: int32
            vss_placement:
                description: "Parameters to place Virtual Services on only a subset of the cores of an SE. Field introduced in 17.2.5."
                $ref: '#/definitions/VssPlacement'
            vss_placement_enabled:
                description: "If set, Virtual Services will be placed on only a subset of the cores of an SE. Field introduced in 18.1.1."
                type: boolean
            waf_learning_interval:
                description: "Frequency with which SE publishes WAF learning. Allowed values are 1-43200. Field introduced in 18.1.2."
                type: integer
                default: 10
                format: int32
            waf_learning_memory:
                description: "Amount of memory reserved on SE for WAF learning. This can be atmost 5% of SE memory. Field introduced in 18.1.2."
                type: integer
                format: int32
            waf_mempool:
                description: "Enable memory pool for WAF. Field introduced in 17.2.3."
                type: boolean
                default: True
            waf_mempool_size:
                description: "Memory pool size used for WAF. Field introduced in 17.2.3."
                type: integer
                default: 64
                format: int32
    ServiceEngineGroupApiResponse:
        type: object
        required:
            - count
            - results
        properties:
            count:
                type: integer
                format: int32
            results:
                type: array
                items:
                    $ref: "#/definitions/ServiceEngineGroup"
    VcenterClusters:
        type: object
        properties:
            cluster_refs:
                description: " It is a reference to an object of type VIMgrClusterRuntime."
                type: array
                items:
                    type: string
            include:
                description: "Placeholder for description of property include of obj type VcenterClusters field type str  type boolean"
                type: boolean
    VcenterDatastore:
        type: object
        required:
            -   datastore_name
        properties:
            datastore_name:
                description: "datastore_name of VcenterDatastore."
                type: string
    VcenterHosts:
        type: object
        properties:
            host_refs:
                description: " It is a reference to an object of type VIMgrHostRuntime."
                type: array
                items:
                    type: string
            include:
                description: "Placeholder for description of property include of obj type VcenterHosts field type str  type boolean"
                type: boolean
    VipAutoscaleConfiguration:
        type: object
        properties:
            zones:
                description: "This is the list of AZ+Subnet in which Vips will be spawned. Field introduced in 17.2.12, 18.1.2."
                type: array
                items:
                    $ref: '#/definitions/VipAutoscaleZones'
    VipAutoscaleGroup:
        type: object
        properties:
            configuration:
                description: " Field introduced in 17.2.12, 18.1.2."
                $ref: '#/definitions/VipAutoscaleConfiguration'
            policy:
                description: " Field introduced in 17.2.12, 18.1.2."
                $ref: '#/definitions/VipAutoscalePolicy'
    VipAutoscalePolicy:
        type: object
        properties:
            dns_cooldown:
                description: "The amount of time, in seconds, when a Vip is withdrawn before a scaling activity starts. Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 60
                format: int32
            max_size:
                description: "The maximum size of the group. Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 5
                format: int32
            min_size:
                description: "The minimum size of the group. Field introduced in 17.2.12, 18.1.2."
                type: integer
                default: 1
                format: int32
            suspend:
                description: "When set, scaling is suspended. Field introduced in 17.2.12, 18.1.2."
                type: boolean
    VipAutoscaleZones:
        type: object
        properties:
            availability_zone:
                description: "Availability zone associated with the subnet. Field introduced in 17.2.12, 18.1.2."
                readOnly: True
                type: string
            fip_capable:
                description: "Determines if the subnet is capable of hosting publicly accessible IP. Field introduced in 17.2.12, 18.1.2."
                readOnly: True
                type: boolean
            subnet_uuid:
                description: "UUID of the subnet for new IP address allocation. Field introduced in 17.2.12, 18.1.2."
                type: string
    VssPlacement:
        type: object
        properties:
            core_nonaffinity:
                description: "Degree of core non-affinity for VS placement. Allowed values are 1-256. Field introduced in 17.2.5."
                type: integer
                default: 2
                format: int32
            num_subcores:
                description: "Number of sub-cores that comprise a CPU core. Allowed values are 1-128. Field introduced in 17.2.5."
                type: integer
                default: 4
                format: int32
