{
    "info": {
        "title": "Avi DebugServiceEngine Object API", 
        "version": "18.2.7", 
        "description": "CLI\n```\n- debug serviceengine <key>\n- show debug serviceengine <key>\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/debugserviceengine/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugServiceEngine object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugServiceEngine object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/debugserviceengine/{uuid}/faultruntime/": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/debugserviceengine": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "DebugServiceEngine object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngine"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/DebugServiceEngineApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "CaptureFilters": {
            "type": "object", 
            "properties": {
                "tcp_fin": {
                    "type": "boolean", 
                    "description": "TCP FIN flag filter. Field introduced in 18.2.5."
                }, 
                "dst_port_start": {
                    "type": "integer", 
                    "description": "Destination Port range filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "dst_port_end": {
                    "type": "integer", 
                    "description": "Destination Port range filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "src_port": {
                    "type": "integer", 
                    "description": "Source Port filter. Field introduced in 18.2.5.", 
                    "format": "int32"
                }, 
                "capture_ipc": {
                    "description": "Capture filter for SE IPC. Not applicable for Debug Virtual Service. Field introduced in 18.2.5.", 
                    "$ref": "#/definitions/CaptureIPC"
                }, 
                "tcp_push": {
                    "type": "boolean", 
                    "description": "TCP PUSH flag filter. Field introduced in 18.2.5."
                }, 
                "capture_ip": {
                    "description": "Per packet IP filter. Matches with source and destination address. Curently not applicable for DebugServiceEngine. Field introduced in 18.2.5.", 
                    "$ref": "#/definitions/DebugIpAddr"
                }, 
                "tcp_syn": {
                    "type": "boolean", 
                    "description": "TCP SYN flag filter. Field introduced in 18.2.5."
                }, 
                "ip_proto": {
                    "type": "string", 
                    "description": "IP Proto filter. Support for TCP only for now. Enum options - IP_TYPE_TCP. Field introduced in 18.2.5."
                }, 
                "tcp_ack": {
                    "type": "boolean", 
                    "description": "TCP ACK flag filter. Field introduced in 18.2.5."
                }, 
                "eth_proto": {
                    "type": "string", 
                    "description": "Ethernet Proto filter. Enum options - ETH_TYPE_IPV4. Field introduced in 18.2.5."
                }
            }
        }, 
        "IpAddrRange": {
            "required": [
                "begin", 
                "end"
            ], 
            "type": "object", 
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "end": {
                    "description": "Ending IP address of the range.", 
                    "$ref": "#/definitions/IpAddr"
                }
            }
        }, 
        "DebugSeFault": {
            "type": "object", 
            "properties": {
                "se_shm_malloc_fail_frequency": {
                    "type": "integer", 
                    "description": "Fail SE SHM malloc type at this frequency. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "se_malloc_fail_type": {
                    "type": "integer", 
                    "description": "Fail this SE malloc type. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "se_mbuf_cl_sanity": {
                    "type": "boolean", 
                    "description": "Toggle assert on mbuf cluster sanity check fail. Field introduced in 17.2.13,18.1.3,18.2.1."
                }, 
                "se_shm_malloc_fail_type": {
                    "type": "integer", 
                    "description": "Fail this SE SHM malloc type. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "se_malloc_fail_frequency": {
                    "type": "integer", 
                    "description": "Fail SE malloc type at this frequency. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "se_waf_learning_alloc_fail_frequency": {
                    "type": "integer", 
                    "description": "Fail SE WAF learning allocation at this frequency. Field introduced in 18.1.2.", 
                    "format": "int32"
                }, 
                "faults": {
                    "items": {
                        "$ref": "#/definitions/SeFault"
                    }, 
                    "type": "array", 
                    "description": "Set of faults to enable/disable. Field introduced in 18.2.7."
                }, 
                "se_waf_alloc_fail_frequency": {
                    "type": "integer", 
                    "description": "Fail SE WAF allocation at this frequency. Field introduced in 18.1.2.", 
                    "format": "int32"
                }
            }
        }, 
        "DebugSeAgent": {
            "required": [
                "log_level", 
                "sub_module", 
                "trace_level"
            ], 
            "type": "object", 
            "properties": {
                "log_every_n": {
                    "type": "integer", 
                    "description": "Log every nth message. Field introduced in 17.2.7.", 
                    "format": "int32"
                }, 
                "sub_module": {
                    "type": "string", 
                    "description": " Enum options - TASK_QUEUE_DEBUG, RPC_INFRA_DEBUG, JOB_MGR_DEBUG, TRANSACTION_DEBUG, SE_AGENT_DEBUG, SE_AGENT_METRICS_DEBUG, VIRTUALSERVICE_DEBUG, RES_MGR_DEBUG, SE_MGR_DEBUG, VI_MGR_DEBUG, METRICS_MANAGER_DEBUG, METRICS_MGR_DEBUG, EVENT_API_DEBUG, HS_MGR_DEBUG, ALERT_MGR_DEBUG, AUTOSCALE_MGR_DEBUG, APIC_AGENT_DEBUG, REDIS_INFRA_DEBUG, CLOUD_CONNECTOR_DEBUG, MESOS_METRICS_DEBUG, STATECACHE_MGR_DEBUG, NSX_AGENT_DEBUG, SE_AGENT_CPU_UTIL_DEBUG, SE_AGENT_MEM_UTIL_DEBUG, SE_RPC_PROXY_DEBUG, SE_AGENT_GSLB_DEBUG, METRICSAPI_SRV_DEBUG, SECURITYMGR_DEBUG, RES_MGR_READ_DEBUG, LICENSE_VMWSRVR_DEBUG."
                }, 
                "log_level": {
                    "type": "string", 
                    "description": " Enum options - LOG_LEVEL_DISABLED, LOG_LEVEL_INFO, LOG_LEVEL_WARNING, LOG_LEVEL_ERROR."
                }, 
                "trace_level": {
                    "type": "string", 
                    "description": " Enum options - TRACE_LEVEL_DISABLED, TRACE_LEVEL_ERROR, TRACE_LEVEL_DEBUG, TRACE_LEVEL_DEBUG_DETAIL."
                }
            }
        }, 
        "SeFault": {
            "required": [
                "fault_name"
            ], 
            "type": "object", 
            "properties": {
                "num_executions": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Number of times the fault should be executed. Allowed values are 1-4294967295. Field introduced in 18.2.7.", 
                    "format": "int32"
                }, 
                "arg": {
                    "type": "integer", 
                    "description": "Optional 64 bit unsigned integer that can be used within the enabled fault. Field introduced in 18.2.7.", 
                    "format": "int64"
                }, 
                "fault_name": {
                    "type": "string", 
                    "description": "The name of the target fault. Field introduced in 18.2.7."
                }, 
                "function_name": {
                    "type": "string", 
                    "description": "The name of the function that contains the target fault. Field introduced in 18.2.7."
                }
            }
        }, 
        "DebugSeDataplane": {
            "required": [
                "flag"
            ], 
            "type": "object", 
            "properties": {
                "flag": {
                    "type": "string", 
                    "description": " Enum options - DEBUG_DISPATCHER_FLOW, DEBUG_DISPATCHER_FLOW_DETAIL, DEBUG_DISPATCHER_FLOW_ALL, DEBUG_CONFIG, DEBUG_IP, DEBUG_IP_PKT_IN, DEBUG_IP_PKT_OUT, DEBUG_ARP, DEBUG_ARP_PKT_IN, DEBUG_ARP_PKT_OUT, DEBUG_ETHERNET, DEBUG_ETHERNET_PKT_IN, DEBUG_ETHERNET_PKT_OUT, DEBUG_ICMP, DEBUG_PCAP_RX, DEBUG_PCAP_TX, DEBUG_PCAP_DROP, DEBUG_PCAP_ALL, DEBUG_MISC, DEBUG_CRUD, DEBUG_POOL, DEBUG_PCAP_DOS, DEBUG_PCAP_HM, DEBUG_SE_APP, DEBUG_UDP, DEBUG_SE_VS_HB, DEBUG_ND, DEBUG_ERROR, DEBUG_NONE, DEBUG_ALL, DEBUG_STRICT, DEBUG_FLOW_MIRROR, DEBUG_NAT, DEBUG_NAT_ERROR, DEBUG_NAT_PKT, DEBUG_NAT_END2END, DEBUG_NAT_ALL, DEBUG_PCAP_SE_IPC."
                }
            }
        }, 
        "CaptureIPC": {
            "type": "object", 
            "properties": {
                "vs_hb": {
                    "type": "boolean", 
                    "description": "Vs heart beat filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_probe_all": {
                    "type": "boolean", 
                    "description": "Filter for all flow probe SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_all": {
                    "type": "boolean", 
                    "description": "Filter for all flow mirror SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_batched": {
                    "type": "boolean", 
                    "description": "IPC batched filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_del": {
                    "type": "boolean", 
                    "description": "Flow mirror del filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_tx_res": {
                    "type": "boolean", 
                    "description": "Filter for outgoing IPC response. Field introduced in 18.2.5."
                }, 
                "flow_probe": {
                    "type": "boolean", 
                    "description": "Flow probe filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "ipc_tx_req": {
                    "type": "boolean", 
                    "description": "Filter for outgoing IPC request. Field introduced in 18.2.5."
                }, 
                "ipc_rx_req": {
                    "type": "boolean", 
                    "description": "Filter for incoming IPC request. Field introduced in 18.2.5."
                }, 
                "ipc_rx_res": {
                    "type": "boolean", 
                    "description": "Filter for incoming IPC response. Field introduced in 18.2.5."
                }, 
                "flow_del_probe": {
                    "type": "boolean", 
                    "description": "Flow del probe filter for SE IPC. Field introduced in 18.2.5."
                }, 
                "flow_mirror_add": {
                    "type": "boolean", 
                    "description": "Flow mirror add filter for SE IPC. Field introduced in 18.2.5."
                }
            }
        }, 
        "IpAddr": {
            "required": [
                "addr", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": " Enum options - V4, DNS, V6."
                }, 
                "addr": {
                    "type": "string", 
                    "description": "IP address."
                }
            }
        }, 
        "DebugSeCpuShares": {
            "required": [
                "cpu", 
                "shares"
            ], 
            "type": "object", 
            "properties": {
                "cpu": {
                    "type": "integer", 
                    "description": "Number of cpu.", 
                    "format": "int32"
                }, 
                "shares": {
                    "type": "integer", 
                    "description": "Number of shares.", 
                    "format": "int32"
                }
            }
        }, 
        "DebugVirtualServiceCapture": {
            "type": "object", 
            "properties": {
                "duration": {
                    "type": "integer", 
                    "description": "Number of minutes to capture packets. Use 0 to capture until manually stopped. Special values are 0 - 'infinite'.", 
                    "format": "int32"
                }, 
                "pcap_ng": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable PcapNg for packet capture. Field introduced in 18.2.5."
                }, 
                "enable_ssl_session_key_capture": {
                    "type": "boolean", 
                    "description": "Enable SSL session key capture. Field introduced in 18.2.3."
                }, 
                "num_pkts": {
                    "type": "integer", 
                    "description": "Total number of packets to capture.", 
                    "format": "int32"
                }, 
                "pkt_size": {
                    "default": 128, 
                    "type": "integer", 
                    "description": "Number of bytes of each packet to capture. Use 0 to capture the entire packet. Allowed values are 64-1514. Special values are 0 - 'full capture'.", 
                    "format": "int32"
                }
            }
        }, 
        "DebugServiceEngine": {
            "type": "object", 
            "properties": {
                "capture": {
                    "type": "boolean", 
                    "description": "Enable/disable packet capture. Field introduced in 18.2.2."
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "seagent_debug": {
                    "items": {
                        "$ref": "#/definitions/DebugSeAgent"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property seagent_debug of obj type DebugServiceEngine field type str  type object"
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "capture_params": {
                    "description": "Params for SE pcap. Field introduced in 17.2.14,18.1.5,18.2.1.", 
                    "$ref": "#/definitions/DebugVirtualServiceCapture"
                }, 
                "debug_ip": {
                    "description": "Per packet IP filter for Service Engine PCAP. Matches with source and destination address. Field introduced in 17.2.14,18.1.5,18.2.1.", 
                    "$ref": "#/definitions/DebugIpAddr"
                }, 
                "tenant_ref": {
                    "type": "string", 
                    "description": " It is a reference to an object of type Tenant."
                }, 
                "capture_filters": {
                    "description": "Per packet capture filters for Debug Service Engine. Not applicable for DOS pcap capture. . Field introduced in 18.2.5.", 
                    "$ref": "#/definitions/CaptureFilters"
                }, 
                "name": {
                    "default": "VM name unknown", 
                    "type": "string", 
                    "description": "Name of the object."
                }, 
                "flags": {
                    "items": {
                        "$ref": "#/definitions/DebugSeDataplane"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property flags of obj type DebugServiceEngine field type str  type object"
                }, 
                "fault": {
                    "description": "Params for SE fault injection. Field introduced in 18.1.2.", 
                    "$ref": "#/definitions/DebugSeFault"
                }, 
                "cpu_shares": {
                    "items": {
                        "$ref": "#/definitions/DebugSeCpuShares"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property cpu_shares of obj type DebugServiceEngine field type str  type object"
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }
            }
        }, 
        "DebugIpAddr": {
            "type": "object", 
            "properties": {
                "prefixes": {
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property prefixes of obj type DebugIpAddr field type str  type object"
                }, 
                "ranges": {
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property ranges of obj type DebugIpAddr field type str  type object"
                }, 
                "addrs": {
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }, 
                    "type": "array", 
                    "description": "Placeholder for description of property addrs of obj type DebugIpAddr field type str  type object"
                }
            }
        }, 
        "DebugServiceEngineApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/DebugServiceEngine"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "IpAddrPrefix": {
            "required": [
                "ip_addr", 
                "mask"
            ], 
            "type": "object", 
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object", 
                    "$ref": "#/definitions/IpAddr"
                }, 
                "mask": {
                    "type": "integer", 
                    "description": "Number of mask.", 
                    "format": "int32"
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}