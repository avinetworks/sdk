{
    "info": {
        "title": "Avi ControllerProperties Object API", 
        "version": "18.2.2", 
        "description": "CLI\n```\n- configure controller properties\n- show controller properties\n```\n", 
        "contact": {
            "url": "https://avinetworks.com/contact-us", 
            "name": "Avi Networks Inc.", 
            "email": "support@avinetworks.com"
        }
    }, 
    "paths": {
        "/controllerproperties/{uuid}": {
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerProperties object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerProperties object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "204": {
                        "description": "object deleted", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "404": {
                        "description": "not found"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "UUID of the object to fetch", 
                        "in": "path", 
                        "name": "uuid"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }, 
        "/controllerproperties": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }, 
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "ControllerProperties object creation", 
                        "name": "body", 
                        "schema": {
                            "$ref": "#/definitions/ControllerProperties"
                        }
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }, 
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "$ref": "#/definitions/ControllerPropertiesApiResponse"
                        }
                    }, 
                    "401": {
                        "description": "log in failed"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "object name", 
                        "in": "query", 
                        "name": "name"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid", 
                        "name": "refers_to"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid", 
                        "name": "referred_by"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.", 
                        "name": "fields"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.", 
                        "in": "query", 
                        "name": "include_name"
                    }, 
                    {
                        "required": false, 
                        "type": "boolean", 
                        "description": "Default values are not set.", 
                        "in": "query", 
                        "name": "skip_default"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.", 
                        "name": "join_subresources"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header", 
                        "in": "header", 
                        "name": "X-Avi-Tenant"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Tenant Header UUID", 
                        "in": "header", 
                        "name": "X-Avi-Tenant-UUID"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version.", 
                        "in": "header", 
                        "name": "X-Avi-Version"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests.", 
                        "in": "header", 
                        "name": "X-CSRFToken"
                    }
                ], 
                "consumes": [
                    "application/json"
                ]
            }
        }
    }, 
    "definitions": {
        "ControllerProperties": {
            "type": "object", 
            "properties": {
                "vs_se_ping_fail": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Number of vs_se_ping_fail.", 
                    "format": "int32"
                }, 
                "portal_token": {
                    "type": "string", 
                    "description": "Token used for uploading tech-support to portal. Field introduced in 16.4.6,17.1.2."
                }, 
                "cluster_ip_gratuitous_arp_period": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for cluster ip gratuitous arp job.", 
                    "format": "int32"
                }, 
                "persistence_key_rotate_period": {
                    "type": "integer", 
                    "description": "Period for rotate app persistence keys job. Allowed values are 1-1051200. Special values are 0 - 'Disabled'.", 
                    "format": "int32"
                }, 
                "bm_use_ansible": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Use Ansible for SE creation in baremetal. Field introduced in 17.2.2."
                }, 
                "attach_ip_retry_interval": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Number of attach_ip_retry_interval.", 
                    "format": "int32"
                }, 
                "vs_se_vnic_fail": {
                    "default": 300, 
                    "type": "integer", 
                    "description": "Number of vs_se_vnic_fail.", 
                    "format": "int32"
                }, 
                "secure_channel_se_token_timeout": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Number of secure_channel_se_token_timeout.", 
                    "format": "int32"
                }, 
                "attach_ip_retry_limit": {
                    "default": 4, 
                    "type": "integer", 
                    "description": "Number of attach_ip_retry_limit.", 
                    "format": "int32"
                }, 
                "se_vnic_cooldown": {
                    "default": 120, 
                    "type": "integer", 
                    "description": "Number of se_vnic_cooldown.", 
                    "format": "int32"
                }, 
                "vnic_op_fail_time": {
                    "default": 180, 
                    "type": "integer", 
                    "description": "Number of vnic_op_fail_time.", 
                    "format": "int32"
                }, 
                "max_pcap_per_tenant": {
                    "default": 4, 
                    "type": "integer", 
                    "description": "Maximum number of pcap files stored per tenant.", 
                    "format": "int32"
                }, 
                "enable_memory_balancer": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable/Disable Memory Balancer. Field introduced in 17.2.8."
                }, 
                "vs_se_bootup_fail": {
                    "default": 480, 
                    "type": "integer", 
                    "description": "Number of vs_se_bootup_fail.", 
                    "format": "int32"
                }, 
                "seupgrade_fabric_pool_size": {
                    "default": 20, 
                    "type": "integer", 
                    "description": "Pool size used for all fabric commands during se upgrade.", 
                    "format": "int32"
                }, 
                "cleanup_expired_authtoken_timeout_period": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for auth token cleanup job. Field introduced in 18.1.1.", 
                    "format": "int32"
                }, 
                "vs_key_rotate_period": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Period for rotate VS keys job. Allowed values are 1-1051200. Special values are 0 - 'Disabled'.", 
                    "format": "int32"
                }, 
                "seupgrade_segroup_min_dead_timeout": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Time to wait before marking segroup upgrade as stuck.", 
                    "format": "int32"
                }, 
                "_last_modified": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS)."
                }, 
                "max_dead_se_in_grp": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Number of max_dead_se_in_grp.", 
                    "format": "int32"
                }, 
                "upgrade_lease_time": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Number of upgrade_lease_time.", 
                    "format": "int32"
                }, 
                "warmstart_vs_resync_wait_time": {
                    "default": 300, 
                    "type": "integer", 
                    "description": "Timeout for warmstart VS resync. Field introduced in 18.1.4, 18.2.1.", 
                    "format": "int32"
                }, 
                "se_create_timeout": {
                    "default": 900, 
                    "type": "integer", 
                    "description": "Number of se_create_timeout.", 
                    "format": "int32"
                }, 
                "query_host_fail": {
                    "default": 180, 
                    "type": "integer", 
                    "description": "Number of query_host_fail.", 
                    "format": "int32"
                }, 
                "vs_apic_scaleout_timeout": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Time to wait for the scaled out SE to become ready before marking the scaleout done, applies to APIC configuration only.", 
                    "format": "int32"
                }, 
                "unresponsive_se_reboot": {
                    "default": 300, 
                    "type": "integer", 
                    "description": "Number of unresponsive_se_reboot.", 
                    "format": "int32"
                }, 
                "process_pki_profile_timeout_period": {
                    "default": 1440, 
                    "type": "integer", 
                    "description": "Period for process PKI profile job. Field introduced in 18.1.1.", 
                    "format": "int32"
                }, 
                "se_offline_del": {
                    "default": 172000, 
                    "type": "integer", 
                    "description": "Number of se_offline_del.", 
                    "format": "int32"
                }, 
                "allow_ip_forwarding": {
                    "type": "boolean", 
                    "description": " Field introduced in 17.1.1."
                }, 
                "upgrade_dns_ttl": {
                    "default": 5, 
                    "type": "integer", 
                    "description": "Time to account for DNS TTL during upgrade. This is in addition to vs_scalein_timeout_for_upgrade in se_group. Field introduced in 17.1.1.", 
                    "format": "int32"
                }, 
                "fatal_error_lease_time": {
                    "default": 120, 
                    "type": "integer", 
                    "description": "Number of fatal_error_lease_time.", 
                    "format": "int32"
                }, 
                "dns_refresh_period": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for refresh pool and gslb DNS job.", 
                    "format": "int32"
                }, 
                "api_perf_logging_threshold": {
                    "default": 10000, 
                    "type": "integer", 
                    "description": "Threshold to log request timing in portal_performance.log and Server-Timing response header. Any stage taking longer than 1% of the threshold will be included in the Server-Timing header. Field introduced in 18.1.4, 18.2.1.", 
                    "format": "int32"
                }, 
                "vs_se_attach_ip_fail": {
                    "default": 3600, 
                    "type": "integer", 
                    "description": "Time to wait before marking attach IP operation on an SE as failed. Field introduced in 17.2.2.", 
                    "format": "int32"
                }, 
                "api_idle_timeout": {
                    "default": 15, 
                    "type": "integer", 
                    "description": " Allowed values are 0-1440.", 
                    "format": "int32"
                }, 
                "max_seq_vnic_failures": {
                    "default": 3, 
                    "type": "integer", 
                    "description": "Number of max_seq_vnic_failures.", 
                    "format": "int32"
                }, 
                "allow_unauthenticated_nodes": {
                    "type": "boolean", 
                    "description": "Placeholder for description of property allow_unauthenticated_nodes of obj type ControllerProperties field type str  type boolean"
                }, 
                "allow_unauthenticated_apis": {
                    "type": "boolean", 
                    "description": "Allow unauthenticated access for special APIs."
                }, 
                "safenet_hsm_version": {
                    "type": "string", 
                    "description": "Version of the safenet package installed on the controller. Field introduced in 16.5.2,17.2.3."
                }, 
                "se_from_marketplace": {
                    "default": "IMAGE", 
                    "type": "string", 
                    "description": "This setting decides whether SE is to be deployed from the cloud marketplace or to be created by the controller. The setting is applicable only when BYOL license is selected. Enum options - MARKETPLACE, IMAGE. Field introduced in 18.1.4, 18.2.1."
                }, 
                "warmstart_se_reconnect_wait_time": {
                    "default": 480, 
                    "type": "integer", 
                    "description": "Number of warmstart_se_reconnect_wait_time.", 
                    "format": "int32"
                }, 
                "process_locked_useraccounts_timeout_period": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "Period for process locked user accounts job. Field introduced in 18.1.1.", 
                    "format": "int32"
                }, 
                "consistency_check_timeout_period": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for consistency check job. Field introduced in 18.1.1.", 
                    "format": "int32"
                }, 
                "uuid": {
                    "type": "string", 
                    "description": "Unique object identifier of the object."
                }, 
                "dummy": {
                    "type": "integer", 
                    "description": "Number of dummy.", 
                    "format": "int32"
                }, 
                "max_seq_attach_ip_failures": {
                    "default": 3, 
                    "type": "integer", 
                    "description": "Maximum number of consecutive attach IP failures that halts VS placement. Field introduced in 17.2.2.", 
                    "format": "int32"
                }, 
                "cleanup_sessions_timeout_period": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for sessions cleanup job. Field introduced in 18.1.1.", 
                    "format": "int32"
                }, 
                "secure_channel_cleanup_timeout": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Period for secure channel cleanup job.", 
                    "format": "int32"
                }, 
                "ssl_certificate_expiry_warning_days": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "Number of days for SSL Certificate expiry warning.", 
                    "format": "int32"
                }, 
                "vs_se_vnic_ip_fail": {
                    "default": 120, 
                    "type": "integer", 
                    "description": "Number of vs_se_vnic_ip_fail.", 
                    "format": "int32"
                }, 
                "secure_channel_controller_token_timeout": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Number of secure_channel_controller_token_timeout.", 
                    "format": "int32"
                }, 
                "url": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "url"
                }, 
                "vs_se_create_fail": {
                    "default": 1500, 
                    "type": "integer", 
                    "description": "Number of vs_se_create_fail.", 
                    "format": "int32"
                }, 
                "cloud_reconcile": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Enable/Disable periodic reconcile for all the clouds. Field introduced in 17.2.14,18.1.5,18.2.1."
                }, 
                "crashed_se_reboot": {
                    "default": 900, 
                    "type": "integer", 
                    "description": "Number of crashed_se_reboot.", 
                    "format": "int32"
                }, 
                "appviewx_compat_mode": {
                    "type": "boolean", 
                    "description": "Export configuration in appviewx compatibility mode. Field introduced in 17.1.1."
                }, 
                "vs_awaiting_se_timeout": {
                    "default": 60, 
                    "type": "integer", 
                    "description": "Number of vs_awaiting_se_timeout.", 
                    "format": "int32"
                }, 
                "enable_api_sharding": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "This setting enables the controller leader to shard API requests to the followers (if any). Field introduced in 18.1.5, 18.2.1."
                }, 
                "se_failover_attempt_interval": {
                    "default": 300, 
                    "type": "integer", 
                    "description": "Interval between attempting failovers to an SE.", 
                    "format": "int32"
                }, 
                "dead_se_detection_timer": {
                    "default": 360, 
                    "type": "integer", 
                    "description": "Number of dead_se_detection_timer.", 
                    "format": "int32"
                }
            }
        }, 
        "ControllerPropertiesApiResponse": {
            "required": [
                "count", 
                "results"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "results": {
                    "items": {
                        "$ref": "#/definitions/ControllerProperties"
                    }, 
                    "type": "array"
                }
            }
        }
    }, 
    "basePath": "/api", 
    "swagger": "2.0", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic", 
            "description": "basic authentication"
        }
    }
}